cscope 15 /opt/linux-2.6.22/drivers/zz_driver -q 0000003234 0000193844
	@adc/adc_spi.c

16 
	~"adc_•i.h
"

19 
	gkbuf
;

20 vﬁ©ûê*
	g∑ddr
 ;

21 vﬁ©ûê
	gaddr
;

23 
•i_c⁄fig
();

26 
	$•i_c⁄fig
()

28 
tmp
;

29 
	`¥ötk
("spi_config.... \n");

31 
∑ddr
 = 
	`i‹em≠
(
AT91A_PMC_PCER
, 4);

32 *
∑ddr
 |= ((0x1<<2)|(0x1<<3)|(0x1<<12));

34 
	`AT91F_PMC_E«bÀPîùhClock
(
AT91C_BASE_PMC
, (() 1 << (12)));

35 
	`AT91F_PMC_E«bÀPîùhClock
(
AT91C_BASE_PMC
, (() 1 << (2)));

36 
	`AT91F_PMC_E«bÀPîùhClock
(
AT91C_BASE_PMC
, (() 1 << (3)));

42 
∑ddr
 = 
	`i‹em≠
(0xfffff400, 0xA8);

44 *
∑ddr
 |=
AT91C_PA27_SPI0_NPCS1
;

45 *(
∑ddr
+(0x10>>2)Ë|
AT91C_PA27_SPI0_NPCS1
;

46 *(
∑ddr
+(0x60>>2)) |= ~(0xfffffffe);

47 *(
∑ddr
+(0x64>>2)) |= (0xfffffffe);

50 
	`AT91F_PIO_CfgOuçut
(
AT91C_BASE_PIOB
,
AT91C_PA27_SPI0_NPCS1
);

52 
	`AT91F_PIO_CfgPuŒup
(
AT91C_BASE_PIOB
,0xfffffffe);

54 
tmp
 = 0 ;

55 
tmp
=0;tmp<200000;tmp++);

59 *(
∑ddr
+(0x74>>2)Ë
AT91C_PA27_SPI0_NPCS1
;

60 *(
∑ddr
+(0x70>>2)Ë((
AT91C_PA0_SPI0_MISO
 )|(
AT91C_PA2_SPI0_SPCK
 )|(
AT91C_PA1_SPI0_MOSI
));

61 *(
∑ddr
+1Ë((
AT91C_PA0_SPI0_MISO
 )|(
AT91C_PA2_SPI0_SPCK
 )|(
AT91C_PA1_SPI0_MOSI
)| 
AT91C_PA27_SPI0_NPCS1
);

63 *(
∑ddr
+(0x60>>2)Ë|~((
AT91C_PA0_SPI0_MISO
 )|(
AT91C_PA2_SPI0_SPCK
 )|(
AT91C_PA1_SPI0_MOSI
)| 
AT91C_PA27_SPI0_NPCS1
);

64 *(
∑ddr
+(0x64>>2)Ë|((
AT91C_PA0_SPI0_MISO
 )|(
AT91C_PA2_SPI0_SPCK
 )|(
AT91C_PA1_SPI0_MOSI
)| 
AT91C_PA27_SPI0_NPCS1
);

67 
	`AT91F_PIO_CfgPîùh
(
AT91C_BASE_PIOA
,((Ë
AT91C_PA0_SPI0_MISO
 ) |(()
AT91C_PA2_SPI0_SPCK
 )|
AT91C_PA1_SPI0_MOSI
 ,((Ë
AT91C_PA27_SPI0_NPCS1
 ));

70 
	`AT91F_PIO_CfgPuŒup
(
AT91C_BASE_PIOA
,(
AT91C_PA2_SPI0_SPCK
 | 
AT91C_PA4_SPI0_NPCS1
 | 
AT91C_PA0_SPI0_MISO
|
AT91C_PA1_SPI0_MOSI
));

71 
	`AT91F_PIO_CfgPuŒup
(
AT91C_BASE_PIOA
,
AT91C_PA27_SPI0_NPCS1
);

74 
	`iounm≠
(
∑ddr
);

76 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_CR
,4);

77 *
∑ddr
 |
AT91_SPI_RESTART
;

78 
	`iounm≠
(
∑ddr
);

84 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_MR
,4);

85 *
∑ddr
 = 
AT91_SPI_NPCS_MASTER
;

86 
	`iounm≠
(
∑ddr
);

89 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_CSR1
,4);

90 *
∑ddr
 = (0x3 | (
AT91C_SPI_DLYBS
 & (
ADC_DLYS
)Ë| (
AT91C_SPI_DLYBCT
 & 
DATAFLASH_TCHS
) | (0x30 << 8)| (0x7 << 4));

91 
	`iounm≠
(
∑ddr
);

92 
	`¥ötk
("spi_config is OK \n");

94 
	}
}

97 
	$•i_›í
(
öode
 *öode,
fûe
 *file)

99 
	`¥ötk
("*****************************************\n");

100 
	`¥ötk
("openÅhe spi justÇow\n");

101 
	`•i_c⁄fig
();

102 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_CR
,4);

103 *
∑ddr
 |
AT91_SPI_ENABLE
;

104 
	`iounm≠
(
∑ddr
);

108 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_TDR
,4);

109 *
∑ddr
 |= 0x000D5555;

110 
	`iounm≠
(
∑ddr
);

111 
	`¥ötk
("openÅhe spi over....\n");

115 !(
AT91_SPI0_SR
 & (0x1 <<16)))

117 
AT91_SPI0_CR
 = 0x1;

118 
˛ock
 = 
AT91_SPI0_CR
;

121 
	`¥ötk
("*****************************************\n");

123 
	}
}

125 
ssize_t
 
	$•i_ªad
(
fûe
 *fûe, 
__u£r
 *
buf
, 
size_t
 
cou¡
, 
loff_t
 *
f_pos
)

127 
	`¥ötk
("*****************************************\n");

128 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_SR
,4);

129 
	`¥ötk
("spiÑead .....\n");

131 !((*
∑ddr
) & 0x1))

133 
	`iounm≠
(
∑ddr
);

134 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_SR
,4);

136 
	`iounm≠
(
∑ddr
);

137 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_RDR
,4);

138 
kbuf
 = ()(*(
∑ddr
) & 0xffff);

139 
	`¥ötk
("thênumbî i†0x%x \n",
kbuf
);

140 
	`iounm≠
(
∑ddr
);

141 
	`put_u£r
(
kbuf
,(*)
buf
);

143 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_SR
,4);

146 if(*
∑ddr
 & (0x1<<3)){

148 
	`¥ötk
("oversÉrror\n");

149 
	`iounm≠
(
∑ddr
);

153 if(*
∑ddr
 & (0x1<<4)){

154 
	`¥ötk
("end ofÑecive\n");

155 
	`iounm≠
(
∑ddr
);

158 
	`iounm≠
(
∑ddr
);

160 
	`¥ötk
("copt_to_user is over\n");

161 
	`¥ötk
("*****************************************\n");

163 
	}
}

165 
ssize_t
 
	$•i_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf
, 
size_t
 
cou¡
, 
loff_t
 *
f_pos
)

168 
	}
}

171 
	$•i_io˘l
(
öode
 *öode, 
fûe
 *fûe,
cmd
, 
¨g
)

174 
	}
}

177 
	$•i_ªÀa£
(
öode
 *öode, 
fûe
 *file)

179 
∑ddr
 = 
	`i‹em≠
(
AT91A_SPI0_SR
,4);

180 *
∑ddr
 |=0x02;

181 
	`¥ötk
("adc_spi_Release^.........\n");

182 
	`¥ötk
("*****************************************\n");

183 
	`iounm≠
(
∑ddr
);

185 
	}
}

193 
fûe_›î©i⁄s
 
	g•i_f›s
={

195 
›í
:
•i_›í
,

196 
ªad
:
•i_ªad
,

197 
wrôe
:
•i_wrôe
,

198 
io˘l
:
•i_io˘l
,

199 
ªÀa£
:
•i_ªÀa£
,

204 
__öô
 
	$•i_drivî_öô
()

206 
rc
;

207 
	`¥ötk
("*****************************************\n");

208 
	`¥ötk
("startÅo spiÑeg chrder....\n");

210 i‡((
rc
 = 
	`ªgi°î_chrdev
(
SPI_MAJOR
, 
DEVICENAME
 , &
•i_f›s
)) < 0){

211 
	`¥ötk
("•i_drivî: c™'àgë maj‹ %d\n", 
SPI_MAJOR
);

214 
	`¥ötk
("thêmoduÀád¯i†ö£π. MAJOR i†%d\n", 
SPI_MAJOR
);

215 
	`¥ötk
("*****************************************\n");

217 
	}
}

220 
__exô
 
	$•i_drivî_exô
()

222 
	`uƒegi°î_chrdev
(
SPI_MAJOR
, 
DEVICENAME
);

223 
	`¥ötk
("exitÅhe spi driver\n");

225 
	}
}

227 
moduÀ_öô
(
•i_drivî_öô
);

228 
moduÀ_exô
(
•i_drivî_exô
);

230 
MODULE_LICENSE
("GPL");

231 
MODULE_AUTHOR
("Karsten Jeppesen <karsten@jeppesens.com>");

232 
MODULE_DESCRIPTION
("Driver forÅhe Total Impact briQ frontÖanel");

	@adc/adc_spi.h

16 #i‚de‡
adc_h


17 
	#adc_h


	)

19 
	~<löux/kî√l.h
>

20 
	~<löux/moduÀ.h
>

22 
	~<löux/mm.h
>

23 
	~<asm/uac˚ss.h
>

24 
	~<asm/io.h
>

28 
	#DELAY
 100000

	)

29 
	#AT91_SPI_NPCS_MASTER
 (0xD0001)

	)

30 
	#AT91_SPI_RESTART
 (0x1 <<7)

	)

31 
	#AT91_SPI_ENABLE
 (0x1)

	)

32 
	#ADC_DLYS
 (0xFF<<16)

	)

33 
	#ADC_3US
 (0xC0<<16)

	)

34 
	#AT91_CKGR_PLLBR
 (*(vﬁ©ûê*)(0xFFFFFC2C))

	)

35 
	#AT91_PMC_MCKR
 (*(vﬁ©ûê*)(0xFFFFFC30))

	)

37 
	#MCR
 (*(*Ë0xFFFFFC30)

	)

38 
	#MCF
 (*(*Ë0xFFFFFC24)

	)

39 
	#MO
 (*(*Ë0xFFFFFC20)

	)

41 
	#PMC_IER
 (*(*Ë0xFFFFFC60)

	)

42 
	#PMC_SR
 (*(*Ë0xFFFFFC68)

	)

44 
	#PPCK
 (*(*Ë0xFFFFFC18)

	)

45 
	#SPI_RCR
 (*(*Ë0xFFFC8104)

	)

47 
	#AT91C_BASE_PMC
 (0xFFFFFC00)

	)

48 
	#AT91A_PMC_PCER
 (0xFFFFFC10)

	)

49 
	#AT91C_PA27_SPI0_NPCS1
 ((Ë1 << 27)

	)

50 
	#AT91C_PA0_SPI0_MISO
 ((Ë1 << 0)

	)

51 
	#AT91C_PA2_SPI0_SPCK
 ((Ë1 << 2)

	)

52 
	#AT91C_PA1_SPI0_MOSI
 ((Ë1 << 1)

	)

53 
	#AT91C_SPI_SCBR
 (() 0xFF << 8)

54 
	#AT91C_SPI_DLYBS
 (() 0xFF << 16)

55 
	#AT91C_SPI_DLYBCT
 ((Ë0xFF << 24)

	)

57 
	#AT91_PIOA_ASR
 (*(*Ë0xFFFFF470)

	)

58 
	#AT91_PIOB_ASR
 (*(*Ë0xFFFFF670)

	)

60 
	#AT91_PIOA_PER
 (*(*Ë0xFFFFF400)

	)

61 
	#AT91_PIOA_PDR
 (*(*Ë0xFFFFF404)

	)

62 
	#AT91_PIOB_PER
 (*(*Ë0xFFFFF600)

	)

63 
	#AT91_PIOB_PDR
 (*(*Ë0xFFFFF604)

	)

66 
	#AT91A_SPI0_CR
 (0xFFFC8000)

	)

67 
	#AT91A_SPI0_MR
 (0xFFFC8004)

	)

68 
	#AT91A_SPI0_CSR1
 (0xFFFC8034)

	)

69 
	#AT91A_SPI0_TDR
 (0xFFFC800c)

	)

70 
	#AT91A_SPI0_SR
 (0xFFFC8010)

	)

71 
	#AT91A_SPI0_RDR
 (0xFFFC8008)

	)

75 
	#AT91_SPI0_CR
 (*(vﬁ©ûê*)(0xFFFC8000))

	)

76 
	#AT91_SPI0_MR
 (*(vﬁ©ûê*)(0xFFFC8004))

	)

78 
	#AT91_SPI0_RDR
 (*(vﬁ©ûê*)(0xFFFC8008))

	)

79 
	#AT91_SPI0_TDR
 (*(vﬁ©ûê*)(0xFFFC800c))

	)

80 
	#AT91_SPI0_SR
 (*(vﬁ©ûê*)(0xFFFC8010))

	)

81 
	#AT91_SPI0_IER
 (*(vﬁ©ûê*)(0xFFFC8014))

	)

82 
	#AT91_SPI0_IDR
 (*(vﬁ©ûê*)(0xFFFC8018))

	)

83 
	#AT91_SPI0_IMR
 (*(vﬁ©ûê*)(0xFFFC801c))

	)

85 
	#AT91_SPI0_CSR0
 (*(vﬁ©ûê*)(0xFFFC8030))

	)

86 
	#AT91_SPI0_CSR1
 (*(vﬁ©ûê*)(0xFFFC8034))

	)

87 
	#AT91_SPI0_CSR2
 (*(vﬁ©ûê*)(0xFFFC8038))

	)

88 
	#AT91_SPI0_CSR3
 (*(vﬁ©ûê*)(0xFFFC803c))

	)

90 
	#DATAFLASH_TCSS
 (0xc << 16)

91 
	#DATAFLASH_TCHS
 (0x1 << 24)

92 
	#AT91_PMC_PLLAR
 (*(vﬁ©ûê*)(0xFFFFFC28))

	)

96 
	#SPI_MAJOR
 240

	)

98 
	#DEVICENAME
 "•i0"

	)

99 
	#AT91_SPI0_ENABLE
 0x1<<0;

	)

102 
AT91F_LowLevñInô
();

104 
AT91F_DBGU_Prötk
(*
buf„r
);

110 
	#AT91C_VERSION
 "VER 1.0"

	)

112 
GëTickCou¡
();

	@adc/adc_spi.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__©åibuã_u£d__


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@keyb/keyb_max7347.c

5 
	~<löux/kî√l.h
>

6 
	~<löux/moduÀ.h
>

7 
	~<löux/sched.h
>

8 
	~<löux/öô.h
>

9 
	~<löux/fs.h
>

10 
	~<löux/öãºu±.h
>

11 
	~<löux/cdev.h
>

12 
	~<asm/io.h
>

13 
	~<löux/dñay.h
>

14 
	~<löux/keybﬂrd.h
>

15 
	~<asm/úq.h
>

16 
	~<löux/time.h
>

17 
	~<löux/uni°d.h
>

18 
	~<asm/sy°em.h
>

19 
	~<asm/uac˚ss.h
>

26 
	~"keyb_max7347.h
"

31 #unde‡
KEYB_DEBUG


33 
	#KEYB_CFG_MAJOR
 253

	)

34 
	#KEYB_CFG_MINOR
 0

	)

36 
	gkeyb_maj‹
;

38 
	skeyb_dev


40 
cdev
 *
	mkb_cdev
;

41 
U16
 
	mkbuf
[
MAX_BUF_NUM
];

42 
	mbufb
, 
	mbufs
;

43 
	múkey
;

46 
dev_t
 
	gdev
;

48 
keyb_dev
 *
	gpkeyb_dev
;

56 
	$keyb_›í
(
öode
 *
pöode
, 
fûe
 *
pfûe
)

58 
pkeyb_dev
->
bufs
 =Ökeyb_dev->
bufb
 = 0;

60 
	}
}

70 
ssize_t
 
	$keyb_ªad
(
fûe
 *
p_fûe
, 
__u£r
 *
buf
,

71 
ssize_t
 
cou¡
, 
loff_t
 *
p_pos
)

73 
keynum
 = 0,
i
;

74 
U16
 
ªtch
;

75 
keyªt
[2];

77 i‡(
pkeyb_dev
->
bufs
 =pkeyb_dev->
bufb
)

79 
i
 = 0; i < (Ë
cou¡
 / 2; i++)

81 
ªtch
 = 
	`ªadkey
();

83 
keyªt
[
i
] = (Ë((
ªtch
 & 0xff00) >> 8);

84 
keyªt
[++
i
] = (Ë(
ªtch
 & 0xff);

86 
keynum
 += 2;

88 i‡(
pkeyb_dev
->
bufs
 =pkeyb_dev->
bufb
)

89 
out
;

91 
out
:

92 #ifde‡
KEYB_DEBUG


93 
	`¥ötk
 (
KERN_ALERT
"≥tw‹m: keyb: keyªài†%x-%x.\n", 
keyªt
[0], keyret[1]);

95 i‡(
	`c›y_to_u£r
(
buf
, (*Ë&
ªtch
, 
keynum
))

96 
	`¥ötk
 (
KERN_ALERT
 "copyÉrror\n");

97  (
ssize_t
Ë
keynum
;

98 
	}
}

108 
ssize_t
 
	$keyb_wrôe
(
fûe
 *
pfûe
, 
__u£r
 *
buf
,

109 
size_t
 
cou¡
, 
loff_t
 *
p_pos
)

111 
keyq
[2];

112 
U16
 
ãmp
 = 0;

113 
i
;

114 #ifde‡
KEYB_DEBUG


115 
	`¥ötk
(
KERN_ALERT
"write function.\n");

117 i‡(
cou¡
 != 2)

118 
	`¥ötk
 (
KERN_ALERT
"keyb wrôê⁄ly suµ‹àtwÿch¨.%d\n", 
cou¡
);

120 i‡(
	`c›y_‰om_u£r
((*Ë
keyq
, 
buf
, 
cou¡
))

122 
	`¥ötk
 (
KERN_ALERT
"data copy fail.\n");

123 
out
;

127 
i
 = 0; i < 
cou¡
; i++)

128 i‡(
	`kbufö
(
keyq
[
i
]))

130 
	`¥ötk
 (
KERN_ALERT
"buf is full.\n");

131 
out
;

134 
ãmp
 = 
keyq
[1] << 8;

135 
ãmp
 |
keyq
[0];

137 #ifde‡
KEYB_DEBUG


138 
	`¥ötk
 (
KERN_ALERT
"thêd©®i†© kî√»now.%x\n", 
ãmp
);

141 
	`kbufö
(
ãmp
);

144 
out
:

145  
i
;

146 
	}
}

155 
	$keyb_io˘l
(
öode
 *
p_öode
, 
fûe
 
p_fûe
,

156 
cmd
, 
¨g
)

158 
cmd
)

160 
	`¥ötk
 (
KERN_ALERT
"thêcmd i†%x.", 
cmd
);

161 
KEYB_CMD_CLRBUF
:

162 
pkeyb_dev
->
bufs
 =Ökeyb_dev->
bufb
 = 0;

164 
KEYB_CMD_HAVEKEY
:

165 i‡(
pkeyb_dev
->
bufs
 =pkeyb_dev->
bufb
)

166 
¨g
 = 0;

168 
¨g
 = 
pkeyb_dev
->
kbuf
[pkeyb_dev->
bufb
];

171  -
EINVAL
;

175 
	}
}

177 
	$keyb_ªÀa£
(
öode
 *
p_öode
, 
fûe
 *
p_fûe
)

180 
	}
}

186 c⁄° 
fûe_›î©i⁄s
 
	gkeyb_f›s
 =

188 .
ow√r
 = 
THIS_MODULE
,

189 .
	gªad
 = 
keyb_ªad
,

190 .
	gwrôe
 = 
keyb_wrôe
,

191 .
	gio˘l
 = 
keyb_io˘l
,

192 .
	g›í
 = 
keyb_›í
,

193 .
	gªÀa£
 = 
keyb_ªÀa£
,

202 
úqªtu∫_t
 
	$max7347_SîveIrq
 (
úq
, *
dev_id
,

203 
±_ªgs
 *
ªgs
)

205 
d©ac
,
t°öt
;

206 
num
;

207 
U16
 
keysˇ
;

208 
	`dißbÀ_úq
 (
IRQ0
);

213 
	`Key_Ród
(&
d©ac
, 0x0);

214 
num
 = (Ë(
d©ac
 & 0x3f);

215 
keysˇ
 = 
	`øw2sˇncode
(
num
);

216 #ifde‡
KEYB_DEBUG


217 
	`¥ötk
 (
KERN_ALERT
 "keyúq:Åhêkey i†%x\n", 
keysˇ
);

220 
	`kbufö
 (
keysˇ
);

222 #ifde‡
CONFIG_VT


223 
	`h™dÀ_sˇncode
(
keysˇ
, 1);

224 
	`h™dÀ_sˇncode
(
keysˇ
, 0);

226 
	`èskÀt_scheduÀ
(&
keybﬂrd_èskÀt
);

229 }(
d©ac
 & 0x40) != 0x0);

231 
	`Key_Ród
(&
t°öt
, 0x3);

232 }(
t°öt
 & 0x80) != 0);

234 
	`íabÀ_úq
(
IRQ0
);

236  
IRQ_HANDLED
;

237 
	}
}

245 
	$AT91_IRQ_Inô
()

247 #ifde‡
KEYB_DEBUG


248 
	`¥ötk
 (
KERN_ALERT
 "Init irq.\n");

251 
	`©91_pioc_wrôe
 (
PIO_BSR
, 0x4);

252 
	`©91_pioc_wrôe
 (
PIO_PDR
, 0x4);

255 
	`©91_aic_wrôe
 (
AT91_AIC_IDCR
, 
IRQ0
);

257 i‡(
	`ªque°_úq
(29, 
max7347_SîveIrq
, 0, "max7347", 
NULL
))

258 
	`¥ötk
 (
KERN_ALERT
"irqÉrror\n");

260 
	`©91_aic_wrôe
 (
AT91_AIC_IECR
, 
IRQ0
);

261 
	}
}

263 
	$AT91_TWI_O≥n
 (
time
)

265 
	`©91_piﬂ_wrôe
 (
PIO_ASR
, 0x180);

266 
	`©91_piﬂ_wrôe
 (
PIO_PDR
, 0x180);

268 
	`AT91_PMC_E«bÀTWIClock
 ();

271 
	`AT91_TWI_Re£t
();

273 
	`AT91_TWI_C⁄figuª
 ();

276 
	`AT91_TWI_SëClock
 (
time
);

277 
	}
}

279 
	$AT91_TWI_Inô
 (
time
)

281 
ch
[2];

282 #ifde‡
KEYB_DEBUG


283 
	`¥ötk
 (
KERN_ALERT
 "init TWI.\n");

285 
	`AT91_TWI_O≥n
 (
time
);

288 
d©a
 = 0x81;

289 
	`AT91F_TWI_WrôeSögÀIadr
(4, 1, &
d©a
);

290 
d©a
 = 0x1f;

291 
	`AT91F_TWI_WrôeSögÀIadr
(1, 1, &
d©a
);

292 
d©a
 = 0x0;

293 
	`AT91F_TWI_WrôeSögÀIadr
(2, 1, &
d©a
);

294 
d©a
 = 0x01;

295 
	`AT91F_TWI_WrôeSögÀIadr
(3, 1, &
d©a
);

298 
ch
[0] = 0x4;

299 
ch
[1] = 0x80;

300 
	`Key_Wrôe
(
ch
, 2);

302 
ch
[0] = 0x1;

303 
ch
[1] = 0x1f;

304 
	`Key_Wrôe
(
ch
, 2);

306 
ch
[0] = 0x2;

307 
ch
[1] = 0x00;

308 
	`Key_Wrôe
(
ch
, 2);

310 
ch
[0] = 0x3;

311 
ch
[1] = 0x01;

312 
	`Key_Wrôe
(
ch
, 2);

315 #ifde‡
KEYB_DEBUG


316 
ch
[0] = 0x1;

317 
	`Key_Ród
(&
ch
[1], ch[0]);

318 
	`¥ötk
(
KERN_ALERT
"keyÑeg 1 i†%x\n", 
ch
[1]);

320 
ch
[0] = 0x2;

321 
	`Key_Ród
(&
ch
[1], ch[0]);

322 
	`¥ötk
(
KERN_ALERT
"keyÑeg 2 i†%x\n", 
ch
[1]);

324 
ch
[0] = 0x3;

325 
	`Key_Ród
(&
ch
[1], ch[0]);

326 
	`¥ötk
(
KERN_ALERT
"keyÑeg 3 i†%x\n", 
ch
[1]);

328 
ch
[0] = 0x4;

329 
	`Key_Ród
(&
ch
[1], ch[0]);

330 
	`¥ötk
(
KERN_ALERT
"keyÑeg 4 i†%x\n", 
ch
[1]);

333 
	}
}

335 
	$cdev_Inô
()

337 
ªsu…
, 
îr
;

338 
kb_maj‹
 = 
KEYB_CFG_MAJOR
, 
kb_mö‹
 = 
KEYB_CFG_MINOR
;

339 #ifde‡
KEYB_DEBUG


340 
	`¥ötk
 (
KERN_ALERT
 "Init cdev.\n");

342 i‡(
kb_maj‹
) {

343 
dev
 = 
	`MKDEV
(
kb_maj‹
, 
kb_mö‹
);

344 
ªsu…
 = 
	`ªgi°î_chrdev_ªgi⁄
(
dev
, 1, "kb0");

346 
ªsu…
 = 
	`Æloc_chrdev_ªgi⁄
(&
dev
, 
kb_mö‹
, 1, "kb0");

347 
kb_maj‹
 = 
	`MAJOR
(
dev
);

349 i‡(
ªsu…
 < 0) {

350 
	`¥ötk
(
KERN_WARNING
 "scuŒ: c™'àgë maj‹ %d\n", 
kb_maj‹
);

351  
ªsu…
;

355 
	`¥ötk
 (
KERN_ALERT
"kb_maj‹ i†%d\n", 
kb_maj‹
);

356 
	`¥ötk
 (
KERN_ALERT
"kb_mö‹ i†%d\n", 
kb_mö‹
);

359 
pkeyb_dev
 = 
	`kmÆloc
((
keyb_dev
), 
GFP_KERNEL
);

361 i‡(!
pkeyb_dev
)

363 
ªsu…
 = -
ENOMEM
;

364 
Áû_mÆloc
;

366 
	`mem£t
 (
pkeyb_dev
, 0, (
keyb_dev
));

369 
pkeyb_dev
->
kb_cdev
 = 
	`cdev_Æloc
();

372 
	`cdev_öô
(
pkeyb_dev
->
kb_cdev
, &
keyb_f›s
);

373 
pkeyb_dev
->
kb_cdev
->
ow√r
 = 
THIS_MODULE
;

374 
pkeyb_dev
->
kb_cdev
->
›s
 = &
keyb_f›s
;

375 
îr
 = 
	`cdev_add
(
pkeyb_dev
->
kb_cdev
, 
dev
, 1);

376 i‡(
îr
)

378 
	`¥ötk
(
KERN_NOTICE
 "Eº‹ %d keybﬂrd driv˚.\n", 
îr
);

379 
Áû_cdev_add
;

384 
Áû_cdev_add
:

385 
	`¥ötk
(
KERN_NOTICE
 "the cdevádd failed.\n");

386 
	`k‰ì
 (
pkeyb_dev
);

387 
Áû_mÆloc
:

388 
	`¥ötk
(
KERN_NOTICE
 "the malloc failed.\n");

389 
	`uƒegi°î_chrdev_ªgi⁄
 (
dev
, 1);

390  
ªsu…
;

391 
	}
}

393 
__öô
 
	$MAX7347_keyb_öô
()

395 #ifde‡
KEYB_DEBUG


396 
ãmp
;

398 
	`¥ötk
 (
KERN_ALERT
"init MAX7347 keyboard chip.\n");

400 
twi_ba£
 = 
	`i‹em≠
 (
AT91SAM9261_BASE_TWI
,0x4);

401 
aic_ba£
 = 
	`i‹em≠
 (
AT91_AIC_BASE
,0x4);

402 
pmc_ba£
 = 
	`i‹em≠
 (
AT91_PMC_BASE
,0x4);

403 
piﬂ_ba£
 = 
	`i‹em≠
 (
AT91_PIOA_BASE
, 0x4);

404 
pioc_ba£
 = 
	`i‹em≠
 (
AT91_PIOC_BASE
, 0x4);

405 
piob_ba£
 = 
	`i‹em≠
 (
AT91_PIOB_BASE
, 0x4);

407 #ifde‡
KEYB_DEBUG


408 
	`¥ötk
 (
KERN_ALERT
 "aic_ba£ i†%x.\n", 
AT91_AIC_BASE
);

409 
	`¥ötk
 (
KERN_ALERT
 "pmc_ba£ i†%x.\n", 
AT91_PMC_BASE
);

410 
	`¥ötk
 (
KERN_ALERT
 "twi_ba£ i†%x.\n", 
AT91SAM9261_BASE_TWI
);

411 
	`¥ötk
 (
KERN_ALERT
 "piﬂ_ba£ i†%x.\n", 
AT91_PIOA_BASE
);

412 
	`¥ötk
 (
KERN_ALERT
 "pioc_ba£ i†%x.\n", 
AT91_PIOC_BASE
);

414 
	`¥ötk
 (
KERN_ALERT
 "aic_ba£ i†%x.\n", 
aic_ba£
);

415 
	`¥ötk
 (
KERN_ALERT
 "pmc_ba£ i†%x.\n", 
pmc_ba£
);

416 
	`¥ötk
 (
KERN_ALERT
 "twi_ba£ i†%x.\n", 
twi_ba£
);

417 
	`¥ötk
 (
KERN_ALERT
 "piﬂ_ba£ i†%x.\n", 
piﬂ_ba£
);

418 
	`¥ötk
 (
KERN_ALERT
 "pioc_ba£ i†%x.\n", 
pioc_ba£
);

421 
	`©91_piob_wrôe
 (0x0, 0xffffffff);

422 
	`©91_piob_wrôe
 (0x10, 0xffffffff);

423 
	`©91_piob_wrôe
 (0x30, 0xffffffff);

425 #ifde‡
KEYB_DEBUG


427 
ãmp
 = 
	`©91_pmc_ªad
(0x8);

428 
	`¥ötk
 (
KERN_ALERT
 "AT91_CKGR_SCSR i†%x.\n", 
ãmp
);

429 
ãmp
 = 
	`©91_pmc_ªad
(0x24);

430 
	`¥ötk
 (
KERN_ALERT
 "AT91_CKGR_MCFR i†%x.\n", 
ãmp
);

431 
ãmp
 = 
	`©91_pmc_ªad
(0x28);

432 
	`¥ötk
 (
KERN_ALERT
 "AT91_CKGR_PLLAR i†%x.\n", 
ãmp
);

433 
ãmp
 = 
	`©91_pmc_ªad
(0x2C);

434 
	`¥ötk
 (
KERN_ALERT
 "AT91_CKGR_PLLBR i†%x.\n", 
ãmp
);

435 
ãmp
 = 
	`©91_pmc_ªad
(0x30);

436 
	`¥ötk
 (
KERN_ALERT
 "AT91_CKGR_MCKR i†%x.\n", 
ãmp
);

439 i‡(
	`cdev_Inô
())

440 
Áû_öô
;

442 
	`AT91_TWI_Inô
(100000);

444 
	`AT91_IRQ_Inô
();

447 
	`iounm≠
 (
aic_ba£
);

448 
	`iounm≠
 (
pmc_ba£
);

449 
	`iounm≠
 (
piﬂ_ba£
);

450 
	`iounm≠
 (
piob_ba£
);

451 
	`iounm≠
 (
pioc_ba£
);

455 
pkeyb_dev
->
bufs
 =Ökeyb_dev->
bufb
 = 0;

456 #ifde‡
KEYB_DEBUG


457 
	`¥ötk
(
KERN_ALERT
"keyb init finished.\n");

461 
Áû_öô
:

462 
	`¥ötk
(
KERN_ALERT
"fail_init\n");

463  -
ENOMEM
;

464 
	}
}

466 
__exô
 
	$MAX7347_keyb_exô
()

468 
	`¥ötk
(
KERN_ALERT
 "exit keyb_max7347.\n");

470 
	`‰ì_úq
 (
IRQ0
, 
NULL
);

473 
	`cdev_dñ
(
pkeyb_dev
->
kb_cdev
);

474 
	`k‰ì
(
pkeyb_dev
);

476 
	`uƒegi°î_chrdev_ªgi⁄
 (
dev
, 1);

478 
	`iounm≠
 (
twi_ba£
);

480 
	}
}

482 
MODULE_AUTHOR
("Petworm");

483 
MODULE_LICENSE
("Dual BSD/GPL");

484 
moduÀ_∑øm
(
keyb_maj‹
, , 
S_IRUGO
);

486 
moduÀ_öô
(
MAX7347_keyb_öô
);

487 
moduÀ_exô
(
MAX7347_keyb_exô
);

497 
	$T11_TWI_RódSögÀ
 (*
d©a
)

499 
°©us
,
îr‹
=0, 
íd
=0;

500 
limô
 = 0;

503 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_MSEN
);

506 
	`©91_twi_wrôe
 (
AT91_TWI_MMR
, 
AT91_MAX7347_I2C_ADDRESS
 | 
AT91_TWI_MREAD
);

507 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_START
 | 
AT91_TWI_STOP
);

511 !
íd
)

513 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

514 i‡((
°©us
 & 
AT91_TWI_NACK
) == AT91_TWI_NACK)

516 
îr‹
++;

517 
íd
=1;

520 i‡((
°©us
 & 
AT91_TWI_RXRDY
) == AT91_TWI_RXRDY)

521 
íd
=1;

523 i‡(++
limô
 > 10000)

527 *(
d©a
Ë
	`©91_twi_ªad
 (
AT91_TWI_RHR
);

530 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

531 !(
°©us
 & 
AT91_TWI_TXCOMP
))

533 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

534 i‡(++
limô
 > 10000)

538 
	}
}

547 
	$T11_TWI_WrôeSögÀ
 (
üddr
)

549 
íd
 = 0, 
°©us
, 
îr‹
=0;

550 
limô
 = 0;

552 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_MSEN
);

554 
	`©91_twi_wrôe
 (
AT91_TWI_MMR
, 
AT91_MAX7347_I2C_ADDRESS
 & ~
AT91_TWI_MREAD
);

559 
	`©91_twi_wrôe
 (
AT91_TWI_THR
, 
üddr
);

562 !
íd
)

564 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

565 i‡((
°©us
 & 
AT91_TWI_NACK
) == AT91_TWI_NACK)

567 
îr‹
++;

568 
íd
=1;

571 i‡((
°©us
 & 
AT91_TWI_TXRDY
) == AT91_TWI_TXRDY)

572 
íd
=1;

574 i‡(++
limô
 > 10000)

579 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

580 !(
°©us
 & 
AT91_TWI_TXCOMP
))

582 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

583 i‡(++
limô
 > 10000)

587  
îr‹
;

588 
	}
}

590 
	$Key_Ród
(*
d©a
, 
üddr
)

592 
	`T11_TWI_WrôeSögÀ
(
üddr
);

593 
	`T11_TWI_RódSögÀ
(
d©a
);

595 
	}
}

603 
	$T11_TWI_WrôeMu…i
(*
d©a
, 
num
)

605 
íd
 = 0, 
°©us
, 
îr‹
=0, 
Cou¡
;

606 
limô
 = 0;

609 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_MSEN
);

613 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

614 i‡(++
limô
 > 10000)

616 }!(
°©us
 & 
AT91_TWI_TXRDY
));

619 
	`©91_twi_wrôe
 (
AT91_TWI_MMR
, 
AT91_MAX7347_I2C_ADDRESS
 & ~
AT91_TWI_MREAD
);

622  
Cou¡
=0; Cou¡ < 
num
 ;Count++ )

625 
	`©91_twi_wrôe
 (
AT91_TWI_THR
, *
d©a
++);

627 !
íd
)

629 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

630 i‡((
°©us
 & 
AT91_TWI_NACK
) == AT91_TWI_NACK)

632 
îr‹
++;

633 
íd
=1;

637 i‡((
°©us
 & 
AT91_TWI_TXRDY
) == AT91_TWI_TXRDY)

638 
íd
=1;

640 i‡(++
limô
 > 10000)

649 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

650 !(
°©us
 & 
AT91_TWI_TXCOMP
))

652 
°©us
 = 
	`©91_twi_ªad
 (
AT91_TWI_SR
);

653 i‡(++
limô
 > 10000)

657  
îr‹
;

658 
	}
}

660 
	$Key_Wrôe
(*
d©a
, 
num
)

662 
	`T11_TWI_WrôeMu…i
(
d©a
, 
num
))

665 
	}
}

673 
ölöe
 
	$øw2sˇncode
 (
num
)

675 
pkeyb_dev
->
úkey
 = 0;

676 
pkeyb_dev
->
úkey
)

679  
num
;

681  
key_sˇn_m≠
[
num
];

683  
key_cook_m≠
[
num
];

687 
	}
}

689 
ölöe
 
	$kbufö
 (
U16
 
key
)

691 
ãmp
;

692 #ifde‡ 
KEYB_DEBUG


693 
	`¥ötk
 (
KERN_ALERT
"≥towrm: keyb: kbufö i†%x.\n", 
key
);

695 
ãmp
 = 
pkeyb_dev
->
bufs
 +1;

696 i‡(
ãmp
 >
MAX_BUF_NUM
)

697 
ãmp
 -
MAX_BUF_NUM
;

699 if(
ãmp
 =
pkeyb_dev
->
bufb
)

702 
pkeyb_dev
->
kbuf
[pkeyb_dev->
bufs
] = 
key
;

703 i‡((++
pkeyb_dev
->
bufs
Ë>
MAX_BUF_NUM
)

704 
pkeyb_dev
->
bufs
 -
MAX_BUF_NUM
;

705 #ifde‡
KEYB_DEBUG


706 
	`¥ötk
(
KERN_ALERT
"≥tw‹m: kbu‡t› i†%d\n", 
pkeyb_dev
->
bufs
);

709 
	}
}

711 
ölöe
 
U16
 
	$ªadkey
()

713 
U16
 
ªtch
;

715 i‡(
pkeyb_dev
->
bufs
 =pkeyb_dev->
bufb
)

717 
ªtch
 = 
pkeyb_dev
->
kbuf
[pkeyb_dev->
bufb
];

718 if((++
pkeyb_dev
->
bufb
Ë=
MAX_BUF_NUM
)

719 
pkeyb_dev
->
bufb
 = 0;

720  
ªtch
;

721 
	}
}

724 
ölöe
 
	$AT91_PMC_E«bÀTWIClock
()

726 
	`©91_pmc_wrôe
 (0x10, 
AT91_PMC_PCK3
);

727 
	}
}

730 
ölöe
 
	$AT91_TWI_Re£t
()

732 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_SWRST
);

733 
	}
}

736 
ölöe
 
	$AT91_TWI_C⁄figuª
()

738 
	`©91_twi_wrôe
 (
AT91_TWI_IDR
, 0xffffffff);

740 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_SWRST
);

742 
	`©91_twi_wrôe
 (
AT91_TWI_CR
, 
AT91_TWI_MSEN
);

743 
	}
}

745 
ölöe
 
	$AT91_TWI_SëClock
 (
t
)

747 
cdiv
, 
ckdiv
;

750 
˛k
 *
twi_˛k
;

751 
twi_˛k
 = 
	`˛k_gë
(
NULL
, "twi_clk");

754 
cdiv
 = (
	`˛k_gë_øã
(
twi_˛k
Ë/ (2 * 
t
)) - 3;

755 
cdiv
 = cdiv + 1;

756 
ckdiv
 = 0;

757 
cdiv
 > 255)

759 
ckdiv
++;

760 
cdiv
 = cdiv >> 1;

763 i‡(
ckdiv
 > 7) {

764 
	`¥ötk
(
KERN_ERR
 "AT91 I2C: Invalid TWI clockrate!\n");

765 
ckdiv
 = 7;

767 
	`©91_twi_wrôe
(
AT91_TWI_CWGR
, (
ckdiv
 << 16Ë| (
cdiv
 << 8) | cdiv);

768 
	}
}

	@keyb/keyb_max7347.h

3 #i‚de‡
max7347_h


4 
	#max7347_h


	)

7 
	~<löux/˛k.h
>

9 
	~<asm/¨ch/©91_twi.h
>

10 
	~<asm/¨ch/©91_pio.h
>

11 
	~<asm/h¨dw¨e.h
>

12 
	~<asm/gpio.h
>

13 
	~<asm/io.h
>

14 
	~<asm/¨ch/©91_pmc.h
>

16 
	tU16
;

18 
	#AT91_PIOA_BASE
 
AT91_PIOA
 + 
AT91_BASE_SYS


	)

19 
	#AT91_PIOC_BASE
 
AT91_PIOC
 + 
AT91_BASE_SYS


	)

20 
	#AT91_PIOB_BASE
 
AT91_PIOB
 + 
AT91_BASE_SYS


	)

21 
	#AT91_AIC_BASE
 
AT91_AIC
 + 
AT91_BASE_SYS


	)

22 
	#AT91_PMC_BASE
 
AT91_PMC
 + 
AT91_BASE_SYS


	)

24 
__iomem
 *
	gtwi_ba£
;

25 
__iomem
 *
	gaic_ba£
;

26 
__iomem
 *
	gpmc_ba£
;

27 
__iomem
 *
	gpiﬂ_ba£
;

28 
__iomem
 *
	gpioc_ba£
;

29 
__iomem
 *
	gpiob_ba£
;

31 
	#©91_pioc_ªad
(
ªg
Ë
	`__øw_ªadl
(
pioc_ba£
 + (ªg))

	)

32 
	#©91_pioc_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
pioc_ba£
 + (ªg))

	)

33 
	#©91_piob_ªad
(
ªg
Ë
	`__øw_ªadl
(
piob_ba£
 + (ªg))

	)

34 
	#©91_piob_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
piob_ba£
 + (ªg))

	)

35 
	#©91_piﬂ_ªad
(
ªg
Ë
	`__øw_ªadl
(
piﬂ_ba£
 + (ªg))

	)

36 
	#©91_piﬂ_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
piﬂ_ba£
 + (ªg))

	)

38 
	#©91_pmc_ªad
(
ªg
Ë
	`__øw_ªadl
(
pmc_ba£
 + (ªg))

	)

39 
	#©91_pmc_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
pmc_ba£
 + (ªg))

	)

41 
	#©91_aic_ªad
(
ªg
Ë
	`__øw_ªadl
(
aic_ba£
 + (ªg))

	)

42 
	#©91_aic_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
aic_ba£
 + (ªg))

	)

44 
	#©91_twi_ªad
(
ªg
Ë
	`__øw_ªadl
(
twi_ba£
 + (ªg))

	)

45 
	#©91_twi_wrôe
(
ªg
, 
vÆ
Ë
	`__øw_wrôñ
((vÆ), 
twi_ba£
 + (ªg))

	)

47 
	#AT91_MAX7347_I2C_ADDRESS
 (0x38<<16Ë

	)

49 
	#IRQ0
 (0x1 << 
AT91SAM9261_ID_IRQ0
)

	)

54 
	#MAX_BUF_NUM
 16

	)

57 
	#MAX7347_KEYFIFO_REG
 0x00

	)

58 
	#MAX7347_DEBOUNCE_REG
 0x01

	)

59 
	#MAX7347_AUTOREPEAT_REG
 0x02

	)

60 
	#MAX7347_INTERRUPT_REG
 0x03

	)

61 
	#MAX7347_CONFIGURATION_REG
 0x04

	)

62 
	#MAX7347_PORT_REG
 0x05

	)

63 
	#MAX7347_KEYSOUND_REG
 0x06

	)

64 
	#MAX7347_ALERTSOUND_REG
 0x07

	)

66 
	#AT91_PA7_TWD
 (Ë(0x1 << 7)

	)

67 
	#AT91_PA8_TWCK
 (Ë(0x1 << 8)

	)

69 
	#TWI_NULL
 0xff

	)

70 
	#TWI_READ
 0x1

	)

71 
	#TWI_WRITE
 0x0

	)

79 
	#KEYB_CMD_CLRBUF
 0x005

	)

80 
	#KEYB_CMD_HAVEKEY
 0x006

	)

87 
	#PVK_DELETECHAR
 0x08

	)

88 
	#PVK_RETURN
 0x0D

	)

89 
	#PVK_ESCAPE
 0x1B

	)

90 
	#PVK_PAGEUP
 0x21

	)

91 
	#PVK_PAGEDOWN
 0x22

	)

92 
	#PVK_END
 0x23

	)

93 
	#PVK_HOME
 0x24

	)

94 
	#PVK_INSERT
 0x2D

	)

95 
	#PVK_DELETE
 0x2E

	)

96 
	#PVK_LEFT
 0x25

	)

97 
	#PVK_UP
 0x26

	)

98 
	#PVK_RIGHT
 0x27

	)

99 
	#PVK_DOWN
 0x28

	)

102 c⁄° 
	gkey_sˇn_m≠
[] = {0x0b, 0x02, 0x03,

112 c⁄° 
	gkey_cook_m≠
[] = {'0', '1', '4',

113 '7', 'f', 
PVK_LEFT
,

114 
PVK_ESCAPE
, 'f', '.',

116 'f', 
PVK_DOWN
, 
PVK_UP
,

117 'f', 
PVK_DELETE
, '3',

119 
PVK_RIGHT
, 
PVK_RETURN
, 'f'};

121 c⁄° 
	gkey_zzcooked_m≠
[24][5] = {

154 
ölöe
 
øw2sˇncode
 (
num
);

155 
ölöe
 
kbufö
 (
U16
 
key
);

156 
ölöe
 
U16
 
ªadkey
();

159 
ölöe
 
AT91_PMC_E«bÀTWIClock
();

161 
ölöe
 
AT91_TWI_Re£t
();

164 
ölöe
 
AT91_TWI_C⁄figuª
();

166 
ölöe
 
AT91_TWI_SëClock
 (
t
);

169 
T11_TWI_Wrôe
(*
d©a
, 
num
);

170 
T11_TWI_Ród
(*
d©a
, 
üddr
);

172 
ölöe
 
TWI_Së
(
üddr
, 
ªad
);

173 
ölöe
 
waô_°ï
(
ªad
);

174 
ölöe
 
waô_ovî
();

	@keyb/keyb_max7347.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__©åibuã_u£d__


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@lcdbl/lcd_back.c

43 
	~"lcd_back.h
"

47 
	$lcd_lcd
(
cou¡
)

49 
lo›
;

50 
∑ddr
 = 
	`i‹em≠
(0xfffff830,8);

51 
lo›
=0;lo›<
cou¡
;loop++)

53 *(
∑ddr
+1)|=0x00000080;

54 *
∑ddr
|=0x00000080;

57 
	`iounm≠
(
∑ddr
);

58 
	}
}

60 
	$lcd_›í
(
öode
 *öode, 
fûe
 *
fûp
)

62 
∑ddr
 = 
	`i‹em≠
(0xfffff830,4);

63 *
∑ddr
 |= 0x00000080;

64 
	`iounm≠
(
∑ddr
);

65 
	`¥ötk
("lcd back ground open sucess! \n");

68 
	}
}

71 
ssize_t
 
	$lcd_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf
, 
size_t
 
cou¡
, 
loff_t
 *
f_pos
)

73 
	`¥ötk
("this isÜcdwriteÅest\n");

75 
	}
}

78 
ssize_t
 
	$lcd_ªad
(
fûe
 *fûe, 
__u£r
 *
buf
, 
size_t
 
cou¡
, 
loff_t
 *
f_pos
)

80 
	`¥ötk
("this isÜcdÑeadÅest \n");

82 
	}
}

85 
	$lcd_ªÀa£
(
öode
 *öode, 
fûe
 *
fûp
)

88 
∑ddr
 = 
	`i‹em≠
(0xfffff834,4);

89 *
∑ddr
 |= 0x00000080;

90 
	`iounm≠
(
∑ddr
);

91 
	`¥ötk
("lcdÑelease goodbye \n");

95 
	}
}

98 
	$lcd_io˘l
(
öode
 *öode, 
fûe
 *
fûp
, 
cmd
, 
¨g
)

101 if(
cmd
>15)

103 
	`¥ötk
("+++++++++++++++++++++++++++++\n");

104 
	`¥ötk
("please inputÅheÑight step 0~15\n");

105 
	`¥ötk
("+++++++++++++++++++++++++++++\n");

109 
	`¥ötk
("****************************\n");

110 
	`¥ötk
("star ioctlÅheÜcd back\n");

113 if(
lcd_cou¡
 > 0){

114 
	`lcd_lcd
(16-
lcd_cou¡
);

118 
	`lcd_lcd
(
cmd
);

120 
lcd_cou¡
 = 
cmd
;

121 
	`¥ötk
("lcd_back ioctl isÑun,\n");

122 
	`¥ötk
("thê°ï i†: %d \n",15-
lcd_cou¡
);

123 
	`¥ötk
("thêcmd i†: %d \n",
cmd
);

124 
	`¥ötk
("****************************\n");

126 
	}
}

128 
fûe_›î©i⁄s
 
	glcd_f›s
 = {

129 
ªad
:
lcd_ªad
,

130 
wrôe
:
lcd_wrôe
,

131 
›í
:
lcd_›í
,

132 
ªÀa£
:
lcd_ªÀa£
,

133 
io˘l
:
lcd_io˘l
,

138 
	$lcd_öô
()

140 
∑ddr
 = 
	`i‹em≠
(
AT91C_MATRIX_EBICSA
,1);

141 *
∑ddr
 &=0xffffff0f;

142 
	`iounm≠
(
∑ddr
);

143 
∑ddr
 = 
	`i‹em≠
(
AT91C_SMC_SETUP5
,16);

144 *
∑ddr
=0x01020102;

145 *(
∑ddr
+1)=0x08060806;

146 *(
∑ddr
+2)=0x000a000a;

147 *(
∑ddr
+3)=0x10001003;

148 
	`iounm≠
(
∑ddr
);

150 
∑ddr
 = 
	`i‹em≠
(
AT91C_PIOC_PER
,1);

151 *
∑ddr
 |=0x00000080;

152 *(
∑ddr
+1)|=0x00000020;

153 *(
∑ddr
 + (0x10>>2))|=0x00000080;

154 *(
∑ddr
 + (0x34>>2))|=0x00000080;

155 
	`iounm≠
(
∑ddr
);

156 
	`¥ötk
("theÜcd_init is OK \n");

159 
	}
}

161 
__öô
 
	$lcd_drivî_öô
()

163 
rc
;

164 
	`lcd_öô
();

166 i‡((
rc
 = 
	`ªgi°î_chrdev
(
lcd_MAJOR
, 
DEVICENAME
 , &
lcd_f›s
)) < 0){

167 
	`¥ötk
("lcd drivî: c™'àgë maj‹ %d\n", 
lcd_MAJOR
);

170 
	`¥ötk
("Åhêlcd _back drivî i†ö£π. MAJOR i†%d.\n", 
lcd_MAJOR
);

172 
	}
}

175 
__exô
 
	$lcd_drivî_exô
()

177 
∑ddr
 = 
	`i‹em≠
(0xfffff834,4);

178 *
∑ddr
 |= 0x00000080;

179 
	`iounm≠
(
∑ddr
);

180 
	`¥ötk
("lcdÑelease goodbye \n");

182 
	`uƒegi°î_chrdev
(
lcd_MAJOR
, 
DEVICENAME
);

183 
	`¥ötk
("lcd driverÉxit\n");

184 
	}
}

186 
moduÀ_öô
(
lcd_drivî_öô
);

187 
moduÀ_exô
(
lcd_drivî_exô
);

189 
MODULE_LICENSE
("GPL");

190 
MODULE_AUTHOR
("Karsten Jeppesen <karsten@jeppesens.com>");

191 
MODULE_DESCRIPTION
("Driver forÅhe Total Impact briQ frontÖanel");

	@lcdbl/lcd_back.h

26 #i‚de‡
lcd_back_h


27 
	#lcd_back_h


	)

30 
	~<löux/kî√l.h
>

31 
	~<löux/moduÀ.h
>

32 
	~<löux/fs.h
>

33 
	~<löux/mm.h
>

34 
	~<asm/uac˚ss.h
>

35 
	~<asm/io.h
>

38 
	#AT91C_VERSION
 "VER 1.0"

	)

39 
	#DEVICENAME
 "lcd_back"

	)

40 
	#lcd_MAJOR
 241

	)

42 
	#AT91C_FRAME_BUFFER
 0x20000000

	)

43 
	#AT91C_ATMEL_LOGO
 0x20020000

	)

44 
	#AT91C_ATMEL_WAVE
 0x20030000

	)

45 
	#AT91C_MATRIX_EBICSA
 0xfff„e30

	)

46 
	#AT91C_SMC_SETUP5
 0xfff„c50

	)

47 
	#AT91C_SMC_PULSE5
 0xfff„c54

	)

48 
	#AT91C_SMC_CYCLE5
 0xfff„c58

	)

49 
	#AT91C_SMC_CTRL5
 0xfff„c5c

	)

50 
	#AT91C_PIOC_PER
 0xfffff800

	)

52 vﬁ©ûê*
	g∑ddr
;

53 
	glcd_cou¡
=0;

54 
lcd_lcd
();

55 
lcd_öô
();

	@lcdbl/lcd_back.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__©åibuã_u£d__


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@usb/AT91SAM9261.h

1 #i‚de‡
AT91SAM9261H


2 
	#AT91SAM9261H


	)

4 vﬁ©ûê
	tAT91_REG
;

9 
	s_AT91S_SYS
 {

10 
AT91_REG
 
	mSDRAMC_MR
;

11 
AT91_REG
 
	mSDRAMC_TR
;

12 
AT91_REG
 
	mSDRAMC_CR
;

13 
AT91_REG
 
	mSDRAMC_HSR
;

14 
AT91_REG
 
	mSDRAMC_LPR
;

15 
AT91_REG
 
	mSDRAMC_IER
;

16 
AT91_REG
 
	mSDRAMC_IDR
;

17 
AT91_REG
 
	mSDRAMC_IMR
;

18 
AT91_REG
 
	mSDRAMC_ISR
;

19 
AT91_REG
 
	mSDRAMC_MDR
;

20 
AT91_REG
 
	mRe£rved0
[118];

21 
AT91_REG
 
	mSMC_SETUP0
;

22 
AT91_REG
 
	mSMC_PULSE0
;

23 
AT91_REG
 
	mSMC_CYCLE0
;

24 
AT91_REG
 
	mSMC_CTRL0
;

25 
AT91_REG
 
	mSMC_SETUP1
;

26 
AT91_REG
 
	mSMC_PULSE1
;

27 
AT91_REG
 
	mSMC_CYCLE1
;

28 
AT91_REG
 
	mSMC_CTRL1
;

29 
AT91_REG
 
	mSMC_SETUP2
;

30 
AT91_REG
 
	mSMC_PULSE2
;

31 
AT91_REG
 
	mSMC_CYCLE2
;

32 
AT91_REG
 
	mSMC_CTRL2
;

33 
AT91_REG
 
	mSMC_SETUP3
;

34 
AT91_REG
 
	mSMC_PULSE3
;

35 
AT91_REG
 
	mSMC_CYCLE3
;

36 
AT91_REG
 
	mSMC_CTRL3
;

37 
AT91_REG
 
	mSMC_SETUP4
;

38 
AT91_REG
 
	mSMC_PULSE4
;

39 
AT91_REG
 
	mSMC_CYCLE4
;

40 
AT91_REG
 
	mSMC_CTRL4
;

41 
AT91_REG
 
	mSMC_SETUP5
;

42 
AT91_REG
 
	mSMC_PULSE5
;

43 
AT91_REG
 
	mSMC_CYCLE5
;

44 
AT91_REG
 
	mSMC_CTRL5
;

45 
AT91_REG
 
	mSMC_SETUP6
;

46 
AT91_REG
 
	mSMC_PULSE6
;

47 
AT91_REG
 
	mSMC_CYCLE6
;

48 
AT91_REG
 
	mSMC_CTRL6
;

49 
AT91_REG
 
	mSMC_SETUP7
;

50 
AT91_REG
 
	mSMC_PULSE7
;

51 
AT91_REG
 
	mSMC_CYCLE7
;

52 
AT91_REG
 
	mSMC_CTRL7
;

53 
AT91_REG
 
	mRe£rved1
[96];

54 
AT91_REG
 
	mMATRIX_MCFG
;

55 
AT91_REG
 
	mMATRIX_SCFG0
;

56 
AT91_REG
 
	mMATRIX_SCFG1
;

57 
AT91_REG
 
	mMATRIX_SCFG2
;

58 
AT91_REG
 
	mMATRIX_SCFG3
;

59 
AT91_REG
 
	mMATRIX_SCFG4
;

60 
AT91_REG
 
	mRe£rved2
[3];

61 
AT91_REG
 
	mMATRIX_TCMR
;

62 
AT91_REG
 
	mRe£rved3
[2];

63 
AT91_REG
 
	mMATRIX_EBICSA
;

64 
AT91_REG
 
	mMATRIX_USBPCR
;

65 
AT91_REG
 
	mRe£rved4
[3];

66 
AT91_REG
 
	mMATRIX_VERSION
;

67 
AT91_REG
 
	mRe£rved5
[110];

68 
AT91_REG
 
	mAIC_SMR
[32];

69 
AT91_REG
 
	mAIC_SVR
[32];

70 
AT91_REG
 
	mAIC_IVR
;

71 
AT91_REG
 
	mAIC_FVR
;

72 
AT91_REG
 
	mAIC_ISR
;

73 
AT91_REG
 
	mAIC_IPR
;

74 
AT91_REG
 
	mAIC_IMR
;

75 
AT91_REG
 
	mAIC_CISR
;

76 
AT91_REG
 
	mRe£rved6
[2];

77 
AT91_REG
 
	mAIC_IECR
;

78 
AT91_REG
 
	mAIC_IDCR
;

79 
AT91_REG
 
	mAIC_ICCR
;

80 
AT91_REG
 
	mAIC_ISCR
;

81 
AT91_REG
 
	mAIC_EOICR
;

82 
AT91_REG
 
	mAIC_SPU
;

83 
AT91_REG
 
	mAIC_DCR
;

84 
AT91_REG
 
	mRe£rved7
[1];

85 
AT91_REG
 
	mAIC_FFER
;

86 
AT91_REG
 
	mAIC_FFDR
;

87 
AT91_REG
 
	mAIC_FFSR
;

88 
AT91_REG
 
	mRe£rved8
[45];

89 
AT91_REG
 
	mDBGU_CR
;

90 
AT91_REG
 
	mDBGU_MR
;

91 
AT91_REG
 
	mDBGU_IER
;

92 
AT91_REG
 
	mDBGU_IDR
;

93 
AT91_REG
 
	mDBGU_IMR
;

94 
AT91_REG
 
	mDBGU_CSR
;

95 
AT91_REG
 
	mDBGU_RHR
;

96 
AT91_REG
 
	mDBGU_THR
;

97 
AT91_REG
 
	mDBGU_BRGR
;

98 
AT91_REG
 
	mRe£rved9
[7];

99 
AT91_REG
 
	mDBGU_CIDR
;

100 
AT91_REG
 
	mDBGU_EXID
;

101 
AT91_REG
 
	mDBGU_FNTR
;

102 
AT91_REG
 
	mRe£rved10
[45];

103 
AT91_REG
 
	mDBGU_RPR
;

104 
AT91_REG
 
	mDBGU_RCR
;

105 
AT91_REG
 
	mDBGU_TPR
;

106 
AT91_REG
 
	mDBGU_TCR
;

107 
AT91_REG
 
	mDBGU_RNPR
;

108 
AT91_REG
 
	mDBGU_RNCR
;

109 
AT91_REG
 
	mDBGU_TNPR
;

110 
AT91_REG
 
	mDBGU_TNCR
;

111 
AT91_REG
 
	mDBGU_PTCR
;

112 
AT91_REG
 
	mDBGU_PTSR
;

113 
AT91_REG
 
	mRe£rved11
[54];

114 
AT91_REG
 
	mPIOA_PER
;

115 
AT91_REG
 
	mPIOA_PDR
;

116 
AT91_REG
 
	mPIOA_PSR
;

117 
AT91_REG
 
	mRe£rved12
[1];

118 
AT91_REG
 
	mPIOA_OER
;

119 
AT91_REG
 
	mPIOA_ODR
;

120 
AT91_REG
 
	mPIOA_OSR
;

121 
AT91_REG
 
	mRe£rved13
[1];

122 
AT91_REG
 
	mPIOA_IFER
;

123 
AT91_REG
 
	mPIOA_IFDR
;

124 
AT91_REG
 
	mPIOA_IFSR
;

125 
AT91_REG
 
	mRe£rved14
[1];

126 
AT91_REG
 
	mPIOA_SODR
;

127 
AT91_REG
 
	mPIOA_CODR
;

128 
AT91_REG
 
	mPIOA_ODSR
;

129 
AT91_REG
 
	mPIOA_PDSR
;

130 
AT91_REG
 
	mPIOA_IER
;

131 
AT91_REG
 
	mPIOA_IDR
;

132 
AT91_REG
 
	mPIOA_IMR
;

133 
AT91_REG
 
	mPIOA_ISR
;

134 
AT91_REG
 
	mPIOA_MDER
;

135 
AT91_REG
 
	mPIOA_MDDR
;

136 
AT91_REG
 
	mPIOA_MDSR
;

137 
AT91_REG
 
	mRe£rved15
[1];

138 
AT91_REG
 
	mPIOA_PPUDR
;

139 
AT91_REG
 
	mPIOA_PPUER
;

140 
AT91_REG
 
	mPIOA_PPUSR
;

141 
AT91_REG
 
	mRe£rved16
[1];

142 
AT91_REG
 
	mPIOA_ASR
;

143 
AT91_REG
 
	mPIOA_BSR
;

144 
AT91_REG
 
	mPIOA_ABSR
;

145 
AT91_REG
 
	mRe£rved17
[9];

146 
AT91_REG
 
	mPIOA_OWER
;

147 
AT91_REG
 
	mPIOA_OWDR
;

148 
AT91_REG
 
	mPIOA_OWSR
;

149 
AT91_REG
 
	mRe£rved18
[85];

150 
AT91_REG
 
	mPIOB_PER
;

151 
AT91_REG
 
	mPIOB_PDR
;

152 
AT91_REG
 
	mPIOB_PSR
;

153 
AT91_REG
 
	mRe£rved19
[1];

154 
AT91_REG
 
	mPIOB_OER
;

155 
AT91_REG
 
	mPIOB_ODR
;

156 
AT91_REG
 
	mPIOB_OSR
;

157 
AT91_REG
 
	mRe£rved20
[1];

158 
AT91_REG
 
	mPIOB_IFER
;

159 
AT91_REG
 
	mPIOB_IFDR
;

160 
AT91_REG
 
	mPIOB_IFSR
;

161 
AT91_REG
 
	mRe£rved21
[1];

162 
AT91_REG
 
	mPIOB_SODR
;

163 
AT91_REG
 
	mPIOB_CODR
;

164 
AT91_REG
 
	mPIOB_ODSR
;

165 
AT91_REG
 
	mPIOB_PDSR
;

166 
AT91_REG
 
	mPIOB_IER
;

167 
AT91_REG
 
	mPIOB_IDR
;

168 
AT91_REG
 
	mPIOB_IMR
;

169 
AT91_REG
 
	mPIOB_ISR
;

170 
AT91_REG
 
	mPIOB_MDER
;

171 
AT91_REG
 
	mPIOB_MDDR
;

172 
AT91_REG
 
	mPIOB_MDSR
;

173 
AT91_REG
 
	mRe£rved22
[1];

174 
AT91_REG
 
	mPIOB_PPUDR
;

175 
AT91_REG
 
	mPIOB_PPUER
;

176 
AT91_REG
 
	mPIOB_PPUSR
;

177 
AT91_REG
 
	mRe£rved23
[1];

178 
AT91_REG
 
	mPIOB_ASR
;

179 
AT91_REG
 
	mPIOB_BSR
;

180 
AT91_REG
 
	mPIOB_ABSR
;

181 
AT91_REG
 
	mRe£rved24
[9];

182 
AT91_REG
 
	mPIOB_OWER
;

183 
AT91_REG
 
	mPIOB_OWDR
;

184 
AT91_REG
 
	mPIOB_OWSR
;

185 
AT91_REG
 
	mRe£rved25
[85];

186 
AT91_REG
 
	mPIOC_PER
;

187 
AT91_REG
 
	mPIOC_PDR
;

188 
AT91_REG
 
	mPIOC_PSR
;

189 
AT91_REG
 
	mRe£rved26
[1];

190 
AT91_REG
 
	mPIOC_OER
;

191 
AT91_REG
 
	mPIOC_ODR
;

192 
AT91_REG
 
	mPIOC_OSR
;

193 
AT91_REG
 
	mRe£rved27
[1];

194 
AT91_REG
 
	mPIOC_IFER
;

195 
AT91_REG
 
	mPIOC_IFDR
;

196 
AT91_REG
 
	mPIOC_IFSR
;

197 
AT91_REG
 
	mRe£rved28
[1];

198 
AT91_REG
 
	mPIOC_SODR
;

199 
AT91_REG
 
	mPIOC_CODR
;

200 
AT91_REG
 
	mPIOC_ODSR
;

201 
AT91_REG
 
	mPIOC_PDSR
;

202 
AT91_REG
 
	mPIOC_IER
;

203 
AT91_REG
 
	mPIOC_IDR
;

204 
AT91_REG
 
	mPIOC_IMR
;

205 
AT91_REG
 
	mPIOC_ISR
;

206 
AT91_REG
 
	mPIOC_MDER
;

207 
AT91_REG
 
	mPIOC_MDDR
;

208 
AT91_REG
 
	mPIOC_MDSR
;

209 
AT91_REG
 
	mRe£rved29
[1];

210 
AT91_REG
 
	mPIOC_PPUDR
;

211 
AT91_REG
 
	mPIOC_PPUER
;

212 
AT91_REG
 
	mPIOC_PPUSR
;

213 
AT91_REG
 
	mRe£rved30
[1];

214 
AT91_REG
 
	mPIOC_ASR
;

215 
AT91_REG
 
	mPIOC_BSR
;

216 
AT91_REG
 
	mPIOC_ABSR
;

217 
AT91_REG
 
	mRe£rved31
[9];

218 
AT91_REG
 
	mPIOC_OWER
;

219 
AT91_REG
 
	mPIOC_OWDR
;

220 
AT91_REG
 
	mPIOC_OWSR
;

221 
AT91_REG
 
	mRe£rved32
[213];

222 
AT91_REG
 
	mPMC_SCER
;

223 
AT91_REG
 
	mPMC_SCDR
;

224 
AT91_REG
 
	mPMC_SCSR
;

225 
AT91_REG
 
	mRe£rved33
[1];

226 
AT91_REG
 
	mPMC_PCER
;

227 
AT91_REG
 
	mPMC_PCDR
;

228 
AT91_REG
 
	mPMC_PCSR
;

229 
AT91_REG
 
	mRe£rved34
[1];

230 
AT91_REG
 
	mPMC_MOR
;

231 
AT91_REG
 
	mPMC_MCFR
;

232 
AT91_REG
 
	mPMC_PLLAR
;

233 
AT91_REG
 
	mPMC_PLLBR
;

234 
AT91_REG
 
	mPMC_MCKR
;

235 
AT91_REG
 
	mRe£rved35
[3];

236 
AT91_REG
 
	mPMC_PCKR
[8];

237 
AT91_REG
 
	mPMC_IER
;

238 
AT91_REG
 
	mPMC_IDR
;

239 
AT91_REG
 
	mPMC_SR
;

240 
AT91_REG
 
	mPMC_IMR
;

241 
AT91_REG
 
	mRe£rved36
[36];

242 
AT91_REG
 
	mRSTC_RCR
;

243 
AT91_REG
 
	mRSTC_RSR
;

244 
AT91_REG
 
	mRSTC_RMR
;

245 
AT91_REG
 
	mRe£rved37
[1];

246 
AT91_REG
 
	mSHDWC_SHCR
;

247 
AT91_REG
 
	mSHDWC_SHMR
;

248 
AT91_REG
 
	mSHDWC_SHSR
;

249 
AT91_REG
 
	mRe£rved38
[1];

250 
AT91_REG
 
	mRTTC_RTMR
;

251 
AT91_REG
 
	mRTTC_RTAR
;

252 
AT91_REG
 
	mRTTC_RTVR
;

253 
AT91_REG
 
	mRTTC_RTSR
;

254 
AT91_REG
 
	mPITC_PIMR
;

255 
AT91_REG
 
	mPITC_PISR
;

256 
AT91_REG
 
	mPITC_PIVR
;

257 
AT91_REG
 
	mPITC_PIIR
;

258 
AT91_REG
 
	mWDTC_WDCR
;

259 
AT91_REG
 
	mWDTC_WDMR
;

260 
AT91_REG
 
	mWDTC_WDSR
;

261 
AT91_REG
 
	mRe£rved39
[1];

262 
AT91_REG
 
	mSYS_GPBR0
;

263 
AT91_REG
 
	mSYS_GPBR1
;

264 
AT91_REG
 
	mSYS_GPBR2
;

265 
AT91_REG
 
	mSYS_GPBR3
;

266 } 
	tAT91S_SYS
, *
	tAT91PS_SYS
;

276 
	s_AT91S_SDRAMC
 {

277 
AT91_REG
 
	mSDRAMC_MR
;

278 
AT91_REG
 
	mSDRAMC_TR
;

279 
AT91_REG
 
	mSDRAMC_CR
;

280 
AT91_REG
 
	mSDRAMC_HSR
;

281 
AT91_REG
 
	mSDRAMC_LPR
;

282 
AT91_REG
 
	mSDRAMC_IER
;

283 
AT91_REG
 
	mSDRAMC_IDR
;

284 
AT91_REG
 
	mSDRAMC_IMR
;

285 
AT91_REG
 
	mSDRAMC_ISR
;

286 
AT91_REG
 
	mSDRAMC_MDR
;

287 } 
	tAT91S_SDRAMC
, *
	tAT91PS_SDRAMC
;

290 
	#AT91C_SDRAMC_MODE
 (() 0xF << 0)

291 
	#AT91C_SDRAMC_MODE_NORMAL_CMD
 (() 0x0)

292 
	#AT91C_SDRAMC_MODE_NOP_CMD
 (() 0x1)

293 
	#AT91C_SDRAMC_MODE_PRCGALL_CMD
 (() 0x2)

294 
	#AT91C_SDRAMC_MODE_LMR_CMD
 (() 0x3)

295 
	#AT91C_SDRAMC_MODE_RFSH_CMD
 (() 0x4)

296 
	#AT91C_SDRAMC_MODE_EXT_LMR_CMD
 (() 0x5)

297 
	#AT91C_SDRAMC_MODE_DEEP_CMD
 (() 0x6)

299 
	#AT91C_SDRAMC_COUNT
 (() 0xFFF << 0)

301 
	#AT91C_SDRAMC_NC
 (() 0x3 << 0)

302 
	#AT91C_SDRAMC_NC_8
 (() 0x0)

303 
	#AT91C_SDRAMC_NC_9
 (() 0x1)

304 
	#AT91C_SDRAMC_NC_10
 (() 0x2)

305 
	#AT91C_SDRAMC_NC_11
 (() 0x3)

306 
	#AT91C_SDRAMC_NR
 (() 0x3 << 2)

307 
	#AT91C_SDRAMC_NR_11
 (() 0x0 << 2)

308 
	#AT91C_SDRAMC_NR_12
 (() 0x1 << 2)

309 
	#AT91C_SDRAMC_NR_13
 (() 0x2 << 2)

310 
	#AT91C_SDRAMC_NB
 (() 0x1 << 4)

311 
	#AT91C_SDRAMC_NB_2_BANKS
 (() 0x0 << 4)

312 
	#AT91C_SDRAMC_NB_4_BANKS
 (() 0x1 << 4)

313 
	#AT91C_SDRAMC_CAS
 (() 0x3 << 5)

314 
	#AT91C_SDRAMC_CAS_2
 (() 0x2 << 5)

315 
	#AT91C_SDRAMC_CAS_3
 (() 0x3 << 5)

316 
	#AT91C_SDRAMC_DBW
 (() 0x1 << 7)

317 
	#AT91C_SDRAMC_DBW_32_BITS
 (() 0x0 << 7)

318 
	#AT91C_SDRAMC_DBW_16_BITS
 (() 0x1 << 7)

319 
	#AT91C_SDRAMC_TWR
 (() 0xF << 8)

320 
	#AT91C_SDRAMC_TWR_0
 (() 0x0 << 8)

321 
	#AT91C_SDRAMC_TWR_1
 (() 0x1 << 8)

322 
	#AT91C_SDRAMC_TWR_2
 (() 0x2 << 8)

323 
	#AT91C_SDRAMC_TWR_3
 (() 0x3 << 8)

324 
	#AT91C_SDRAMC_TWR_4
 (() 0x4 << 8)

325 
	#AT91C_SDRAMC_TWR_5
 (() 0x5 << 8)

326 
	#AT91C_SDRAMC_TWR_6
 (() 0x6 << 8)

327 
	#AT91C_SDRAMC_TWR_7
 (() 0x7 << 8)

328 
	#AT91C_SDRAMC_TWR_8
 (() 0x8 << 8)

329 
	#AT91C_SDRAMC_TWR_9
 (() 0x9 << 8)

330 
	#AT91C_SDRAMC_TWR_10
 (() 0xA << 8)

331 
	#AT91C_SDRAMC_TWR_11
 (() 0xB << 8)

332 
	#AT91C_SDRAMC_TWR_12
 (() 0xC << 8)

333 
	#AT91C_SDRAMC_TWR_13
 (() 0xD << 8)

334 
	#AT91C_SDRAMC_TWR_14
 (() 0xE << 8)

335 
	#AT91C_SDRAMC_TWR_15
 (() 0xF << 8)

336 
	#AT91C_SDRAMC_TRC
 (() 0xF << 12)

337 
	#AT91C_SDRAMC_TRC_0
 (() 0x0 << 12)

338 
	#AT91C_SDRAMC_TRC_1
 (() 0x1 << 12)

339 
	#AT91C_SDRAMC_TRC_2
 (() 0x2 << 12)

340 
	#AT91C_SDRAMC_TRC_3
 (() 0x3 << 12)

341 
	#AT91C_SDRAMC_TRC_4
 (() 0x4 << 12)

342 
	#AT91C_SDRAMC_TRC_5
 (() 0x5 << 12)

343 
	#AT91C_SDRAMC_TRC_6
 (() 0x6 << 12)

344 
	#AT91C_SDRAMC_TRC_7
 (() 0x7 << 12)

345 
	#AT91C_SDRAMC_TRC_8
 (() 0x8 << 12)

346 
	#AT91C_SDRAMC_TRC_9
 (() 0x9 << 12)

347 
	#AT91C_SDRAMC_TRC_10
 (() 0xA << 12)

348 
	#AT91C_SDRAMC_TRC_11
 (() 0xB << 12)

349 
	#AT91C_SDRAMC_TRC_12
 (() 0xC << 12)

350 
	#AT91C_SDRAMC_TRC_13
 (() 0xD << 12)

351 
	#AT91C_SDRAMC_TRC_14
 (() 0xE << 12)

352 
	#AT91C_SDRAMC_TRC_15
 (() 0xF << 12)

353 
	#AT91C_SDRAMC_TRP
 (() 0xF << 16)

354 
	#AT91C_SDRAMC_TRP_0
 (() 0x0 << 16)

355 
	#AT91C_SDRAMC_TRP_1
 (() 0x1 << 16)

356 
	#AT91C_SDRAMC_TRP_2
 (() 0x2 << 16)

357 
	#AT91C_SDRAMC_TRP_3
 (() 0x3 << 16)

358 
	#AT91C_SDRAMC_TRP_4
 (() 0x4 << 16)

359 
	#AT91C_SDRAMC_TRP_5
 (() 0x5 << 16)

360 
	#AT91C_SDRAMC_TRP_6
 (() 0x6 << 16)

361 
	#AT91C_SDRAMC_TRP_7
 (() 0x7 << 16)

362 
	#AT91C_SDRAMC_TRP_8
 (() 0x8 << 16)

363 
	#AT91C_SDRAMC_TRP_9
 (() 0x9 << 16)

364 
	#AT91C_SDRAMC_TRP_10
 (() 0xA << 16)

365 
	#AT91C_SDRAMC_TRP_11
 (() 0xB << 16)

366 
	#AT91C_SDRAMC_TRP_12
 (() 0xC << 16)

367 
	#AT91C_SDRAMC_TRP_13
 (() 0xD << 16)

368 
	#AT91C_SDRAMC_TRP_14
 (() 0xE << 16)

369 
	#AT91C_SDRAMC_TRP_15
 (() 0xF << 16)

370 
	#AT91C_SDRAMC_TRCD
 (() 0xF << 20)

371 
	#AT91C_SDRAMC_TRCD_0
 (() 0x0 << 20)

372 
	#AT91C_SDRAMC_TRCD_1
 (() 0x1 << 20)

373 
	#AT91C_SDRAMC_TRCD_2
 (() 0x2 << 20)

374 
	#AT91C_SDRAMC_TRCD_3
 (() 0x3 << 20)

375 
	#AT91C_SDRAMC_TRCD_4
 (() 0x4 << 20)

376 
	#AT91C_SDRAMC_TRCD_5
 (() 0x5 << 20)

377 
	#AT91C_SDRAMC_TRCD_6
 (() 0x6 << 20)

378 
	#AT91C_SDRAMC_TRCD_7
 (() 0x7 << 20)

379 
	#AT91C_SDRAMC_TRCD_8
 (() 0x8 << 20)

380 
	#AT91C_SDRAMC_TRCD_9
 (() 0x9 << 20)

381 
	#AT91C_SDRAMC_TRCD_10
 (() 0xA << 20)

382 
	#AT91C_SDRAMC_TRCD_11
 (() 0xB << 20)

383 
	#AT91C_SDRAMC_TRCD_12
 (() 0xC << 20)

384 
	#AT91C_SDRAMC_TRCD_13
 (() 0xD << 20)

385 
	#AT91C_SDRAMC_TRCD_14
 (() 0xE << 20)

386 
	#AT91C_SDRAMC_TRCD_15
 (() 0xF << 20)

387 
	#AT91C_SDRAMC_TRAS
 (() 0xF << 24)

388 
	#AT91C_SDRAMC_TRAS_0
 (() 0x0 << 24)

389 
	#AT91C_SDRAMC_TRAS_1
 (() 0x1 << 24)

390 
	#AT91C_SDRAMC_TRAS_2
 (() 0x2 << 24)

391 
	#AT91C_SDRAMC_TRAS_3
 (() 0x3 << 24)

392 
	#AT91C_SDRAMC_TRAS_4
 (() 0x4 << 24)

393 
	#AT91C_SDRAMC_TRAS_5
 (() 0x5 << 24)

394 
	#AT91C_SDRAMC_TRAS_6
 (() 0x6 << 24)

395 
	#AT91C_SDRAMC_TRAS_7
 (() 0x7 << 24)

396 
	#AT91C_SDRAMC_TRAS_8
 (() 0x8 << 24)

397 
	#AT91C_SDRAMC_TRAS_9
 (() 0x9 << 24)

398 
	#AT91C_SDRAMC_TRAS_10
 (() 0xA << 24)

399 
	#AT91C_SDRAMC_TRAS_11
 (() 0xB << 24)

400 
	#AT91C_SDRAMC_TRAS_12
 (() 0xC << 24)

401 
	#AT91C_SDRAMC_TRAS_13
 (() 0xD << 24)

402 
	#AT91C_SDRAMC_TRAS_14
 (() 0xE << 24)

403 
	#AT91C_SDRAMC_TRAS_15
 (() 0xF << 24)

404 
	#AT91C_SDRAMC_TXSR
 (() 0xF << 28)

405 
	#AT91C_SDRAMC_TXSR_0
 (() 0x0 << 28)

406 
	#AT91C_SDRAMC_TXSR_1
 (() 0x1 << 28)

407 
	#AT91C_SDRAMC_TXSR_2
 (() 0x2 << 28)

408 
	#AT91C_SDRAMC_TXSR_3
 (() 0x3 << 28)

409 
	#AT91C_SDRAMC_TXSR_4
 (() 0x4 << 28)

410 
	#AT91C_SDRAMC_TXSR_5
 (() 0x5 << 28)

411 
	#AT91C_SDRAMC_TXSR_6
 (() 0x6 << 28)

412 
	#AT91C_SDRAMC_TXSR_7
 (() 0x7 << 28)

413 
	#AT91C_SDRAMC_TXSR_8
 (() 0x8 << 28)

414 
	#AT91C_SDRAMC_TXSR_9
 (() 0x9 << 28)

415 
	#AT91C_SDRAMC_TXSR_10
 (() 0xA << 28)

416 
	#AT91C_SDRAMC_TXSR_11
 (() 0xB << 28)

417 
	#AT91C_SDRAMC_TXSR_12
 (() 0xC << 28)

418 
	#AT91C_SDRAMC_TXSR_13
 (() 0xD << 28)

419 
	#AT91C_SDRAMC_TXSR_14
 (() 0xE << 28)

420 
	#AT91C_SDRAMC_TXSR_15
 (() 0xF << 28)

422 
	#AT91C_SDRAMC_DA
 (() 0x1 << 0)

423 
	#AT91C_SDRAMC_DA_DISABLE
 (() 0x0)

424 
	#AT91C_SDRAMC_DA_ENABLE
 (() 0x1)

426 
	#AT91C_SDRAMC_LPCB
 (() 0x3 << 0)

427 
	#AT91C_SDRAMC_LPCB_DISABLE
 (() 0x0)

428 
	#AT91C_SDRAMC_LPCB_SELF_REFRESH
 (() 0x1)

429 
	#AT91C_SDRAMC_LPCB_POWER_DOWN
 (() 0x2)

430 
	#AT91C_SDRAMC_LPCB_DEEP_POWER_DOWN
 (() 0x3)

431 
	#AT91C_SDRAMC_PASR
 (() 0x7 << 4)

432 
	#AT91C_SDRAMC_TCSR
 (() 0x3 << 8)

433 
	#AT91C_SDRAMC_DS
 (() 0x3 << 10)

434 
	#AT91C_SDRAMC_TIMEOUT
 (() 0x3 << 12)

435 
	#AT91C_SDRAMC_TIMEOUT_0_CLK_CYCLES
 (() 0x0 << 12)

436 
	#AT91C_SDRAMC_TIMEOUT_64_CLK_CYCLES
 (() 0x1 << 12)

437 
	#AT91C_SDRAMC_TIMEOUT_128_CLK_CYCLES
 (() 0x2 << 12)

439 
	#AT91C_SDRAMC_RES
 (() 0x1 << 0)

444 
	#AT91C_SDRAMC_MD
 (() 0x3 << 0)

445 
	#AT91C_SDRAMC_MD_SDRAM
 (() 0x0)

446 
	#AT91C_SDRAMC_MD_LOW_POWER_SDRAM
 (() 0x1)

447 

	)

451 
	s_AT91S_SMC
 {

452 
AT91_REG
 
	mSMC_SETUP0
;

453 
AT91_REG
 
	mSMC_PULSE0
;

454 
AT91_REG
 
	mSMC_CYCLE0
;

455 
AT91_REG
 
	mSMC_CTRL0
;

456 
AT91_REG
 
	mSMC_SETUP1
;

457 
AT91_REG
 
	mSMC_PULSE1
;

458 
AT91_REG
 
	mSMC_CYCLE1
;

459 
AT91_REG
 
	mSMC_CTRL1
;

460 
AT91_REG
 
	mSMC_SETUP2
;

461 
AT91_REG
 
	mSMC_PULSE2
;

462 
AT91_REG
 
	mSMC_CYCLE2
;

463 
AT91_REG
 
	mSMC_CTRL2
;

464 
AT91_REG
 
	mSMC_SETUP3
;

465 
AT91_REG
 
	mSMC_PULSE3
;

466 
AT91_REG
 
	mSMC_CYCLE3
;

467 
AT91_REG
 
	mSMC_CTRL3
;

468 
AT91_REG
 
	mSMC_SETUP4
;

469 
AT91_REG
 
	mSMC_PULSE4
;

470 
AT91_REG
 
	mSMC_CYCLE4
;

471 
AT91_REG
 
	mSMC_CTRL4
;

472 
AT91_REG
 
	mSMC_SETUP5
;

473 
AT91_REG
 
	mSMC_PULSE5
;

474 
AT91_REG
 
	mSMC_CYCLE5
;

475 
AT91_REG
 
	mSMC_CTRL5
;

476 
AT91_REG
 
	mSMC_SETUP6
;

477 
AT91_REG
 
	mSMC_PULSE6
;

478 
AT91_REG
 
	mSMC_CYCLE6
;

479 
AT91_REG
 
	mSMC_CTRL6
;

480 
AT91_REG
 
	mSMC_SETUP7
;

481 
AT91_REG
 
	mSMC_PULSE7
;

482 
AT91_REG
 
	mSMC_CYCLE7
;

483 
AT91_REG
 
	mSMC_CTRL7
;

484 } 
	tAT91S_SMC
, *
	tAT91PS_SMC
;

487 
	#AT91C_SMC_NWESETUP
 (() 0x3F << 0)

488 
	#AT91C_SMC_NCSSETUPWR
 (() 0x3F << 8)

489 
	#AT91C_SMC_NRDSETUP
 (() 0x3F << 16)

490 
	#AT91C_SMC_NCSSETUPRD
 (() 0x3F << 24)

492 
	#AT91C_SMC_NWEPULSE
 (() 0x7F << 0)

493 
	#AT91C_SMC_NCSPULSEWR
 (() 0x7F << 8)

494 
	#AT91C_SMC_NRDPULSE
 (() 0x7F << 16)

495 
	#AT91C_SMC_NCSPULSERD
 (() 0x7F << 24)

497 
	#AT91C_SMC_NWECYCLE
 (() 0x1FF << 0)

498 
	#AT91C_SMC_NRDCYCLE
 (() 0x1FF << 16)

500 
	#AT91C_SMC_READMODE
 (() 0x1 << 0)

501 
	#AT91C_SMC_WRITEMODE
 (() 0x1 << 1)

502 
	#AT91C_SMC_NWAITM
 (() 0x3 << 5)

503 
	#AT91C_SMC_NWAITM_NWAIT_DISABLE
 (() 0x0 << 5)

504 
	#AT91C_SMC_NWAITM_NWAIT_ENABLE_FROZEN
 (() 0x2 << 5)

505 
	#AT91C_SMC_NWAITM_NWAIT_ENABLE_READY
 (() 0x3 << 5)

506 
	#AT91C_SMC_BAT
 (() 0x1 << 8)

507 
	#AT91C_SMC_BAT_BYTE_SELECT
 (() 0x0 << 8)

508 
	#AT91C_SMC_BAT_BYTE_WRITE
 (() 0x1 << 8)

509 
	#AT91C_SMC_DBW
 (() 0x3 << 12)

510 
	#AT91C_SMC_DBW_WIDTH_EIGTH_BITS
 (() 0x0 << 12)

511 
	#AT91C_SMC_DBW_WIDTH_SIXTEEN_BITS
 (() 0x1 << 12)

512 
	#AT91C_SMC_DBW_WIDTH_THIRTY_TWO_BITS
 (() 0x2 << 12)

513 
	#AT91C_SMC_TDF
 (() 0xF << 16)

514 
	#AT91C_SMC_TDFEN
 (() 0x1 << 20)

515 
	#AT91C_SMC_PMEN
 (() 0x1 << 24)

516 
	#AT91C_SMC_PS
 (() 0x3 << 28)

517 
	#AT91C_SMC_PS_SIZE_FOUR_BYTES
 (() 0x0 << 28)

518 
	#AT91C_SMC_PS_SIZE_EIGHT_BYTES
 (() 0x1 << 28)

519 
	#AT91C_SMC_PS_SIZE_SIXTEEN_BYTES
 (() 0x2 << 28)

520 
	#AT91C_SMC_PS_SIZE_THIRTY_TWO_BYTES
 (() 0x3 << 28)

549 

	)

553 
	s_AT91S_MATRIX
 {

554 
AT91_REG
 
	mMATRIX_MCFG
;

555 
AT91_REG
 
	mMATRIX_SCFG0
;

556 
AT91_REG
 
	mMATRIX_SCFG1
;

557 
AT91_REG
 
	mMATRIX_SCFG2
;

558 
AT91_REG
 
	mMATRIX_SCFG3
;

559 
AT91_REG
 
	mMATRIX_SCFG4
;

560 
AT91_REG
 
	mRe£rved0
[3];

561 
AT91_REG
 
	mMATRIX_TCMR
;

562 
AT91_REG
 
	mRe£rved1
[2];

563 
AT91_REG
 
	mMATRIX_EBICSA
;

564 
AT91_REG
 
	mMATRIX_USBPCR
;

565 
AT91_REG
 
	mRe£rved2
[3];

566 
AT91_REG
 
	mMATRIX_VERSION
;

567 } 
	tAT91S_MATRIX
, *
	tAT91PS_MATRIX
;

570 
	#AT91C_MATRIX_RCA926I
 (() 0x1 << 0)

571 
	#AT91C_MATRIX_RCA926D
 (() 0x1 << 1)

573 
	#AT91C_MATRIX_SLOT_CYCLE
 (() 0xFF << 0)

574 
	#AT91C_MATRIX_DEFMSTR_TYPE
 (() 0x3 << 16)

575 
	#AT91C_MATRIX_DEFMSTR_TYPE_NO_DEFMSTR
 (() 0x0 << 16)

576 
	#AT91C_MATRIX_DEFMSTR_TYPE_LAST_DEFMSTR
 (() 0x1 << 16)

577 
	#AT91C_MATRIX_DEFMSTR_TYPE_FIXED_DEFMSTR
 (() 0x2 << 16)

578 
	#AT91C_MATRIX_FIXED_DEFMSTR0
 (() 0x7 << 18)

579 
	#AT91C_MATRIX_FIXED_DEFMSTR0_ARM926I
 (() 0x0 << 18)

580 
	#AT91C_MATRIX_FIXED_DEFMSTR0_ARM926D
 (() 0x1 << 18)

581 
	#AT91C_MATRIX_FIXED_DEFMSTR0_HPDC3
 (() 0x2 << 18)

582 
	#AT91C_MATRIX_FIXED_DEFMSTR0_LCDC
 (() 0x3 << 18)

583 
	#AT91C_MATRIX_FIXED_DEFMSTR0_UHP
 (() 0x4 << 18)

585 
	#AT91C_MATRIX_FIXED_DEFMSTR1
 (() 0x7 << 18)

586 
	#AT91C_MATRIX_FIXED_DEFMSTR1_ARM926I
 (() 0x0 << 18)

587 
	#AT91C_MATRIX_FIXED_DEFMSTR1_ARM926D
 (() 0x1 << 18)

588 
	#AT91C_MATRIX_FIXED_DEFMSTR1_HPDC3
 (() 0x2 << 18)

589 
	#AT91C_MATRIX_FIXED_DEFMSTR1_LCDC
 (() 0x3 << 18)

590 
	#AT91C_MATRIX_FIXED_DEFMSTR1_UHP
 (() 0x4 << 18)

592 
	#AT91C_MATRIX_FIXED_DEFMSTR2
 (() 0x1 << 18)

593 
	#AT91C_MATRIX_FIXED_DEFMSTR2_ARM926I
 (() 0x0 << 18)

594 
	#AT91C_MATRIX_FIXED_DEFMSTR2_ARM926D
 (() 0x1 << 18)

596 
	#AT91C_MATRIX_FIXED_DEFMSTR3
 (() 0x7 << 18)

597 
	#AT91C_MATRIX_FIXED_DEFMSTR3_ARM926I
 (() 0x0 << 18)

598 
	#AT91C_MATRIX_FIXED_DEFMSTR3_ARM926D
 (() 0x1 << 18)

599 
	#AT91C_MATRIX_FIXED_DEFMSTR3_HPDC3
 (() 0x2 << 18)

600 
	#AT91C_MATRIX_FIXED_DEFMSTR3_LCDC
 (() 0x3 << 18)

601 
	#AT91C_MATRIX_FIXED_DEFMSTR3_UHP
 (() 0x4 << 18)

603 
	#AT91C_MATRIX_FIXED_DEFMSTR4
 (() 0x3 << 18)

604 
	#AT91C_MATRIX_FIXED_DEFMSTR4_ARM926I
 (() 0x0 << 18)

605 
	#AT91C_MATRIX_FIXED_DEFMSTR4_ARM926D
 (() 0x1 << 18)

606 
	#AT91C_MATRIX_FIXED_DEFMSTR4_HPDC3
 (() 0x2 << 18)

608 
	#AT91C_MATRIX_ITCM_SIZE
 (() 0xF << 0)

609 
	#AT91C_MATRIX_ITCM_SIZE_0KB
 (() 0x0)

610 
	#AT91C_MATRIX_ITCM_SIZE_16KB
 (() 0x5)

611 
	#AT91C_MATRIX_ITCM_SIZE_32KB
 (() 0x6)

612 
	#AT91C_MATRIX_ITCM_SIZE_64KB
 (() 0x7)

613 
	#AT91C_MATRIX_DTCM_SIZE
 (() 0xF << 4)

614 
	#AT91C_MATRIX_DTCM_SIZE_0KB
 (() 0x0 << 4)

615 
	#AT91C_MATRIX_DTCM_SIZE_16KB
 (() 0x5 << 4)

616 
	#AT91C_MATRIX_DTCM_SIZE_32KB
 (() 0x6 << 4)

617 
	#AT91C_MATRIX_DTCM_SIZE_64KB
 (() 0x7 << 4)

619 
	#AT91C_MATRIX_CS1A
 (() 0x1 << 1)

620 
	#AT91C_MATRIX_CS1A_SMC
 (() 0x0 << 1)

621 
	#AT91C_MATRIX_CS1A_SDRAMC
 (() 0x1 << 1)

622 
	#AT91C_MATRIX_CS3A
 (() 0x1 << 3)

623 
	#AT91C_MATRIX_CS3A_SMC
 (() 0x0 << 3)

624 
	#AT91C_MATRIX_CS3A_SM
 (() 0x1 << 3)

625 
	#AT91C_MATRIX_CS4A
 (() 0x1 << 4)

626 
	#AT91C_MATRIX_CS4A_SMC
 (() 0x0 << 4)

627 
	#AT91C_MATRIX_CS4A_CF
 (() 0x1 << 4)

628 
	#AT91C_MATRIX_CS5A
 (() 0x1 << 5)

629 
	#AT91C_MATRIX_CS5A_SMC
 (() 0x0 << 5)

630 
	#AT91C_MATRIX_CS5A_CF
 (() 0x1 << 5)

631 
	#AT91C_MATRIX_DBPUC
 (() 0x1 << 8)

633 
	#AT91C_MATRIX_USBPCR_PUON
 (() 0x1 << 30)

634 
	#AT91C_MATRIX_USBPCR_PUIDLE
 (() 0x1 << 31)

635 

	)

639 
	s_AT91S_AIC
 {

640 
AT91_REG
 
	mAIC_SMR
[32];

641 
AT91_REG
 
	mAIC_SVR
[32];

642 
AT91_REG
 
	mAIC_IVR
;

643 
AT91_REG
 
	mAIC_FVR
;

644 
AT91_REG
 
	mAIC_ISR
;

645 
AT91_REG
 
	mAIC_IPR
;

646 
AT91_REG
 
	mAIC_IMR
;

647 
AT91_REG
 
	mAIC_CISR
;

648 
AT91_REG
 
	mRe£rved0
[2];

649 
AT91_REG
 
	mAIC_IECR
;

650 
AT91_REG
 
	mAIC_IDCR
;

651 
AT91_REG
 
	mAIC_ICCR
;

652 
AT91_REG
 
	mAIC_ISCR
;

653 
AT91_REG
 
	mAIC_EOICR
;

654 
AT91_REG
 
	mAIC_SPU
;

655 
AT91_REG
 
	mAIC_DCR
;

656 
AT91_REG
 
	mRe£rved1
[1];

657 
AT91_REG
 
	mAIC_FFER
;

658 
AT91_REG
 
	mAIC_FFDR
;

659 
AT91_REG
 
	mAIC_FFSR
;

660 } 
	tAT91S_AIC
, *
	tAT91PS_AIC
;

663 
	#AT91C_AIC_PRIOR
 (() 0x7 << 0)

664 
	#AT91C_AIC_PRIOR_LOWEST
 (() 0x0)

665 
	#AT91C_AIC_PRIOR_HIGHEST
 (() 0x7)

666 
	#AT91C_AIC_SRCTYPE
 (() 0x3 << 5)

667 
	#AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL
 (() 0x0 << 5)

668 
	#AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL
 (() 0x0 << 5)

669 
	#AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE
 (() 0x1 << 5)

670 
	#AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE
 (() 0x1 << 5)

671 
	#AT91C_AIC_SRCTYPE_HIGH_LEVEL
 (() 0x2 << 5)

672 
	#AT91C_AIC_SRCTYPE_POSITIVE_EDGE
 (() 0x3 << 5)

674 
	#AT91C_AIC_NFIQ
 (() 0x1 << 0)

675 
	#AT91C_AIC_NIRQ
 (() 0x1 << 1)

677 
	#AT91C_AIC_DCR_PROT
 (() 0x1 << 0)

678 
	#AT91C_AIC_DCR_GMSK
 (() 0x1 << 1)

679 

	)

683 
	s_AT91S_PDC
 {

684 
AT91_REG
 
	mPDC_RPR
;

685 
AT91_REG
 
	mPDC_RCR
;

686 
AT91_REG
 
	mPDC_TPR
;

687 
AT91_REG
 
	mPDC_TCR
;

688 
AT91_REG
 
	mPDC_RNPR
;

689 
AT91_REG
 
	mPDC_RNCR
;

690 
AT91_REG
 
	mPDC_TNPR
;

691 
AT91_REG
 
	mPDC_TNCR
;

692 
AT91_REG
 
	mPDC_PTCR
;

693 
AT91_REG
 
	mPDC_PTSR
;

694 } 
	tAT91S_PDC
, *
	tAT91PS_PDC
;

697 
	#AT91C_PDC_RXTEN
 (() 0x1 << 0)

698 
	#AT91C_PDC_RXTDIS
 (() 0x1 << 1)

699 
	#AT91C_PDC_TXTEN
 (() 0x1 << 8)

700 
	#AT91C_PDC_TXTDIS
 (() 0x1 << 9)

702 

	)

706 
	s_AT91S_DBGU
 {

707 
AT91_REG
 
	mDBGU_CR
;

708 
AT91_REG
 
	mDBGU_MR
;

709 
AT91_REG
 
	mDBGU_IER
;

710 
AT91_REG
 
	mDBGU_IDR
;

711 
AT91_REG
 
	mDBGU_IMR
;

712 
AT91_REG
 
	mDBGU_CSR
;

713 
AT91_REG
 
	mDBGU_RHR
;

714 
AT91_REG
 
	mDBGU_THR
;

715 
AT91_REG
 
	mDBGU_BRGR
;

716 
AT91_REG
 
	mRe£rved0
[7];

717 
AT91_REG
 
	mDBGU_CIDR
;

718 
AT91_REG
 
	mDBGU_EXID
;

719 
AT91_REG
 
	mDBGU_FNTR
;

720 
AT91_REG
 
	mRe£rved1
[45];

721 
AT91_REG
 
	mDBGU_RPR
;

722 
AT91_REG
 
	mDBGU_RCR
;

723 
AT91_REG
 
	mDBGU_TPR
;

724 
AT91_REG
 
	mDBGU_TCR
;

725 
AT91_REG
 
	mDBGU_RNPR
;

726 
AT91_REG
 
	mDBGU_RNCR
;

727 
AT91_REG
 
	mDBGU_TNPR
;

728 
AT91_REG
 
	mDBGU_TNCR
;

729 
AT91_REG
 
	mDBGU_PTCR
;

730 
AT91_REG
 
	mDBGU_PTSR
;

731 } 
	tAT91S_DBGU
, *
	tAT91PS_DBGU
;

734 
	#AT91C_US_RSTRX
 (() 0x1 << 2)

735 
	#AT91C_US_RSTTX
 (() 0x1 << 3)

736 
	#AT91C_US_RXEN
 (() 0x1 << 4)

737 
	#AT91C_US_RXDIS
 (() 0x1 << 5)

738 
	#AT91C_US_TXEN
 (() 0x1 << 6)

739 
	#AT91C_US_TXDIS
 (() 0x1 << 7)

740 
	#AT91C_US_RSTSTA
 (() 0x1 << 8)

742 
	#AT91C_US_PAR
 (() 0x7 << 9)

743 
	#AT91C_US_PAR_EVEN
 (() 0x0 << 9)

744 
	#AT91C_US_PAR_ODD
 (() 0x1 << 9)

745 
	#AT91C_US_PAR_SPACE
 (() 0x2 << 9)

746 
	#AT91C_US_PAR_MARK
 (() 0x3 << 9)

747 
	#AT91C_US_PAR_NONE
 (() 0x4 << 9)

748 
	#AT91C_US_PAR_MULTI_DROP
 (() 0x6 << 9)

749 
	#AT91C_US_CHMODE
 (() 0x3 << 14)

750 
	#AT91C_US_CHMODE_NORMAL
 (() 0x0 << 14)

751 
	#AT91C_US_CHMODE_AUTO
 (() 0x1 << 14)

752 
	#AT91C_US_CHMODE_LOCAL
 (() 0x2 << 14)

753 
	#AT91C_US_CHMODE_REMOTE
 (() 0x3 << 14)

755 
	#AT91C_US_RXRDY
 (() 0x1 << 0)

756 
	#AT91C_US_TXRDY
 (() 0x1 << 1)

757 
	#AT91C_US_ENDRX
 (() 0x1 << 3)

758 
	#AT91C_US_ENDTX
 (() 0x1 << 4)

759 
	#AT91C_US_OVRE
 (() 0x1 << 5)

760 
	#AT91C_US_FRAME
 (() 0x1 << 6)

761 
	#AT91C_US_PARE
 (() 0x1 << 7)

762 
	#AT91C_US_TXEMPTY
 (() 0x1 << 9)

763 
	#AT91C_US_TXBUFE
 (() 0x1 << 11)

764 
	#AT91C_US_RXBUFF
 (() 0x1 << 12)

765 
	#AT91C_US_COMM_TX
 (() 0x1 << 30)

766 
	#AT91C_US_COMM_RX
 (() 0x1 << 31)

771 
	#AT91C_US_FORCE_NTRST
 (() 0x1 << 0)

772 

	)

776 
	s_AT91S_PIO
 {

777 
AT91_REG
 
	mPIO_PER
;

778 
AT91_REG
 
	mPIO_PDR
;

779 
AT91_REG
 
	mPIO_PSR
;

780 
AT91_REG
 
	mRe£rved0
[1];

781 
AT91_REG
 
	mPIO_OER
;

782 
AT91_REG
 
	mPIO_ODR
;

783 
AT91_REG
 
	mPIO_OSR
;

784 
AT91_REG
 
	mRe£rved1
[1];

785 
AT91_REG
 
	mPIO_IFER
;

786 
AT91_REG
 
	mPIO_IFDR
;

787 
AT91_REG
 
	mPIO_IFSR
;

788 
AT91_REG
 
	mRe£rved2
[1];

789 
AT91_REG
 
	mPIO_SODR
;

790 
AT91_REG
 
	mPIO_CODR
;

791 
AT91_REG
 
	mPIO_ODSR
;

792 
AT91_REG
 
	mPIO_PDSR
;

793 
AT91_REG
 
	mPIO_IER
;

794 
AT91_REG
 
	mPIO_IDR
;

795 
AT91_REG
 
	mPIO_IMR
;

796 
AT91_REG
 
	mPIO_ISR
;

797 
AT91_REG
 
	mPIO_MDER
;

798 
AT91_REG
 
	mPIO_MDDR
;

799 
AT91_REG
 
	mPIO_MDSR
;

800 
AT91_REG
 
	mRe£rved3
[1];

801 
AT91_REG
 
	mPIO_PPUDR
;

802 
AT91_REG
 
	mPIO_PPUER
;

803 
AT91_REG
 
	mPIO_PPUSR
;

804 
AT91_REG
 
	mRe£rved4
[1];

805 
AT91_REG
 
	mPIO_ASR
;

806 
AT91_REG
 
	mPIO_BSR
;

807 
AT91_REG
 
	mPIO_ABSR
;

808 
AT91_REG
 
	mRe£rved5
[9];

809 
AT91_REG
 
	mPIO_OWER
;

810 
AT91_REG
 
	mPIO_OWDR
;

811 
AT91_REG
 
	mPIO_OWSR
;

812 } 
	tAT91S_PIO
, *
	tAT91PS_PIO
;

818 
	s_AT91S_CKGR
 {

819 
AT91_REG
 
	mCKGR_MOR
;

820 
AT91_REG
 
	mCKGR_MCFR
;

821 
AT91_REG
 
	mCKGR_PLLAR
;

822 
AT91_REG
 
	mCKGR_PLLBR
;

823 } 
	tAT91S_CKGR
, *
	tAT91PS_CKGR
;

826 
	#AT91C_CKGR_MOSCEN
 (() 0x1 << 0)

827 
	#AT91C_CKGR_OSCBYPASS
 (() 0x1 << 1)

828 
	#AT91C_CKGR_OSCOUNT
 (() 0xFF << 8)

830 
	#AT91C_CKGR_MAINF
 (() 0xFFFF << 0)

831 
	#AT91C_CKGR_MAINRDY
 (() 0x1 << 16)

833 
	#AT91C_CKGR_DIVA
 (() 0xFF << 0)

834 
	#AT91C_CKGR_DIVA_0
 (() 0x0)

835 
	#AT91C_CKGR_DIVA_BYPASS
 (() 0x1)

836 
	#AT91C_CKGR_PLLACOUNT
 (() 0x3F << 8)

837 
	#AT91C_CKGR_OUTA
 (() 0x3 << 14)

838 
	#AT91C_CKGR_OUTA_0
 (() 0x0 << 14)

839 
	#AT91C_CKGR_OUTA_1
 (() 0x1 << 14)

840 
	#AT91C_CKGR_OUTA_2
 (() 0x2 << 14)

841 
	#AT91C_CKGR_OUTA_3
 (() 0x3 << 14)

842 
	#AT91C_CKGR_MULA
 (() 0x7FF << 16)

843 
	#AT91C_CKGR_SRCA
 (() 0x1 << 29)

845 
	#AT91C_CKGR_DIVB
 (() 0xFF << 0)

846 
	#AT91C_CKGR_DIVB_0
 (() 0x0)

847 
	#AT91C_CKGR_DIVB_BYPASS
 (() 0x1)

848 
	#AT91C_CKGR_PLLBCOUNT
 (() 0x3F << 8)

849 
	#AT91C_CKGR_OUTB
 (() 0x3 << 14)

850 
	#AT91C_CKGR_OUTB_0
 (() 0x0 << 14)

851 
	#AT91C_CKGR_OUTB_1
 (() 0x1 << 14)

852 
	#AT91C_CKGR_OUTB_2
 (() 0x2 << 14)

853 
	#AT91C_CKGR_OUTB_3
 (() 0x3 << 14)

854 
	#AT91C_CKGR_MULB
 (() 0x7FF << 16)

855 
	#AT91C_CKGR_USBDIV
 (() 0x3 << 28)

856 
	#AT91C_CKGR_USBDIV_0
 (() 0x0 << 28)

857 
	#AT91C_CKGR_USBDIV_1
 (() 0x1 << 28)

858 
	#AT91C_CKGR_USBDIV_2
 (() 0x2 << 28)

859 

	)

863 
	s_AT91S_PMC
 {

864 
AT91_REG
 
	mPMC_SCER
;

865 
AT91_REG
 
	mPMC_SCDR
;

866 
AT91_REG
 
	mPMC_SCSR
;

867 
AT91_REG
 
	mRe£rved0
[1];

868 
AT91_REG
 
	mPMC_PCER
;

869 
AT91_REG
 
	mPMC_PCDR
;

870 
AT91_REG
 
	mPMC_PCSR
;

871 
AT91_REG
 
	mRe£rved1
[1];

872 
AT91_REG
 
	mPMC_MOR
;

873 
AT91_REG
 
	mPMC_MCFR
;

874 
AT91_REG
 
	mPMC_PLLAR
;

875 
AT91_REG
 
	mPMC_PLLBR
;

876 
AT91_REG
 
	mPMC_MCKR
;

877 
AT91_REG
 
	mRe£rved2
[3];

878 
AT91_REG
 
	mPMC_PCKR
[8];

879 
AT91_REG
 
	mPMC_IER
;

880 
AT91_REG
 
	mPMC_IDR
;

881 
AT91_REG
 
	mPMC_SR
;

882 
AT91_REG
 
	mPMC_IMR
;

883 } 
	tAT91S_PMC
, *
	tAT91PS_PMC
;

886 
	#AT91C_PMC_PCK
 (() 0x1 << 0)

887 
	#AT91C_PMC_UHP
 (() 0x1 << 6)

888 
	#AT91C_PMC_UDP
 (() 0x1 << 7)

889 
	#AT91C_PMC_PCK0
 (() 0x1 << 8)

890 
	#AT91C_PMC_PCK1
 (() 0x1 << 9)

891 
	#AT91C_PMC_PCK2
 (() 0x1 << 10)

892 
	#AT91C_PMC_PCK3
 (() 0x1 << 11)

893 
	#AT91C_PMC_HCK0
 (() 0x1 << 16)

894 
	#AT91C_PMC_HCK1
 (() 0x1 << 17)

902 
	#AT91C_PMC_CSS
 (() 0x3 << 0)

903 
	#AT91C_PMC_CSS_SLOW_CLK
 (() 0x0)

904 
	#AT91C_PMC_CSS_MAIN_CLK
 (() 0x1)

905 
	#AT91C_PMC_CSS_PLLA_CLK
 (() 0x2)

906 
	#AT91C_PMC_CSS_PLLB_CLK
 (() 0x3)

907 
	#AT91C_PMC_PRES
 (() 0x7 << 2)

908 
	#AT91C_PMC_PRES_CLK
 (() 0x0 << 2)

909 
	#AT91C_PMC_PRES_CLK_2
 (() 0x1 << 2)

910 
	#AT91C_PMC_PRES_CLK_4
 (() 0x2 << 2)

911 
	#AT91C_PMC_PRES_CLK_8
 (() 0x3 << 2)

912 
	#AT91C_PMC_PRES_CLK_16
 (() 0x4 << 2)

913 
	#AT91C_PMC_PRES_CLK_32
 (() 0x5 << 2)

914 
	#AT91C_PMC_PRES_CLK_64
 (() 0x6 << 2)

915 
	#AT91C_PMC_MDIV
 (() 0x3 << 8)

916 
	#AT91C_PMC_MDIV_1
 (() 0x0 << 8)

917 
	#AT91C_PMC_MDIV_2
 (() 0x1 << 8)

918 
	#AT91C_PMC_MDIV_3
 (() 0x2 << 8)

921 
	#AT91C_PMC_MOSCS
 (() 0x1 << 0)

922 
	#AT91C_PMC_LOCKA
 (() 0x1 << 1)

923 
	#AT91C_PMC_LOCKB
 (() 0x1 << 2)

924 
	#AT91C_PMC_MCKRDY
 (() 0x1 << 3)

925 
	#AT91C_PMC_PCK0RDY
 (() 0x1 << 8)

926 
	#AT91C_PMC_PCK1RDY
 (() 0x1 << 9)

927 
	#AT91C_PMC_PCK2RDY
 (() 0x1 << 10)

928 
	#AT91C_PMC_PCK3RDY
 (() 0x1 << 11)

932 

	)

936 
	s_AT91S_RSTC
 {

937 
AT91_REG
 
	mRSTC_RCR
;

938 
AT91_REG
 
	mRSTC_RSR
;

939 
AT91_REG
 
	mRSTC_RMR
;

940 } 
	tAT91S_RSTC
, *
	tAT91PS_RSTC
;

943 
	#AT91C_RSTC_PROCRST
 (() 0x1 << 0)

944 
	#AT91C_RSTC_ICERST
 (() 0x1 << 1)

945 
	#AT91C_RSTC_PERRST
 (() 0x1 << 2)

946 
	#AT91C_RSTC_EXTRST
 (() 0x1 << 3)

947 
	#AT91C_RSTC_KEY
 (() 0xFF << 24)

949 
	#AT91C_RSTC_URSTS
 (() 0x1 << 0)

950 
	#AT91C_RSTC_RSTTYP
 (() 0x7 << 8)

951 
	#AT91C_RSTC_RSTTYP_GENERAL
 (() 0x0 << 8)

952 
	#AT91C_RSTC_RSTTYP_WAKEUP
 (() 0x1 << 8)

953 
	#AT91C_RSTC_RSTTYP_WATCHDOG
 (() 0x2 << 8)

954 
	#AT91C_RSTC_RSTTYP_SOFTWARE
 (() 0x3 << 8)

955 
	#AT91C_RSTC_RSTTYP_USER
 (() 0x4 << 8)

956 
	#AT91C_RSTC_NRSTL
 (() 0x1 << 16)

957 
	#AT91C_RSTC_SRCMP
 (() 0x1 << 17)

959 
	#AT91C_RSTC_URSTEN
 (() 0x1 << 0)

960 
	#AT91C_RSTC_URSTIEN
 (() 0x1 << 4)

961 
	#AT91C_RSTC_ERSTL
 (() 0xF << 8)

962 

	)

966 
	s_AT91S_SHDWC
 {

967 
AT91_REG
 
	mSHDWC_SHCR
;

968 
AT91_REG
 
	mSHDWC_SHMR
;

969 
AT91_REG
 
	mSHDWC_SHSR
;

970 } 
	tAT91S_SHDWC
, *
	tAT91PS_SHDWC
;

973 
	#AT91C_SHDWC_SHDW
 (() 0x1 << 0)

974 
	#AT91C_SHDWC_KEY
 (() 0xFF << 24)

976 
	#AT91C_SHDWC_WKMODE0
 (() 0x3 << 0)

977 
	#AT91C_SHDWC_WKMODE0_NONE
 (() 0x0)

978 
	#AT91C_SHDWC_WKMODE0_HIGH
 (() 0x1)

979 
	#AT91C_SHDWC_WKMODE0_LOW
 (() 0x2)

980 
	#AT91C_SHDWC_WKMODE0_ANYLEVEL
 (() 0x3)

981 
	#AT91C_SHDWC_CPTWK0
 (() 0xF << 4)

982 
	#AT91C_SHDWC_RTTWKEN
 (() 0x1 << 16)

984 
	#AT91C_SHDWC_WAKEUP0
 (() 0x1 << 0)

985 
	#AT91C_SHDWC_RTTWK
 (() 0x1 << 16)

986 

	)

990 
	s_AT91S_RTTC
 {

991 
AT91_REG
 
	mRTTC_RTMR
;

992 
AT91_REG
 
	mRTTC_RTAR
;

993 
AT91_REG
 
	mRTTC_RTVR
;

994 
AT91_REG
 
	mRTTC_RTSR
;

995 } 
	tAT91S_RTTC
, *
	tAT91PS_RTTC
;

998 
	#AT91C_RTTC_RTPRES
 (() 0xFFFF << 0)

999 
	#AT91C_RTTC_ALMIEN
 (() 0x1 << 16)

1000 
	#AT91C_RTTC_RTTINCIEN
 (() 0x1 << 17)

1001 
	#AT91C_RTTC_RTTRST
 (() 0x1 << 18)

1003 
	#AT91C_RTTC_ALMV
 (() 0x0 << 0)

1005 
	#AT91C_RTTC_CRTV
 (() 0x0 << 0)

1007 
	#AT91C_RTTC_ALMS
 (() 0x1 << 0)

1008 
	#AT91C_RTTC_RTTINC
 (() 0x1 << 1)

1009 

	)

1013 
	s_AT91S_PITC
 {

1014 
AT91_REG
 
	mPITC_PIMR
;

1015 
AT91_REG
 
	mPITC_PISR
;

1016 
AT91_REG
 
	mPITC_PIVR
;

1017 
AT91_REG
 
	mPITC_PIIR
;

1018 } 
	tAT91S_PITC
, *
	tAT91PS_PITC
;

1021 
	#AT91C_PITC_PIV
 (() 0xFFFFF << 0)

1022 
	#AT91C_PITC_PITEN
 (() 0x1 << 24)

1023 
	#AT91C_PITC_PITIEN
 (() 0x1 << 25)

1025 
	#AT91C_PITC_PITS
 (() 0x1 << 0)

1027 
	#AT91C_PITC_CPIV
 (() 0xFFFFF << 0)

1028 
	#AT91C_PITC_PICNT
 (() 0xFFF << 20)

1030 

	)

1034 
	s_AT91S_WDTC
 {

1035 
AT91_REG
 
	mWDTC_WDCR
;

1036 
AT91_REG
 
	mWDTC_WDMR
;

1037 
AT91_REG
 
	mWDTC_WDSR
;

1038 } 
	tAT91S_WDTC
, *
	tAT91PS_WDTC
;

1041 
	#AT91C_WDTC_WDRSTT
 (() 0x1 << 0)

1042 
	#AT91C_WDTC_KEY
 (() 0xFF << 24)

1044 
	#AT91C_WDTC_WDV
 (() 0xFFF << 0)

1045 
	#AT91C_WDTC_WDFIEN
 (() 0x1 << 12)

1046 
	#AT91C_WDTC_WDRSTEN
 (() 0x1 << 13)

1047 
	#AT91C_WDTC_WDRPROC
 (() 0x1 << 14)

1048 
	#AT91C_WDTC_WDDIS
 (() 0x1 << 15)

1049 
	#AT91C_WDTC_WDD
 (() 0xFFF << 16)

1050 
	#AT91C_WDTC_WDDBGHLT
 (() 0x1 << 28)

1051 
	#AT91C_WDTC_WDIDLEHLT
 (() 0x1 << 29)

1053 
	#AT91C_WDTC_WDUNF
 (() 0x1 << 0)

1054 
	#AT91C_WDTC_WDERR
 (() 0x1 << 1)

1055 

	)

1059 
	s_AT91S_TC
 {

1060 
AT91_REG
 
	mTC_CCR
;

1061 
AT91_REG
 
	mTC_CMR
;

1062 
AT91_REG
 
	mRe£rved0
[2];

1063 
AT91_REG
 
	mTC_CV
;

1064 
AT91_REG
 
	mTC_RA
;

1065 
AT91_REG
 
	mTC_RB
;

1066 
AT91_REG
 
	mTC_RC
;

1067 
AT91_REG
 
	mTC_SR
;

1068 
AT91_REG
 
	mTC_IER
;

1069 
AT91_REG
 
	mTC_IDR
;

1070 
AT91_REG
 
	mTC_IMR
;

1071 } 
	tAT91S_TC
, *
	tAT91PS_TC
;

1074 
	#AT91C_TC_CLKEN
 (() 0x1 << 0)

1075 
	#AT91C_TC_CLKDIS
 (() 0x1 << 1)

1076 
	#AT91C_TC_SWTRG
 (() 0x1 << 2)

1078 
	#AT91C_TC_CLKS
 (() 0x7 << 0)

1079 
	#AT91C_TC_CLKS_TIMER_DIV1_CLOCK
 (() 0x0)

1080 
	#AT91C_TC_CLKS_TIMER_DIV2_CLOCK
 (() 0x1)

1081 
	#AT91C_TC_CLKS_TIMER_DIV3_CLOCK
 (() 0x2)

1082 
	#AT91C_TC_CLKS_TIMER_DIV4_CLOCK
 (() 0x3)

1083 
	#AT91C_TC_CLKS_TIMER_DIV5_CLOCK
 (() 0x4)

1084 
	#AT91C_TC_CLKS_XC0
 (() 0x5)

1085 
	#AT91C_TC_CLKS_XC1
 (() 0x6)

1086 
	#AT91C_TC_CLKS_XC2
 (() 0x7)

1087 
	#AT91C_TC_CLKI
 (() 0x1 << 3)

1088 
	#AT91C_TC_BURST
 (() 0x3 << 4)

1089 
	#AT91C_TC_BURST_NONE
 (() 0x0 << 4)

1090 
	#AT91C_TC_BURST_XC0
 (() 0x1 << 4)

1091 
	#AT91C_TC_BURST_XC1
 (() 0x2 << 4)

1092 
	#AT91C_TC_BURST_XC2
 (() 0x3 << 4)

1093 
	#AT91C_TC_CPCSTOP
 (() 0x1 << 6)

1094 
	#AT91C_TC_LDBSTOP
 (() 0x1 << 6)

1095 
	#AT91C_TC_CPCDIS
 (() 0x1 << 7)

1096 
	#AT91C_TC_LDBDIS
 (() 0x1 << 7)

1097 
	#AT91C_TC_ETRGEDG
 (() 0x3 << 8)

1098 
	#AT91C_TC_ETRGEDG_NONE
 (() 0x0 << 8)

1099 
	#AT91C_TC_ETRGEDG_RISING
 (() 0x1 << 8)

1100 
	#AT91C_TC_ETRGEDG_FALLING
 (() 0x2 << 8)

1101 
	#AT91C_TC_ETRGEDG_BOTH
 (() 0x3 << 8)

1102 
	#AT91C_TC_EEVTEDG
 (() 0x3 << 8)

1103 
	#AT91C_TC_EEVTEDG_NONE
 (() 0x0 << 8)

1104 
	#AT91C_TC_EEVTEDG_RISING
 (() 0x1 << 8)

1105 
	#AT91C_TC_EEVTEDG_FALLING
 (() 0x2 << 8)

1106 
	#AT91C_TC_EEVTEDG_BOTH
 (() 0x3 << 8)

1107 
	#AT91C_TC_EEVT
 (() 0x3 << 10)

1108 
	#AT91C_TC_EEVT_TIOB
 (() 0x0 << 10)

1109 
	#AT91C_TC_EEVT_XC0
 (() 0x1 << 10)

1110 
	#AT91C_TC_EEVT_XC1
 (() 0x2 << 10)

1111 
	#AT91C_TC_EEVT_XC2
 (() 0x3 << 10)

1112 
	#AT91C_TC_ABETRG
 (() 0x1 << 10)

1113 
	#AT91C_TC_ENETRG
 (() 0x1 << 12)

1114 
	#AT91C_TC_WAVESEL
 (() 0x3 << 13)

1115 
	#AT91C_TC_WAVESEL_UP
 (() 0x0 << 13)

1116 
	#AT91C_TC_WAVESEL_UPDOWN
 (() 0x1 << 13)

1117 
	#AT91C_TC_WAVESEL_UP_AUTO
 (() 0x2 << 13)

1118 
	#AT91C_TC_WAVESEL_UPDOWN_AUTO
 (() 0x3 << 13)

1119 
	#AT91C_TC_CPCTRG
 (() 0x1 << 14)

1120 
	#AT91C_TC_WAVE
 (() 0x1 << 15)

1121 
	#AT91C_TC_ACPA
 (() 0x3 << 16)

1122 
	#AT91C_TC_ACPA_NONE
 (() 0x0 << 16)

1123 
	#AT91C_TC_ACPA_SET
 (() 0x1 << 16)

1124 
	#AT91C_TC_ACPA_CLEAR
 (() 0x2 << 16)

1125 
	#AT91C_TC_ACPA_TOGGLE
 (() 0x3 << 16)

1126 
	#AT91C_TC_LDRA
 (() 0x3 << 16)

1127 
	#AT91C_TC_LDRA_NONE
 (() 0x0 << 16)

1128 
	#AT91C_TC_LDRA_RISING
 (() 0x1 << 16)

1129 
	#AT91C_TC_LDRA_FALLING
 (() 0x2 << 16)

1130 
	#AT91C_TC_LDRA_BOTH
 (() 0x3 << 16)

1131 
	#AT91C_TC_ACPC
 (() 0x3 << 18)

1132 
	#AT91C_TC_ACPC_NONE
 (() 0x0 << 18)

1133 
	#AT91C_TC_ACPC_SET
 (() 0x1 << 18)

1134 
	#AT91C_TC_ACPC_CLEAR
 (() 0x2 << 18)

1135 
	#AT91C_TC_ACPC_TOGGLE
 (() 0x3 << 18)

1136 
	#AT91C_TC_LDRB
 (() 0x3 << 18)

1137 
	#AT91C_TC_LDRB_NONE
 (() 0x0 << 18)

1138 
	#AT91C_TC_LDRB_RISING
 (() 0x1 << 18)

1139 
	#AT91C_TC_LDRB_FALLING
 (() 0x2 << 18)

1140 
	#AT91C_TC_LDRB_BOTH
 (() 0x3 << 18)

1141 
	#AT91C_TC_AEEVT
 (() 0x3 << 20)

1142 
	#AT91C_TC_AEEVT_NONE
 (() 0x0 << 20)

1143 
	#AT91C_TC_AEEVT_SET
 (() 0x1 << 20)

1144 
	#AT91C_TC_AEEVT_CLEAR
 (() 0x2 << 20)

1145 
	#AT91C_TC_AEEVT_TOGGLE
 (() 0x3 << 20)

1146 
	#AT91C_TC_ASWTRG
 (() 0x3 << 22)

1147 
	#AT91C_TC_ASWTRG_NONE
 (() 0x0 << 22)

1148 
	#AT91C_TC_ASWTRG_SET
 (() 0x1 << 22)

1149 
	#AT91C_TC_ASWTRG_CLEAR
 (() 0x2 << 22)

1150 
	#AT91C_TC_ASWTRG_TOGGLE
 (() 0x3 << 22)

1151 
	#AT91C_TC_BCPB
 (() 0x3 << 24)

1152 
	#AT91C_TC_BCPB_NONE
 (() 0x0 << 24)

1153 
	#AT91C_TC_BCPB_SET
 (() 0x1 << 24)

1154 
	#AT91C_TC_BCPB_CLEAR
 (() 0x2 << 24)

1155 
	#AT91C_TC_BCPB_TOGGLE
 (() 0x3 << 24)

1156 
	#AT91C_TC_BCPC
 (() 0x3 << 26)

1157 
	#AT91C_TC_BCPC_NONE
 (() 0x0 << 26)

1158 
	#AT91C_TC_BCPC_SET
 (() 0x1 << 26)

1159 
	#AT91C_TC_BCPC_CLEAR
 (() 0x2 << 26)

1160 
	#AT91C_TC_BCPC_TOGGLE
 (() 0x3 << 26)

1161 
	#AT91C_TC_BEEVT
 (() 0x3 << 28)

1162 
	#AT91C_TC_BEEVT_NONE
 (() 0x0 << 28)

1163 
	#AT91C_TC_BEEVT_SET
 (() 0x1 << 28)

1164 
	#AT91C_TC_BEEVT_CLEAR
 (() 0x2 << 28)

1165 
	#AT91C_TC_BEEVT_TOGGLE
 (() 0x3 << 28)

1166 
	#AT91C_TC_BSWTRG
 (() 0x3 << 30)

1167 
	#AT91C_TC_BSWTRG_NONE
 (() 0x0 << 30)

1168 
	#AT91C_TC_BSWTRG_SET
 (() 0x1 << 30)

1169 
	#AT91C_TC_BSWTRG_CLEAR
 (() 0x2 << 30)

1170 
	#AT91C_TC_BSWTRG_TOGGLE
 (() 0x3 << 30)

1172 
	#AT91C_TC_COVFS
 (() 0x1 << 0)

1173 
	#AT91C_TC_LOVRS
 (() 0x1 << 1)

1174 
	#AT91C_TC_CPAS
 (() 0x1 << 2)

1175 
	#AT91C_TC_CPBS
 (() 0x1 << 3)

1176 
	#AT91C_TC_CPCS
 (() 0x1 << 4)

1177 
	#AT91C_TC_LDRAS
 (() 0x1 << 5)

1178 
	#AT91C_TC_LDRBS
 (() 0x1 << 6)

1179 
	#AT91C_TC_ETRGS
 (() 0x1 << 7)

1180 
	#AT91C_TC_CLKSTA
 (() 0x1 << 16)

1181 
	#AT91C_TC_MTIOA
 (() 0x1 << 17)

1182 
	#AT91C_TC_MTIOB
 (() 0x1 << 18)

1186 

	)

1190 
	s_AT91S_TCB
 {

1191 
AT91S_TC
 
	mTCB_TC0
;

1192 
AT91_REG
 
	mRe£rved0
[4];

1193 
AT91S_TC
 
	mTCB_TC1
;

1194 
AT91_REG
 
	mRe£rved1
[4];

1195 
AT91S_TC
 
	mTCB_TC2
;

1196 
AT91_REG
 
	mRe£rved2
[4];

1197 
AT91_REG
 
	mTCB_BCR
;

1198 
AT91_REG
 
	mTCB_BMR
;

1199 } 
	tAT91S_TCB
, *
	tAT91PS_TCB
;

1202 
	#AT91C_TCB_SYNC
 (() 0x1 << 0)

1204 
	#AT91C_TCB_TC0XC0S
 (() 0x3 << 0)

1205 
	#AT91C_TCB_TC0XC0S_TCLK0
 (() 0x0)

1206 
	#AT91C_TCB_TC0XC0S_NONE
 (() 0x1)

1207 
	#AT91C_TCB_TC0XC0S_TIOA1
 (() 0x2)

1208 
	#AT91C_TCB_TC0XC0S_TIOA2
 (() 0x3)

1209 
	#AT91C_TCB_TC1XC1S
 (() 0x3 << 2)

1210 
	#AT91C_TCB_TC1XC1S_TCLK1
 (() 0x0 << 2)

1211 
	#AT91C_TCB_TC1XC1S_NONE
 (() 0x1 << 2)

1212 
	#AT91C_TCB_TC1XC1S_TIOA0
 (() 0x2 << 2)

1213 
	#AT91C_TCB_TC1XC1S_TIOA2
 (() 0x3 << 2)

1214 
	#AT91C_TCB_TC2XC2S
 (() 0x3 << 4)

1215 
	#AT91C_TCB_TC2XC2S_TCLK2
 (() 0x0 << 4)

1216 
	#AT91C_TCB_TC2XC2S_NONE
 (() 0x1 << 4)

1217 
	#AT91C_TCB_TC2XC2S_TIOA0
 (() 0x2 << 4)

1218 
	#AT91C_TCB_TC2XC2S_TIOA1
 (() 0x3 << 4)

1219 

	)

1223 
	s_AT91S_UDP
 {

1224 
AT91_REG
 
	mUDP_NUM
;

1225 
AT91_REG
 
	mUDP_GLBSTATE
;

1226 
AT91_REG
 
	mUDP_FADDR
;

1227 
AT91_REG
 
	mRe£rved0
[1];

1228 
AT91_REG
 
	mUDP_IER
;

1229 
AT91_REG
 
	mUDP_IDR
;

1230 
AT91_REG
 
	mUDP_IMR
;

1231 
AT91_REG
 
	mUDP_ISR
;

1232 
AT91_REG
 
	mUDP_ICR
;

1233 
AT91_REG
 
	mRe£rved1
[1];

1234 
AT91_REG
 
	mUDP_RSTEP
;

1235 
AT91_REG
 
	mRe£rved2
[1];

1236 
AT91_REG
 
	mUDP_CSR
[6];

1237 
AT91_REG
 
	mRe£rved3
[2];

1238 
AT91_REG
 
	mUDP_FDR
[6];

1239 
AT91_REG
 
	mRe£rved4
[3];

1240 
AT91_REG
 
	mUDP_TXVC
;

1241 } 
	tAT91S_UDP
, *
	tAT91PS_UDP
;

1244 
	#AT91C_UDP_FRM_NUM
 (() 0x7FF << 0)

1245 
	#AT91C_UDP_FRM_ERR
 (() 0x1 << 16)

1246 
	#AT91C_UDP_FRM_OK
 (() 0x1 << 17)

1248 
	#AT91C_UDP_FADDEN
 (() 0x1 << 0)

1249 
	#AT91C_UDP_CONFG
 (() 0x1 << 1)

1250 
	#AT91C_UDP_ESR
 (() 0x1 << 2)

1251 
	#AT91C_UDP_RSMINPR
 (() 0x1 << 3)

1252 
	#AT91C_UDP_RMWUPE
 (() 0x1 << 4)

1254 
	#AT91C_UDP_FADD
 (() 0xFF << 0)

1255 
	#AT91C_UDP_FEN
 (() 0x1 << 8)

1257 
	#AT91C_UDP_EPINT0
 (() 0x1 << 0)

1258 
	#AT91C_UDP_EPINT1
 (() 0x1 << 1)

1259 
	#AT91C_UDP_EPINT2
 (() 0x1 << 2)

1260 
	#AT91C_UDP_EPINT3
 (() 0x1 << 3)

1261 
	#AT91C_UDP_EPINT4
 (() 0x1 << 4)

1262 
	#AT91C_UDP_EPINT5
 (() 0x1 << 5)

1263 
	#AT91C_UDP_RXSUSP
 (() 0x1 << 8)

1264 
	#AT91C_UDP_RXRSM
 (() 0x1 << 9)

1265 
	#AT91C_UDP_EXTRSM
 (() 0x1 << 10)

1266 
	#AT91C_UDP_SOFINT
 (() 0x1 << 11)

1267 
	#AT91C_UDP_WAKEUP
 (() 0x1 << 13)

1271 
	#AT91C_UDP_ENDBUSRES
 (() 0x1 << 12)

1274 
	#AT91C_UDP_EP0
 (() 0x1 << 0)

1275 
	#AT91C_UDP_EP1
 (() 0x1 << 1)

1276 
	#AT91C_UDP_EP2
 (() 0x1 << 2)

1277 
	#AT91C_UDP_EP3
 (() 0x1 << 3)

1278 
	#AT91C_UDP_EP4
 (() 0x1 << 4)

1279 
	#AT91C_UDP_EP5
 (() 0x1 << 5)

1281 
	#AT91C_UDP_TXCOMP
 (() 0x1 << 0)

1282 
	#AT91C_UDP_RX_DATA_BK0
 (() 0x1 << 1)

1283 
	#AT91C_UDP_RXSETUP
 (() 0x1 << 2)

1284 
	#AT91C_UDP_ISOERROR
 (() 0x1 << 3)

1285 
	#AT91C_UDP_STALLSENT
 (() 0x1 << 3)

1286 
	#AT91C_UDP_TXPKTRDY
 (() 0x1 << 4)

1287 
	#AT91C_UDP_FORCESTALL
 (() 0x1 << 5)

1288 
	#AT91C_UDP_RX_DATA_BK1
 (() 0x1 << 6)

1289 
	#AT91C_UDP_DIR
 (() 0x1 << 7)

1290 
	#AT91C_UDP_EPTYPE
 (() 0x7 << 8)

1291 
	#AT91C_UDP_EPTYPE_CTRL
 (() 0x0 << 8)

1292 
	#AT91C_UDP_EPTYPE_ISO_OUT
 (() 0x1 << 8)

1293 
	#AT91C_UDP_EPTYPE_BULK_OUT
 (() 0x2 << 8)

1294 
	#AT91C_UDP_EPTYPE_INT_OUT
 (() 0x3 << 8)

1295 
	#AT91C_UDP_EPTYPE_ISO_IN
 (() 0x5 << 8)

1296 
	#AT91C_UDP_EPTYPE_BULK_IN
 (() 0x6 << 8)

1297 
	#AT91C_UDP_EPTYPE_INT_IN
 (() 0x7 << 8)

1298 
	#AT91C_UDP_DTGLE
 (() 0x1 << 11)

1299 
	#AT91C_UDP_EPEDS
 (() 0x1 << 15)

1300 
	#AT91C_UDP_RXBYTECNT
 (() 0x7FF << 16)

1302 
	#AT91C_UDP_TXVDIS
 (() 0x1 << 8)

1303 
	#AT91C_UDP_PUON
 (() 0x1 << 9)

1304 

	)

1308 
	s_AT91S_MCI
 {

1309 
AT91_REG
 
	mMCI_CR
;

1310 
AT91_REG
 
	mMCI_MR
;

1311 
AT91_REG
 
	mMCI_DTOR
;

1312 
AT91_REG
 
	mMCI_SDCR
;

1313 
AT91_REG
 
	mMCI_ARGR
;

1314 
AT91_REG
 
	mMCI_CMDR
;

1315 
AT91_REG
 
	mRe£rved0
[2];

1316 
AT91_REG
 
	mMCI_RSPR
[4];

1317 
AT91_REG
 
	mMCI_RDR
;

1318 
AT91_REG
 
	mMCI_TDR
;

1319 
AT91_REG
 
	mRe£rved1
[2];

1320 
AT91_REG
 
	mMCI_SR
;

1321 
AT91_REG
 
	mMCI_IER
;

1322 
AT91_REG
 
	mMCI_IDR
;

1323 
AT91_REG
 
	mMCI_IMR
;

1324 
AT91_REG
 
	mRe£rved2
[44];

1325 
AT91_REG
 
	mMCI_RPR
;

1326 
AT91_REG
 
	mMCI_RCR
;

1327 
AT91_REG
 
	mMCI_TPR
;

1328 
AT91_REG
 
	mMCI_TCR
;

1329 
AT91_REG
 
	mMCI_RNPR
;

1330 
AT91_REG
 
	mMCI_RNCR
;

1331 
AT91_REG
 
	mMCI_TNPR
;

1332 
AT91_REG
 
	mMCI_TNCR
;

1333 
AT91_REG
 
	mMCI_PTCR
;

1334 
AT91_REG
 
	mMCI_PTSR
;

1335 } 
	tAT91S_MCI
, *
	tAT91PS_MCI
;

1338 
	#AT91C_MCI_MCIEN
 (() 0x1 << 0)

1339 
	#AT91C_MCI_MCIDIS
 (() 0x1 << 1)

1340 
	#AT91C_MCI_PWSEN
 (() 0x1 << 2)

1341 
	#AT91C_MCI_PWSDIS
 (() 0x1 << 3)

1342 
	#AT91C_MCI_SWRST
 (() 0x1 << 7)

1344 
	#AT91C_MCI_CLKDIV
 (() 0xFF << 0)

1345 
	#AT91C_MCI_PWSDIV
 (() 0x7 << 8)

1346 
	#AT91C_MCI_PDCPADV
 (() 0x1 << 14)

1347 
	#AT91C_MCI_PDCMODE
 (() 0x1 << 15)

1348 
	#AT91C_MCI_BLKLEN
 (() 0xFFF << 18)

1350 
	#AT91C_MCI_DTOCYC
 (() 0xF << 0)

1351 
	#AT91C_MCI_DTOMUL
 (() 0x7 << 4)

1352 
	#AT91C_MCI_DTOMUL_1
 (() 0x0 << 4)

1353 
	#AT91C_MCI_DTOMUL_16
 (() 0x1 << 4)

1354 
	#AT91C_MCI_DTOMUL_128
 (() 0x2 << 4)

1355 
	#AT91C_MCI_DTOMUL_256
 (() 0x3 << 4)

1356 
	#AT91C_MCI_DTOMUL_1024
 (() 0x4 << 4)

1357 
	#AT91C_MCI_DTOMUL_4096
 (() 0x5 << 4)

1358 
	#AT91C_MCI_DTOMUL_65536
 (() 0x6 << 4)

1359 
	#AT91C_MCI_DTOMUL_1048576
 (() 0x7 << 4)

1361 
	#AT91C_MCI_SCDSEL
 (() 0xF << 0)

1362 
	#AT91C_MCI_SCDBUS
 (() 0x1 << 7)

1364 
	#AT91C_MCI_CMDNB
 (() 0x3F << 0)

1365 
	#AT91C_MCI_RSPTYP
 (() 0x3 << 6)

1366 
	#AT91C_MCI_RSPTYP_NO
 (() 0x0 << 6)

1367 
	#AT91C_MCI_RSPTYP_48
 (() 0x1 << 6)

1368 
	#AT91C_MCI_RSPTYP_136
 (() 0x2 << 6)

1369 
	#AT91C_MCI_SPCMD
 (() 0x7 << 8)

1370 
	#AT91C_MCI_SPCMD_NONE
 (() 0x0 << 8)

1371 
	#AT91C_MCI_SPCMD_INIT
 (() 0x1 << 8)

1372 
	#AT91C_MCI_SPCMD_SYNC
 (() 0x2 << 8)

1373 
	#AT91C_MCI_SPCMD_IT_CMD
 (() 0x4 << 8)

1374 
	#AT91C_MCI_SPCMD_IT_REP
 (() 0x5 << 8)

1375 
	#AT91C_MCI_OPDCMD
 (() 0x1 << 11)

1376 
	#AT91C_MCI_MAXLAT
 (() 0x1 << 12)

1377 
	#AT91C_MCI_TRCMD
 (() 0x3 << 16)

1378 
	#AT91C_MCI_TRCMD_NO
 (() 0x0 << 16)

1379 
	#AT91C_MCI_TRCMD_START
 (() 0x1 << 16)

1380 
	#AT91C_MCI_TRCMD_STOP
 (() 0x2 << 16)

1381 
	#AT91C_MCI_TRDIR
 (() 0x1 << 18)

1382 
	#AT91C_MCI_TRTYP
 (() 0x3 << 19)

1383 
	#AT91C_MCI_TRTYP_BLOCK
 (() 0x0 << 19)

1384 
	#AT91C_MCI_TRTYP_MULTIPLE
 (() 0x1 << 19)

1385 
	#AT91C_MCI_TRTYP_STREAM
 (() 0x2 << 19)

1387 
	#AT91C_MCI_CMDRDY
 (() 0x1 << 0)

1388 
	#AT91C_MCI_RXRDY
 (() 0x1 << 1)

1389 
	#AT91C_MCI_TXRDY
 (() 0x1 << 2)

1390 
	#AT91C_MCI_BLKE
 (() 0x1 << 3)

1391 
	#AT91C_MCI_DTIP
 (() 0x1 << 4)

1392 
	#AT91C_MCI_NOTBUSY
 (() 0x1 << 5)

1393 
	#AT91C_MCI_ENDRX
 (() 0x1 << 6)

1394 
	#AT91C_MCI_ENDTX
 (() 0x1 << 7)

1395 
	#AT91C_MCI_RXBUFF
 (() 0x1 << 14)

1396 
	#AT91C_MCI_TXBUFE
 (() 0x1 << 15)

1397 
	#AT91C_MCI_RINDE
 (() 0x1 << 16)

1398 
	#AT91C_MCI_RDIRE
 (() 0x1 << 17)

1399 
	#AT91C_MCI_RCRCE
 (() 0x1 << 18)

1400 
	#AT91C_MCI_RENDE
 (() 0x1 << 19)

1401 
	#AT91C_MCI_RTOE
 (() 0x1 << 20)

1402 
	#AT91C_MCI_DCRCE
 (() 0x1 << 21)

1403 
	#AT91C_MCI_DTOE
 (() 0x1 << 22)

1404 
	#AT91C_MCI_OVRE
 (() 0x1 << 30)

1405 
	#AT91C_MCI_UNRE
 (() 0x1 << 31)

1409 

	)

1413 
	s_AT91S_TWI
 {

1414 
AT91_REG
 
	mTWI_CR
;

1415 
AT91_REG
 
	mTWI_MMR
;

1416 
AT91_REG
 
	mRe£rved0
[1];

1417 
AT91_REG
 
	mTWI_IADR
;

1418 
AT91_REG
 
	mTWI_CWGR
;

1419 
AT91_REG
 
	mRe£rved1
[3];

1420 
AT91_REG
 
	mTWI_SR
;

1421 
AT91_REG
 
	mTWI_IER
;

1422 
AT91_REG
 
	mTWI_IDR
;

1423 
AT91_REG
 
	mTWI_IMR
;

1424 
AT91_REG
 
	mTWI_RHR
;

1425 
AT91_REG
 
	mTWI_THR
;

1426 } 
	tAT91S_TWI
, *
	tAT91PS_TWI
;

1429 
	#AT91C_TWI_START
 (() 0x1 << 0)

1430 
	#AT91C_TWI_STOP
 (() 0x1 << 1)

1431 
	#AT91C_TWI_MSEN
 (() 0x1 << 2)

1432 
	#AT91C_TWI_MSDIS
 (() 0x1 << 3)

1433 
	#AT91C_TWI_SWRST
 (() 0x1 << 7)

1435 
	#AT91C_TWI_IADRSZ
 (() 0x3 << 8)

1436 
	#AT91C_TWI_IADRSZ_NO
 (() 0x0 << 8)

1437 
	#AT91C_TWI_IADRSZ_1_BYTE
 (() 0x1 << 8)

1438 
	#AT91C_TWI_IADRSZ_2_BYTE
 (() 0x2 << 8)

1439 
	#AT91C_TWI_IADRSZ_3_BYTE
 (() 0x3 << 8)

1440 
	#AT91C_TWI_MREAD
 (() 0x1 << 12)

1441 
	#AT91C_TWI_DADR
 (() 0x7F << 16)

1443 
	#AT91C_TWI_CLDIV
 (() 0xFF << 0)

1444 
	#AT91C_TWI_CHDIV
 (() 0xFF << 8)

1445 
	#AT91C_TWI_CKDIV
 (() 0x7 << 16)

1447 
	#AT91C_TWI_TXCOMP
 (() 0x1 << 0)

1448 
	#AT91C_TWI_RXRDY
 (() 0x1 << 1)

1449 
	#AT91C_TWI_TXRDY
 (() 0x1 << 2)

1450 
	#AT91C_TWI_OVRE
 (() 0x1 << 6)

1451 
	#AT91C_TWI_UNRE
 (() 0x1 << 7)

1452 
	#AT91C_TWI_NACK
 (() 0x1 << 8)

1456 

	)

1460 
	s_AT91S_USART
 {

1461 
AT91_REG
 
	mUS_CR
;

1462 
AT91_REG
 
	mUS_MR
;

1463 
AT91_REG
 
	mUS_IER
;

1464 
AT91_REG
 
	mUS_IDR
;

1465 
AT91_REG
 
	mUS_IMR
;

1466 
AT91_REG
 
	mUS_CSR
;

1467 
AT91_REG
 
	mUS_RHR
;

1468 
AT91_REG
 
	mUS_THR
;

1469 
AT91_REG
 
	mUS_BRGR
;

1470 
AT91_REG
 
	mUS_RTOR
;

1471 
AT91_REG
 
	mUS_TTGR
;

1472 
AT91_REG
 
	mRe£rved0
[5];

1473 
AT91_REG
 
	mUS_FIDI
;

1474 
AT91_REG
 
	mUS_NER
;

1475 
AT91_REG
 
	mRe£rved1
[1];

1476 
AT91_REG
 
	mUS_IF
;

1477 
AT91_REG
 
	mRe£rved2
[44];

1478 
AT91_REG
 
	mUS_RPR
;

1479 
AT91_REG
 
	mUS_RCR
;

1480 
AT91_REG
 
	mUS_TPR
;

1481 
AT91_REG
 
	mUS_TCR
;

1482 
AT91_REG
 
	mUS_RNPR
;

1483 
AT91_REG
 
	mUS_RNCR
;

1484 
AT91_REG
 
	mUS_TNPR
;

1485 
AT91_REG
 
	mUS_TNCR
;

1486 
AT91_REG
 
	mUS_PTCR
;

1487 
AT91_REG
 
	mUS_PTSR
;

1488 } 
	tAT91S_USART
, *
	tAT91PS_USART
;

1491 
	#AT91C_US_STTBRK
 (() 0x1 << 9)

1492 
	#AT91C_US_STPBRK
 (() 0x1 << 10)

1493 
	#AT91C_US_STTTO
 (() 0x1 << 11)

1494 
	#AT91C_US_SENDA
 (() 0x1 << 12)

1495 
	#AT91C_US_RSTIT
 (() 0x1 << 13)

1496 
	#AT91C_US_RSTNACK
 (() 0x1 << 14)

1497 
	#AT91C_US_RETTO
 (() 0x1 << 15)

1498 
	#AT91C_US_DTREN
 (() 0x1 << 16)

1499 
	#AT91C_US_DTRDIS
 (() 0x1 << 17)

1500 
	#AT91C_US_RTSEN
 (() 0x1 << 18)

1501 
	#AT91C_US_RTSDIS
 (() 0x1 << 19)

1503 
	#AT91C_US_USMODE
 (() 0xF << 0)

1504 
	#AT91C_US_USMODE_NORMAL
 (() 0x0)

1505 
	#AT91C_US_USMODE_RS485
 (() 0x1)

1506 
	#AT91C_US_USMODE_HWHSH
 (() 0x2)

1507 
	#AT91C_US_USMODE_MODEM
 (() 0x3)

1508 
	#AT91C_US_USMODE_ISO7816_0
 (() 0x4)

1509 
	#AT91C_US_USMODE_ISO7816_1
 (() 0x6)

1510 
	#AT91C_US_USMODE_IRDA
 (() 0x8)

1511 
	#AT91C_US_USMODE_SWHSH
 (() 0xC)

1512 
	#AT91C_US_CLKS
 (() 0x3 << 4)

1513 
	#AT91C_US_CLKS_CLOCK
 (() 0x0 << 4)

1514 
	#AT91C_US_CLKS_FDIV1
 (() 0x1 << 4)

1515 
	#AT91C_US_CLKS_SLOW
 (() 0x2 << 4)

1516 
	#AT91C_US_CLKS_EXT
 (() 0x3 << 4)

1517 
	#AT91C_US_CHRL
 (() 0x3 << 6)

1518 
	#AT91C_US_CHRL_5_BITS
 (() 0x0 << 6)

1519 
	#AT91C_US_CHRL_6_BITS
 (() 0x1 << 6)

1520 
	#AT91C_US_CHRL_7_BITS
 (() 0x2 << 6)

1521 
	#AT91C_US_CHRL_8_BITS
 (() 0x3 << 6)

1522 
	#AT91C_US_SYNC
 (() 0x1 << 8)

1523 
	#AT91C_US_NBSTOP
 (() 0x3 << 12)

1524 
	#AT91C_US_NBSTOP_1_BIT
 (() 0x0 << 12)

1525 
	#AT91C_US_NBSTOP_15_BIT
 (() 0x1 << 12)

1526 
	#AT91C_US_NBSTOP_2_BIT
 (() 0x2 << 12)

1527 
	#AT91C_US_MSBF
 (() 0x1 << 16)

1528 
	#AT91C_US_MODE9
 (() 0x1 << 17)

1529 
	#AT91C_US_CKLO
 (() 0x1 << 18)

1530 
	#AT91C_US_OVER
 (() 0x1 << 19)

1531 
	#AT91C_US_INACK
 (() 0x1 << 20)

1532 
	#AT91C_US_DSNACK
 (() 0x1 << 21)

1533 
	#AT91C_US_MAX_ITER
 (() 0x1 << 24)

1534 
	#AT91C_US_FILTER
 (() 0x1 << 28)

1536 
	#AT91C_US_RXBRK
 (() 0x1 << 2)

1537 
	#AT91C_US_TIMEOUT
 (() 0x1 << 8)

1538 
	#AT91C_US_ITERATION
 (() 0x1 << 10)

1539 
	#AT91C_US_NACK
 (() 0x1 << 13)

1540 
	#AT91C_US_RIIC
 (() 0x1 << 16)

1541 
	#AT91C_US_DSRIC
 (() 0x1 << 17)

1542 
	#AT91C_US_DCDIC
 (() 0x1 << 18)

1543 
	#AT91C_US_CTSIC
 (() 0x1 << 19)

1547 
	#AT91C_US_RI
 (() 0x1 << 20)

1548 
	#AT91C_US_DSR
 (() 0x1 << 21)

1549 
	#AT91C_US_DCD
 (() 0x1 << 22)

1550 
	#AT91C_US_CTS
 (() 0x1 << 23)

1551 

	)

1555 
	s_AT91S_SSC
 {

1556 
AT91_REG
 
	mSSC_CR
;

1557 
AT91_REG
 
	mSSC_CMR
;

1558 
AT91_REG
 
	mRe£rved0
[2];

1559 
AT91_REG
 
	mSSC_RCMR
;

1560 
AT91_REG
 
	mSSC_RFMR
;

1561 
AT91_REG
 
	mSSC_TCMR
;

1562 
AT91_REG
 
	mSSC_TFMR
;

1563 
AT91_REG
 
	mSSC_RHR
;

1564 
AT91_REG
 
	mSSC_THR
;

1565 
AT91_REG
 
	mRe£rved1
[2];

1566 
AT91_REG
 
	mSSC_RSHR
;

1567 
AT91_REG
 
	mSSC_TSHR
;

1568 
AT91_REG
 
	mRe£rved2
[2];

1569 
AT91_REG
 
	mSSC_SR
;

1570 
AT91_REG
 
	mSSC_IER
;

1571 
AT91_REG
 
	mSSC_IDR
;

1572 
AT91_REG
 
	mSSC_IMR
;

1573 
AT91_REG
 
	mRe£rved3
[44];

1574 
AT91_REG
 
	mSSC_RPR
;

1575 
AT91_REG
 
	mSSC_RCR
;

1576 
AT91_REG
 
	mSSC_TPR
;

1577 
AT91_REG
 
	mSSC_TCR
;

1578 
AT91_REG
 
	mSSC_RNPR
;

1579 
AT91_REG
 
	mSSC_RNCR
;

1580 
AT91_REG
 
	mSSC_TNPR
;

1581 
AT91_REG
 
	mSSC_TNCR
;

1582 
AT91_REG
 
	mSSC_PTCR
;

1583 
AT91_REG
 
	mSSC_PTSR
;

1584 } 
	tAT91S_SSC
, *
	tAT91PS_SSC
;

1587 
	#AT91C_SSC_RXEN
 (() 0x1 << 0)

1588 
	#AT91C_SSC_RXDIS
 (() 0x1 << 1)

1589 
	#AT91C_SSC_TXEN
 (() 0x1 << 8)

1590 
	#AT91C_SSC_TXDIS
 (() 0x1 << 9)

1591 
	#AT91C_SSC_SWRST
 (() 0x1 << 15)

1593 
	#AT91C_SSC_CKS
 (() 0x3 << 0)

1594 
	#AT91C_SSC_CKS_DIV
 (() 0x0)

1595 
	#AT91C_SSC_CKS_TK
 (() 0x1)

1596 
	#AT91C_SSC_CKS_RK
 (() 0x2)

1597 
	#AT91C_SSC_CKO
 (() 0x7 << 2)

1598 
	#AT91C_SSC_CKO_NONE
 (() 0x0 << 2)

1599 
	#AT91C_SSC_CKO_CONTINOUS
 (() 0x1 << 2)

1600 
	#AT91C_SSC_CKO_DATA_TX
 (() 0x2 << 2)

1601 
	#AT91C_SSC_CKI
 (() 0x1 << 5)

1602 
	#AT91C_SSC_CKG
 (() 0x3 << 6)

1603 
	#AT91C_SSC_CKG_NONE
 (() 0x0 << 6)

1604 
	#AT91C_SSC_CKG_LOW
 (() 0x1 << 6)

1605 
	#AT91C_SSC_CKG_HIGH
 (() 0x2 << 6)

1606 
	#AT91C_SSC_START
 (() 0xF << 8)

1607 
	#AT91C_SSC_START_CONTINOUS
 (() 0x0 << 8)

1608 
	#AT91C_SSC_START_TX
 (() 0x1 << 8)

1609 
	#AT91C_SSC_START_LOW_RF
 (() 0x2 << 8)

1610 
	#AT91C_SSC_START_HIGH_RF
 (() 0x3 << 8)

1611 
	#AT91C_SSC_START_FALL_RF
 (() 0x4 << 8)

1612 
	#AT91C_SSC_START_RISE_RF
 (() 0x5 << 8)

1613 
	#AT91C_SSC_START_LEVEL_RF
 (() 0x6 << 8)

1614 
	#AT91C_SSC_START_EDGE_RF
 (() 0x7 << 8)

1615 
	#AT91C_SSC_START_0
 (() 0x8 << 8)

1616 
	#AT91C_SSC_STOP
 (() 0x1 << 12)

1617 
	#AT91C_SSC_STTDLY
 (() 0xFF << 16)

1618 
	#AT91C_SSC_PERIOD
 (() 0xFF << 24)

1620 
	#AT91C_SSC_DATLEN
 (() 0x1F << 0)

1621 
	#AT91C_SSC_LOOP
 (() 0x1 << 5)

1622 
	#AT91C_SSC_MSBF
 (() 0x1 << 7)

1623 
	#AT91C_SSC_DATNB
 (() 0xF << 8)

1624 
	#AT91C_SSC_FSLEN
 (() 0xF << 16)

1625 
	#AT91C_SSC_FSOS
 (() 0x7 << 20)

1626 
	#AT91C_SSC_FSOS_NONE
 (() 0x0 << 20)

1627 
	#AT91C_SSC_FSOS_NEGATIVE
 (() 0x1 << 20)

1628 
	#AT91C_SSC_FSOS_POSITIVE
 (() 0x2 << 20)

1629 
	#AT91C_SSC_FSOS_LOW
 (() 0x3 << 20)

1630 
	#AT91C_SSC_FSOS_HIGH
 (() 0x4 << 20)

1631 
	#AT91C_SSC_FSOS_TOGGLE
 (() 0x5 << 20)

1632 
	#AT91C_SSC_FSEDGE
 (() 0x1 << 24)

1635 
	#AT91C_SSC_DATDEF
 (() 0x1 << 5)

1636 
	#AT91C_SSC_FSDEN
 (() 0x1 << 23)

1638 
	#AT91C_SSC_TXRDY
 (() 0x1 << 0)

1639 
	#AT91C_SSC_TXEMPTY
 (() 0x1 << 1)

1640 
	#AT91C_SSC_ENDTX
 (() 0x1 << 2)

1641 
	#AT91C_SSC_TXBUFE
 (() 0x1 << 3)

1642 
	#AT91C_SSC_RXRDY
 (() 0x1 << 4)

1643 
	#AT91C_SSC_OVRUN
 (() 0x1 << 5)

1644 
	#AT91C_SSC_ENDRX
 (() 0x1 << 6)

1645 
	#AT91C_SSC_RXBUFF
 (() 0x1 << 7)

1646 
	#AT91C_SSC_CP0
 (() 0x1 << 8)

1647 
	#AT91C_SSC_CP1
 (() 0x1 << 9)

1648 
	#AT91C_SSC_TXSYN
 (() 0x1 << 10)

1649 
	#AT91C_SSC_RXSYN
 (() 0x1 << 11)

1650 
	#AT91C_SSC_TXENA
 (() 0x1 << 16)

1651 
	#AT91C_SSC_RXENA
 (() 0x1 << 17)

1655 

	)

1659 
	s_AT91S_SPI
 {

1660 
AT91_REG
 
	mSPI_CR
;

1661 
AT91_REG
 
	mSPI_MR
;

1662 
AT91_REG
 
	mSPI_RDR
;

1663 
AT91_REG
 
	mSPI_TDR
;

1664 
AT91_REG
 
	mSPI_SR
;

1665 
AT91_REG
 
	mSPI_IER
;

1666 
AT91_REG
 
	mSPI_IDR
;

1667 
AT91_REG
 
	mSPI_IMR
;

1668 
AT91_REG
 
	mRe£rved0
[4];

1669 
AT91_REG
 
	mSPI_CSR
[4];

1670 
AT91_REG
 
	mRe£rved1
[48];

1671 
AT91_REG
 
	mSPI_RPR
;

1672 
AT91_REG
 
	mSPI_RCR
;

1673 
AT91_REG
 
	mSPI_TPR
;

1674 
AT91_REG
 
	mSPI_TCR
;

1675 
AT91_REG
 
	mSPI_RNPR
;

1676 
AT91_REG
 
	mSPI_RNCR
;

1677 
AT91_REG
 
	mSPI_TNPR
;

1678 
AT91_REG
 
	mSPI_TNCR
;

1679 
AT91_REG
 
	mSPI_PTCR
;

1680 
AT91_REG
 
	mSPI_PTSR
;

1681 } 
	tAT91S_SPI
, *
	tAT91PS_SPI
;

1684 
	#AT91C_SPI_SPIEN
 (() 0x1 << 0)

1685 
	#AT91C_SPI_SPIDIS
 (() 0x1 << 1)

1686 
	#AT91C_SPI_SWRST
 (() 0x1 << 7)

1687 
	#AT91C_SPI_LASTXFER
 (() 0x1 << 24)

1689 
	#AT91C_SPI_MSTR
 (() 0x1 << 0)

1690 
	#AT91C_SPI_PS
 (() 0x1 << 1)

1691 
	#AT91C_SPI_PS_FIXED
 (() 0x0 << 1)

1692 
	#AT91C_SPI_PS_VARIABLE
 (() 0x1 << 1)

1693 
	#AT91C_SPI_PCSDEC
 (() 0x1 << 2)

1694 
	#AT91C_SPI_FDIV
 (() 0x1 << 3)

1695 
	#AT91C_SPI_MODFDIS
 (() 0x1 << 4)

1696 
	#AT91C_SPI_LLB
 (() 0x1 << 7)

1697 
	#AT91C_SPI_PCS
 (() 0xF << 16)

1698 
	#AT91C_SPI_DLYBCS
 (() 0xFF << 24)

1700 
	#AT91C_SPI_RD
 (() 0xFFFF << 0)

1701 
	#AT91C_SPI_RPCS
 (() 0xF << 16)

1703 
	#AT91C_SPI_TD
 (() 0xFFFF << 0)

1704 
	#AT91C_SPI_TPCS
 (() 0xF << 16)

1706 
	#AT91C_SPI_RDRF
 (() 0x1 << 0)

1707 
	#AT91C_SPI_TDRE
 (() 0x1 << 1)

1708 
	#AT91C_SPI_MODF
 (() 0x1 << 2)

1709 
	#AT91C_SPI_OVRES
 (() 0x1 << 3)

1710 
	#AT91C_SPI_ENDRX
 (() 0x1 << 4)

1711 
	#AT91C_SPI_ENDTX
 (() 0x1 << 5)

1712 
	#AT91C_SPI_RXBUFF
 (() 0x1 << 6)

1713 
	#AT91C_SPI_TXBUFE
 (() 0x1 << 7)

1714 
	#AT91C_SPI_NSSR
 (() 0x1 << 8)

1715 
	#AT91C_SPI_TXEMPTY
 (() 0x1 << 9)

1716 
	#AT91C_SPI_SPIENS
 (() 0x1 << 16)

1721 
	#AT91C_SPI_CPOL
 (() 0x1 << 0)

1722 
	#AT91C_SPI_NCPHA
 (() 0x1 << 1)

1723 
	#AT91C_SPI_CSAAT
 (() 0x1 << 3)

1724 
	#AT91C_SPI_BITS
 (() 0xF << 4)

1725 
	#AT91C_SPI_BITS_8
 (() 0x0 << 4)

1726 
	#AT91C_SPI_BITS_9
 (() 0x1 << 4)

1727 
	#AT91C_SPI_BITS_10
 (() 0x2 << 4)

1728 
	#AT91C_SPI_BITS_11
 (() 0x3 << 4)

1729 
	#AT91C_SPI_BITS_12
 (() 0x4 << 4)

1730 
	#AT91C_SPI_BITS_13
 (() 0x5 << 4)

1731 
	#AT91C_SPI_BITS_14
 (() 0x6 << 4)

1732 
	#AT91C_SPI_BITS_15
 (() 0x7 << 4)

1733 
	#AT91C_SPI_BITS_16
 (() 0x8 << 4)

1734 
	#AT91C_SPI_SCBR
 (() 0xFF << 8)

1735 
	#AT91C_SPI_DLYBS
 (() 0xFF << 16)

1736 
	#AT91C_SPI_DLYBCT
 (() 0xFF << 24)

1737 

	)

1741 
	s_AT91S_UHP
 {

1742 
AT91_REG
 
	mUHP_HcRevisi⁄
;

1743 
AT91_REG
 
	mUHP_HcC⁄åﬁ
;

1744 
AT91_REG
 
	mUHP_HcComm™dSètus
;

1745 
AT91_REG
 
	mUHP_HcI¡îru±Sètus
;

1746 
AT91_REG
 
	mUHP_HcI¡îru±E«bÀ
;

1747 
AT91_REG
 
	mUHP_HcI¡îru±DißbÀ
;

1748 
AT91_REG
 
	mUHP_HcHCCA
;

1749 
AT91_REG
 
	mUHP_HcPîiodCuºítED
;

1750 
AT91_REG
 
	mUHP_HcC⁄åﬁHódED
;

1751 
AT91_REG
 
	mUHP_HcC⁄åﬁCuºítED
;

1752 
AT91_REG
 
	mUHP_HcBulkHódED
;

1753 
AT91_REG
 
	mUHP_HcBulkCuºítED
;

1754 
AT91_REG
 
	mUHP_HcBulkD⁄eHód
;

1755 
AT91_REG
 
	mUHP_HcFmI¡îvÆ
;

1756 
AT91_REG
 
	mUHP_HcFmRemaöög
;

1757 
AT91_REG
 
	mUHP_HcFmNumbî
;

1758 
AT91_REG
 
	mUHP_HcPîiodicSèπ
;

1759 
AT91_REG
 
	mUHP_HcLSThªshﬁd
;

1760 
AT91_REG
 
	mUHP_HcRhDes¸ùt‹A
;

1761 
AT91_REG
 
	mUHP_HcRhDes¸ùt‹B
;

1762 
AT91_REG
 
	mUHP_HcRhSètus
;

1763 
AT91_REG
 
	mUHP_HcRhP‹tSètus
[2];

1764 } 
	tAT91S_UHP
, *
	tAT91PS_UHP
;

1770 
	s_AT91S_LCDC
 {

1771 
AT91_REG
 
	mLCDC_BA1
;

1772 
AT91_REG
 
	mLCDC_BA2
;

1773 
AT91_REG
 
	mLCDC_FRMP1
;

1774 
AT91_REG
 
	mLCDC_FRMP2
;

1775 
AT91_REG
 
	mLCDC_FRMA1
;

1776 
AT91_REG
 
	mLCDC_FRMA2
;

1777 
AT91_REG
 
	mLCDC_FRMCFG
;

1778 
AT91_REG
 
	mLCDC_DMACON
;

1779 
AT91_REG
 
	mLCDC_DMA2DCFG
;

1780 
AT91_REG
 
	mRe£rved0
[503];

1781 
AT91_REG
 
	mLCDC_LCDCON1
;

1782 
AT91_REG
 
	mLCDC_LCDCON2
;

1783 
AT91_REG
 
	mLCDC_TIM1
;

1784 
AT91_REG
 
	mLCDC_TIM2
;

1785 
AT91_REG
 
	mLCDC_LCDFRCFG
;

1786 
AT91_REG
 
	mLCDC_FIFO
;

1787 
AT91_REG
 
	mLCDC_MVAL
;

1788 
AT91_REG
 
	mLCDC_DP1_2
;

1789 
AT91_REG
 
	mLCDC_DP4_7
;

1790 
AT91_REG
 
	mLCDC_DP3_5
;

1791 
AT91_REG
 
	mLCDC_DP2_3
;

1792 
AT91_REG
 
	mLCDC_DP5_7
;

1793 
AT91_REG
 
	mLCDC_DP3_4
;

1794 
AT91_REG
 
	mLCDC_DP4_5
;

1795 
AT91_REG
 
	mLCDC_DP6_7
;

1796 
AT91_REG
 
	mLCDC_PWRCON
;

1797 
AT91_REG
 
	mLCDC_CTRSTCON
;

1798 
AT91_REG
 
	mLCDC_CTRSTVAL
;

1799 
AT91_REG
 
	mLCDC_IER
;

1800 
AT91_REG
 
	mLCDC_IDR
;

1801 
AT91_REG
 
	mLCDC_IMR
;

1802 
AT91_REG
 
	mLCDC_ISR
;

1803 
AT91_REG
 
	mLCDC_ICR
;

1804 
AT91_REG
 
	mLCDC_GPR
;

1805 
AT91_REG
 
	mLCDC_ITR
;

1806 
AT91_REG
 
	mLCDC_IRR
;

1807 
AT91_REG
 
	mRe£rved1
[230];

1808 
AT91_REG
 
	mLCDC_LUT_ENTRY
[256];

1809 } 
	tAT91S_LCDC
, *
	tAT91PS_LCDC
;

1812 
	#AT91C_LCDC_FRMPT1
 (() 0x3FFFFF << 0)

1814 
	#AT91C_LCDC_FRMPT2
 (() 0x1FFFFF << 0)

1816 
	#AT91C_LCDC_FRSIZE
 (() 0x3FFFFF << 0)

1817 
	#AT91C_LCDC_BLENGTH
 (() 0xF << 24)

1819 
	#AT91C_LCDC_DMAEN
 (() 0x1 << 0)

1820 
	#AT91C_LCDC_DMARST
 (() 0x1 << 1)

1821 
	#AT91C_LCDC_DMABUSY
 (() 0x1 << 2)

1822 
	#AT91C_LCDC_DMAUPDT
 (() 0x1 << 3)

1823 
	#AT91C_LCDC_DMA2DEN
 (() 0x1 << 4)

1825 
	#AT91C_LCDC_ADDRINC
 (() 0xFFFF << 0)

1826 
	#AT91C_LCDC_PIXELOFF
 (() 0x1F << 24)

1828 
	#AT91C_LCDC_BYPASS
 (() 0x1 << 0)

1829 
	#AT91C_LCDC_CLKVAL
 (() 0x1FF << 12)

1830 
	#AT91C_LCDC_LINCNT
 (() 0x7FF << 21)

1832 
	#AT91C_LCDC_DISTYPE
 (() 0x3 << 0)

1833 
	#AT91C_LCDC_DISTYPE_STNMONO
 (() 0x0)

1834 
	#AT91C_LCDC_DISTYPE_STNCOLOR
 (() 0x1)

1835 
	#AT91C_LCDC_DISTYPE_TFT
 (() 0x2)

1836 
	#AT91C_LCDC_SCANMOD
 (() 0x1 << 2)

1837 
	#AT91C_LCDC_SCANMOD_SINGLESCAN
 (() 0x0 << 2)

1838 
	#AT91C_LCDC_SCANMOD_DUALSCAN
 (() 0x1 << 2)

1839 
	#AT91C_LCDC_IFWIDTH
 (() 0x3 << 3)

1840 
	#AT91C_LCDC_IFWIDTH_FOURBITSWIDTH
 (() 0x0 << 3)

1841 
	#AT91C_LCDC_IFWIDTH_EIGTHBITSWIDTH
 (() 0x1 << 3)

1842 
	#AT91C_LCDC_IFWIDTH_SIXTEENBITSWIDTH
 (() 0x2 << 3)

1843 
	#AT91C_LCDC_PIXELSIZE
 (() 0x7 << 5)

1844 
	#AT91C_LCDC_PIXELSIZE_ONEBITSPERPIXEL
 (() 0x0 << 5)

1845 
	#AT91C_LCDC_PIXELSIZE_TWOBITSPERPIXEL
 (() 0x1 << 5)

1846 
	#AT91C_LCDC_PIXELSIZE_FOURBITSPERPIXEL
 (() 0x2 << 5)

1847 
	#AT91C_LCDC_PIXELSIZE_EIGTHBITSPERPIXEL
 (() 0x3 << 5)

1848 
	#AT91C_LCDC_PIXELSIZE_SIXTEENBITSPERPIXEL
 (() 0x4 << 5)

1849 
	#AT91C_LCDC_PIXELSIZE_TWENTYFOURBITSPERPIXEL
 (() 0x5 << 5)

1850 
	#AT91C_LCDC_INVVD
 (() 0x1 << 8)

1851 
	#AT91C_LCDC_INVVD_NORMALPOL
 (() 0x0 << 8)

1852 
	#AT91C_LCDC_INVVD_INVERTEDPOL
 (() 0x1 << 8)

1853 
	#AT91C_LCDC_INVFRAME
 (() 0x1 << 9)

1854 
	#AT91C_LCDC_INVFRAME_NORMALPOL
 (() 0x0 << 9)

1855 
	#AT91C_LCDC_INVFRAME_INVERTEDPOL
 (() 0x1 << 9)

1856 
	#AT91C_LCDC_INVLINE
 (() 0x1 << 10)

1857 
	#AT91C_LCDC_INVLINE_NORMALPOL
 (() 0x0 << 10)

1858 
	#AT91C_LCDC_INVLINE_INVERTEDPOL
 (() 0x1 << 10)

1859 
	#AT91C_LCDC_INVCLK
 (() 0x1 << 11)

1860 
	#AT91C_LCDC_INVCLK_NORMALPOL
 (() 0x0 << 11)

1861 
	#AT91C_LCDC_INVCLK_INVERTEDPOL
 (() 0x1 << 11)

1862 
	#AT91C_LCDC_INVDVAL
 (() 0x1 << 12)

1863 
	#AT91C_LCDC_INVDVAL_NORMALPOL
 (() 0x0 << 12)

1864 
	#AT91C_LCDC_INVDVAL_INVERTEDPOL
 (() 0x1 << 12)

1865 
	#AT91C_LCDC_CLKMOD
 (() 0x1 << 15)

1866 
	#AT91C_LCDC_CLKMOD_ACTIVEONLYDISP
 (() 0x0 << 15)

1867 
	#AT91C_LCDC_CLKMOD_ALWAYSACTIVE
 (() 0x1 << 15)

1868 
	#AT91C_LCDC_MEMOR
 (() 0x1 << 31)

1869 
	#AT91C_LCDC_MEMOR_BIGIND
 (() 0x0 << 31)

1870 
	#AT91C_LCDC_MEMOR_LITTLEIND
 (() 0x1 << 31)

1872 
	#AT91C_LCDC_VFP
 (() 0xFF << 0)

1873 
	#AT91C_LCDC_VBP
 (() 0xFF << 8)

1874 
	#AT91C_LCDC_VPW
 (() 0x3F << 16)

1875 
	#AT91C_LCDC_VHDLY
 (() 0xF << 24)

1877 
	#AT91C_LCDC_HBP
 (() 0xFF << 0)

1878 
	#AT91C_LCDC_HPW
 (() 0x3F << 8)

1879 
	#AT91C_LCDC_HFP
 (() 0x3FF << 22)

1881 
	#AT91C_LCDC_LINEVAL
 (() 0x7FF << 0)

1882 
	#AT91C_LCDC_HOZVAL
 (() 0x7FF << 21)

1884 
	#AT91C_LCDC_FIFOTH
 (() 0xFFFF << 0)

1886 
	#AT91C_LCDC_MVALUE
 (() 0xFF << 0)

1887 
	#AT91C_LCDC_MMODE
 (() 0x1 << 31)

1888 
	#AT91C_LCDC_MMODE_EACHFRAME
 (() 0x0 << 31)

1889 
	#AT91C_LCDC_MMODE_MVALDEFINED
 (() 0x1 << 31)

1891 
	#AT91C_LCDC_DP1_2_FIELD
 (() 0xFF << 0)

1893 
	#AT91C_LCDC_DP4_7_FIELD
 (() 0xFFFFFFF << 0)

1895 
	#AT91C_LCDC_DP3_5_FIELD
 (() 0xFFFFF << 0)

1897 
	#AT91C_LCDC_DP2_3_FIELD
 (() 0xFFF << 0)

1899 
	#AT91C_LCDC_DP5_7_FIELD
 (() 0xFFFFFFF << 0)

1901 
	#AT91C_LCDC_DP3_4_FIELD
 (() 0xFFFF << 0)

1903 
	#AT91C_LCDC_DP4_5_FIELD
 (() 0xFFFFF << 0)

1905 
	#AT91C_LCDC_DP6_7_FIELD
 (() 0xFFFFFFF << 0)

1907 
	#AT91C_LCDC_PWR
 (() 0x1 << 0)

1908 
	#AT91C_LCDC_GUARDT
 (() 0x7F << 1)

1909 
	#AT91C_LCDC_BUSY
 (() 0x1 << 31)

1910 
	#AT91C_LCDC_BUSY_LCDNOTBUSY
 (() 0x0 << 31)

1911 
	#AT91C_LCDC_BUSY_LCDBUSY
 (() 0x1 << 31)

1913 
	#AT91C_LCDC_PS
 (() 0x3 << 0)

1914 
	#AT91C_LCDC_PS_NOTDIVIDED
 (() 0x0)

1915 
	#AT91C_LCDC_PS_DIVIDEDBYTWO
 (() 0x1)

1916 
	#AT91C_LCDC_PS_DIVIDEDBYFOUR
 (() 0x2)

1917 
	#AT91C_LCDC_PS_DIVIDEDBYEIGHT
 (() 0x3)

1918 
	#AT91C_LCDC_POL
 (() 0x1 << 2)

1919 
	#AT91C_LCDC_POL_NEGATIVEPULSE
 (() 0x0 << 2)

1920 
	#AT91C_LCDC_POL_POSITIVEPULSE
 (() 0x1 << 2)

1921 
	#AT91C_LCDC_ENA
 (() 0x1 << 3)

1922 
	#AT91C_LCDC_ENA_PWMGEMDISABLED
 (() 0x0 << 3)

1923 
	#AT91C_LCDC_ENA_PWMGEMENABLED
 (() 0x1 << 3)

1925 
	#AT91C_LCDC_CVAL
 (() 0xFF << 0)

1927 
	#AT91C_LCDC_LNI
 (() 0x1 << 0)

1928 
	#AT91C_LCDC_LSTLNI
 (() 0x1 << 1)

1929 
	#AT91C_LCDC_EOFI
 (() 0x1 << 2)

1930 
	#AT91C_LCDC_UFLWI
 (() 0x1 << 4)

1931 
	#AT91C_LCDC_OWRI
 (() 0x1 << 5)

1932 
	#AT91C_LCDC_MERI
 (() 0x1 << 6)

1938 
	#AT91C_LCDC_GPRBUS
 (() 0xFF << 0)

1941 

	)

1946 
	#AT91C_SYS_GPBR1
 ((
AT91_REG
 *) 0xFFFFFD54)

1947 
	#AT91C_SYS_GPBR3
 ((
AT91_REG
 *) 0xFFFFFD5C)

1948 
	#AT91C_SYS_GPBR2
 ((
AT91_REG
 *) 0xFFFFFD58)

1949 
	#AT91C_SYS_GPBR0
 ((
AT91_REG
 *) 0xFFFFFD50)

1951 
	#AT91C_SDRAMC_MR
 ((
AT91_REG
 *) 0xFFFFEA00)

1952 
	#AT91C_SDRAMC_IMR
 ((
AT91_REG
 *) 0xFFFFEA1C)

1953 
	#AT91C_SDRAMC_LPR
 ((
AT91_REG
 *) 0xFFFFEA10)

1954 
	#AT91C_SDRAMC_ISR
 ((
AT91_REG
 *) 0xFFFFEA20)

1955 
	#AT91C_SDRAMC_IDR
 ((
AT91_REG
 *) 0xFFFFEA18)

1956 
	#AT91C_SDRAMC_CR
 ((
AT91_REG
 *) 0xFFFFEA08)

1957 
	#AT91C_SDRAMC_TR
 ((
AT91_REG
 *) 0xFFFFEA04)

1958 
	#AT91C_SDRAMC_MDR
 ((
AT91_REG
 *) 0xFFFFEA24)

1959 
	#AT91C_SDRAMC_HSR
 ((
AT91_REG
 *) 0xFFFFEA0C)

1960 
	#AT91C_SDRAMC_IER
 ((
AT91_REG
 *) 0xFFFFEA14)

1962 
	#AT91C_SMC_CTRL1
 ((
AT91_REG
 *) 0xFFFFEC1C)

1963 
	#AT91C_SMC_PULSE7
 ((
AT91_REG
 *) 0xFFFFEC74)

1964 
	#AT91C_SMC_PULSE6
 ((
AT91_REG
 *) 0xFFFFEC64)

1965 
	#AT91C_SMC_SETUP4
 ((
AT91_REG
 *) 0xFFFFEC40)

1966 
	#AT91C_SMC_PULSE3
 ((
AT91_REG
 *) 0xFFFFEC34)

1967 
	#AT91C_SMC_CYCLE5
 ((
AT91_REG
 *) 0xFFFFEC58)

1968 
	#AT91C_SMC_CYCLE2
 ((
AT91_REG
 *) 0xFFFFEC28)

1969 
	#AT91C_SMC_CTRL2
 ((
AT91_REG
 *) 0xFFFFEC2C)

1970 
	#AT91C_SMC_CTRL0
 ((
AT91_REG
 *) 0xFFFFEC0C)

1971 
	#AT91C_SMC_PULSE5
 ((
AT91_REG
 *) 0xFFFFEC54)

1972 
	#AT91C_SMC_PULSE1
 ((
AT91_REG
 *) 0xFFFFEC14)

1973 
	#AT91C_SMC_PULSE0
 ((
AT91_REG
 *) 0xFFFFEC04)

1974 
	#AT91C_SMC_CYCLE7
 ((
AT91_REG
 *) 0xFFFFEC78)

1975 
	#AT91C_SMC_CTRL4
 ((
AT91_REG
 *) 0xFFFFEC4C)

1976 
	#AT91C_SMC_CTRL3
 ((
AT91_REG
 *) 0xFFFFEC3C)

1977 
	#AT91C_SMC_SETUP7
 ((
AT91_REG
 *) 0xFFFFEC70)

1978 
	#AT91C_SMC_CTRL7
 ((
AT91_REG
 *) 0xFFFFEC7C)

1979 
	#AT91C_SMC_SETUP1
 ((
AT91_REG
 *) 0xFFFFEC10)

1980 
	#AT91C_SMC_CYCLE0
 ((
AT91_REG
 *) 0xFFFFEC08)

1981 
	#AT91C_SMC_CTRL5
 ((
AT91_REG
 *) 0xFFFFEC5C)

1982 
	#AT91C_SMC_CYCLE1
 ((
AT91_REG
 *) 0xFFFFEC18)

1983 
	#AT91C_SMC_CTRL6
 ((
AT91_REG
 *) 0xFFFFEC6C)

1984 
	#AT91C_SMC_SETUP0
 ((
AT91_REG
 *) 0xFFFFEC00)

1985 
	#AT91C_SMC_PULSE4
 ((
AT91_REG
 *) 0xFFFFEC44)

1986 
	#AT91C_SMC_SETUP5
 ((
AT91_REG
 *) 0xFFFFEC50)

1987 
	#AT91C_SMC_SETUP2
 ((
AT91_REG
 *) 0xFFFFEC20)

1988 
	#AT91C_SMC_CYCLE3
 ((
AT91_REG
 *) 0xFFFFEC38)

1989 
	#AT91C_SMC_CYCLE6
 ((
AT91_REG
 *) 0xFFFFEC68)

1990 
	#AT91C_SMC_SETUP6
 ((
AT91_REG
 *) 0xFFFFEC60)

1991 
	#AT91C_SMC_CYCLE4
 ((
AT91_REG
 *) 0xFFFFEC48)

1992 
	#AT91C_SMC_PULSE2
 ((
AT91_REG
 *) 0xFFFFEC24)

1993 
	#AT91C_SMC_SETUP3
 ((
AT91_REG
 *) 0xFFFFEC30)

1995 
	#AT91C_MATRIX_USBPCR
 ((
AT91_REG
 *) 0xFFFFEE34)

1996 
	#AT91C_MATRIX_MCFG
 ((
AT91_REG
 *) 0xFFFFEE00)

1997 
	#AT91C_MATRIX_EBICSA
 ((
AT91_REG
 *) 0xFFFFEE30)

1998 
	#AT91C_MATRIX_SCFG2
 ((
AT91_REG
 *) 0xFFFFEE0C)

1999 
	#AT91C_MATRIX_VERSION
 ((
AT91_REG
 *) 0xFFFFEE44)

2000 
	#AT91C_MATRIX_SCFG3
 ((
AT91_REG
 *) 0xFFFFEE10)

2001 
	#AT91C_MATRIX_TCMR
 ((
AT91_REG
 *) 0xFFFFEE24)

2002 
	#AT91C_MATRIX_SCFG1
 ((
AT91_REG
 *) 0xFFFFEE08)

2003 
	#AT91C_MATRIX_SCFG4
 ((
AT91_REG
 *) 0xFFFFEE14)

2004 
	#AT91C_MATRIX_SCFG0
 ((
AT91_REG
 *) 0xFFFFEE04)

2006 
	#AT91C_AIC_IVR
 ((
AT91_REG
 *) 0xFFFFF100)

2007 
	#AT91C_AIC_SMR
 ((
AT91_REG
 *) 0xFFFFF000)

2008 
	#AT91C_AIC_FVR
 ((
AT91_REG
 *) 0xFFFFF104)

2009 
	#AT91C_AIC_DCR
 ((
AT91_REG
 *) 0xFFFFF138)

2010 
	#AT91C_AIC_EOICR
 ((
AT91_REG
 *) 0xFFFFF130)

2011 
	#AT91C_AIC_SVR
 ((
AT91_REG
 *) 0xFFFFF080)

2012 
	#AT91C_AIC_FFSR
 ((
AT91_REG
 *) 0xFFFFF148)

2013 
	#AT91C_AIC_ICCR
 ((
AT91_REG
 *) 0xFFFFF128)

2014 
	#AT91C_AIC_ISR
 ((
AT91_REG
 *) 0xFFFFF108)

2015 
	#AT91C_AIC_IMR
 ((
AT91_REG
 *) 0xFFFFF110)

2016 
	#AT91C_AIC_IPR
 ((
AT91_REG
 *) 0xFFFFF10C)

2017 
	#AT91C_AIC_FFER
 ((
AT91_REG
 *) 0xFFFFF140)

2018 
	#AT91C_AIC_IECR
 ((
AT91_REG
 *) 0xFFFFF120)

2019 
	#AT91C_AIC_ISCR
 ((
AT91_REG
 *) 0xFFFFF12C)

2020 
	#AT91C_AIC_FFDR
 ((
AT91_REG
 *) 0xFFFFF144)

2021 
	#AT91C_AIC_CISR
 ((
AT91_REG
 *) 0xFFFFF114)

2022 
	#AT91C_AIC_IDCR
 ((
AT91_REG
 *) 0xFFFFF124)

2023 
	#AT91C_AIC_SPU
 ((
AT91_REG
 *) 0xFFFFF134)

2025 
	#AT91C_DBGU_TCR
 ((
AT91_REG
 *) 0xFFFFF30C)

2026 
	#AT91C_DBGU_RNPR
 ((
AT91_REG
 *) 0xFFFFF310)

2027 
	#AT91C_DBGU_TNPR
 ((
AT91_REG
 *) 0xFFFFF318)

2028 
	#AT91C_DBGU_TPR
 ((
AT91_REG
 *) 0xFFFFF308)

2029 
	#AT91C_DBGU_RPR
 ((
AT91_REG
 *) 0xFFFFF300)

2030 
	#AT91C_DBGU_RCR
 ((
AT91_REG
 *) 0xFFFFF304)

2031 
	#AT91C_DBGU_RNCR
 ((
AT91_REG
 *) 0xFFFFF314)

2032 
	#AT91C_DBGU_PTCR
 ((
AT91_REG
 *) 0xFFFFF320)

2033 
	#AT91C_DBGU_PTSR
 ((
AT91_REG
 *) 0xFFFFF324)

2034 
	#AT91C_DBGU_TNCR
 ((
AT91_REG
 *) 0xFFFFF31C)

2036 
	#AT91C_DBGU_EXID
 ((
AT91_REG
 *) 0xFFFFF244)

2037 
	#AT91C_DBGU_BRGR
 ((
AT91_REG
 *) 0xFFFFF220)

2038 
	#AT91C_DBGU_IDR
 ((
AT91_REG
 *) 0xFFFFF20C)

2039 
	#AT91C_DBGU_CSR
 ((
AT91_REG
 *) 0xFFFFF214)

2040 
	#AT91C_DBGU_CIDR
 ((
AT91_REG
 *) 0xFFFFF240)

2041 
	#AT91C_DBGU_MR
 ((
AT91_REG
 *) 0xFFFFF204)

2042 
	#AT91C_DBGU_IMR
 ((
AT91_REG
 *) 0xFFFFF210)

2043 
	#AT91C_DBGU_CR
 ((
AT91_REG
 *) 0xFFFFF200)

2044 
	#AT91C_DBGU_FNTR
 ((
AT91_REG
 *) 0xFFFFF248)

2045 
	#AT91C_DBGU_THR
 ((
AT91_REG
 *) 0xFFFFF21C)

2046 
	#AT91C_DBGU_RHR
 ((
AT91_REG
 *) 0xFFFFF218)

2047 
	#AT91C_DBGU_IER
 ((
AT91_REG
 *) 0xFFFFF208)

2049 
	#AT91C_PIOA_ODR
 ((
AT91_REG
 *) 0xFFFFF414)

2050 
	#AT91C_PIOA_SODR
 ((
AT91_REG
 *) 0xFFFFF430)

2051 
	#AT91C_PIOA_ISR
 ((
AT91_REG
 *) 0xFFFFF44C)

2052 
	#AT91C_PIOA_ABSR
 ((
AT91_REG
 *) 0xFFFFF478)

2053 
	#AT91C_PIOA_IER
 ((
AT91_REG
 *) 0xFFFFF440)

2054 
	#AT91C_PIOA_PPUDR
 ((
AT91_REG
 *) 0xFFFFF460)

2055 
	#AT91C_PIOA_IMR
 ((
AT91_REG
 *) 0xFFFFF448)

2056 
	#AT91C_PIOA_PER
 ((
AT91_REG
 *) 0xFFFFF400)

2057 
	#AT91C_PIOA_IFDR
 ((
AT91_REG
 *) 0xFFFFF424)

2058 
	#AT91C_PIOA_OWDR
 ((
AT91_REG
 *) 0xFFFFF4A4)

2059 
	#AT91C_PIOA_MDSR
 ((
AT91_REG
 *) 0xFFFFF458)

2060 
	#AT91C_PIOA_IDR
 ((
AT91_REG
 *) 0xFFFFF444)

2061 
	#AT91C_PIOA_ODSR
 ((
AT91_REG
 *) 0xFFFFF438)

2062 
	#AT91C_PIOA_PPUSR
 ((
AT91_REG
 *) 0xFFFFF468)

2063 
	#AT91C_PIOA_OWSR
 ((
AT91_REG
 *) 0xFFFFF4A8)

2064 
	#AT91C_PIOA_BSR
 ((
AT91_REG
 *) 0xFFFFF474)

2065 
	#AT91C_PIOA_OWER
 ((
AT91_REG
 *) 0xFFFFF4A0)

2066 
	#AT91C_PIOA_IFER
 ((
AT91_REG
 *) 0xFFFFF420)

2067 
	#AT91C_PIOA_PDSR
 ((
AT91_REG
 *) 0xFFFFF43C)

2068 
	#AT91C_PIOA_PPUER
 ((
AT91_REG
 *) 0xFFFFF464)

2069 
	#AT91C_PIOA_OSR
 ((
AT91_REG
 *) 0xFFFFF418)

2070 
	#AT91C_PIOA_ASR
 ((
AT91_REG
 *) 0xFFFFF470)

2071 
	#AT91C_PIOA_MDDR
 ((
AT91_REG
 *) 0xFFFFF454)

2072 
	#AT91C_PIOA_CODR
 ((
AT91_REG
 *) 0xFFFFF434)

2073 
	#AT91C_PIOA_MDER
 ((
AT91_REG
 *) 0xFFFFF450)

2074 
	#AT91C_PIOA_PDR
 ((
AT91_REG
 *) 0xFFFFF404)

2075 
	#AT91C_PIOA_IFSR
 ((
AT91_REG
 *) 0xFFFFF428)

2076 
	#AT91C_PIOA_OER
 ((
AT91_REG
 *) 0xFFFFF410)

2077 
	#AT91C_PIOA_PSR
 ((
AT91_REG
 *) 0xFFFFF408)

2079 
	#AT91C_PIOB_OWDR
 ((
AT91_REG
 *) 0xFFFFF6A4)

2080 
	#AT91C_PIOB_MDER
 ((
AT91_REG
 *) 0xFFFFF650)

2081 
	#AT91C_PIOB_PPUSR
 ((
AT91_REG
 *) 0xFFFFF668)

2082 
	#AT91C_PIOB_IMR
 ((
AT91_REG
 *) 0xFFFFF648)

2083 
	#AT91C_PIOB_ASR
 ((
AT91_REG
 *) 0xFFFFF670)

2084 
	#AT91C_PIOB_PPUDR
 ((
AT91_REG
 *) 0xFFFFF660)

2085 
	#AT91C_PIOB_PSR
 ((
AT91_REG
 *) 0xFFFFF608)

2086 
	#AT91C_PIOB_IER
 ((
AT91_REG
 *) 0xFFFFF640)

2087 
	#AT91C_PIOB_CODR
 ((
AT91_REG
 *) 0xFFFFF634)

2088 
	#AT91C_PIOB_OWER
 ((
AT91_REG
 *) 0xFFFFF6A0)

2089 
	#AT91C_PIOB_ABSR
 ((
AT91_REG
 *) 0xFFFFF678)

2090 
	#AT91C_PIOB_IFDR
 ((
AT91_REG
 *) 0xFFFFF624)

2091 
	#AT91C_PIOB_PDSR
 ((
AT91_REG
 *) 0xFFFFF63C)

2092 
	#AT91C_PIOB_IDR
 ((
AT91_REG
 *) 0xFFFFF644)

2093 
	#AT91C_PIOB_OWSR
 ((
AT91_REG
 *) 0xFFFFF6A8)

2094 
	#AT91C_PIOB_PDR
 ((
AT91_REG
 *) 0xFFFFF604)

2095 
	#AT91C_PIOB_ODR
 ((
AT91_REG
 *) 0xFFFFF614)

2096 
	#AT91C_PIOB_IFSR
 ((
AT91_REG
 *) 0xFFFFF628)

2097 
	#AT91C_PIOB_PPUER
 ((
AT91_REG
 *) 0xFFFFF664)

2098 
	#AT91C_PIOB_SODR
 ((
AT91_REG
 *) 0xFFFFF630)

2099 
	#AT91C_PIOB_ISR
 ((
AT91_REG
 *) 0xFFFFF64C)

2100 
	#AT91C_PIOB_ODSR
 ((
AT91_REG
 *) 0xFFFFF638)

2101 
	#AT91C_PIOB_OSR
 ((
AT91_REG
 *) 0xFFFFF618)

2102 
	#AT91C_PIOB_MDSR
 ((
AT91_REG
 *) 0xFFFFF658)

2103 
	#AT91C_PIOB_IFER
 ((
AT91_REG
 *) 0xFFFFF620)

2104 
	#AT91C_PIOB_BSR
 ((
AT91_REG
 *) 0xFFFFF674)

2105 
	#AT91C_PIOB_MDDR
 ((
AT91_REG
 *) 0xFFFFF654)

2106 
	#AT91C_PIOB_OER
 ((
AT91_REG
 *) 0xFFFFF610)

2107 
	#AT91C_PIOB_PER
 ((
AT91_REG
 *) 0xFFFFF600)

2109 
	#AT91C_PIOC_OWDR
 ((
AT91_REG
 *) 0xFFFFF8A4)

2110 
	#AT91C_PIOC_SODR
 ((
AT91_REG
 *) 0xFFFFF830)

2111 
	#AT91C_PIOC_PPUER
 ((
AT91_REG
 *) 0xFFFFF864)

2112 
	#AT91C_PIOC_CODR
 ((
AT91_REG
 *) 0xFFFFF834)

2113 
	#AT91C_PIOC_PSR
 ((
AT91_REG
 *) 0xFFFFF808)

2114 
	#AT91C_PIOC_PDR
 ((
AT91_REG
 *) 0xFFFFF804)

2115 
	#AT91C_PIOC_ODR
 ((
AT91_REG
 *) 0xFFFFF814)

2116 
	#AT91C_PIOC_PPUSR
 ((
AT91_REG
 *) 0xFFFFF868)

2117 
	#AT91C_PIOC_ABSR
 ((
AT91_REG
 *) 0xFFFFF878)

2118 
	#AT91C_PIOC_IFSR
 ((
AT91_REG
 *) 0xFFFFF828)

2119 
	#AT91C_PIOC_OER
 ((
AT91_REG
 *) 0xFFFFF810)

2120 
	#AT91C_PIOC_IMR
 ((
AT91_REG
 *) 0xFFFFF848)

2121 
	#AT91C_PIOC_ASR
 ((
AT91_REG
 *) 0xFFFFF870)

2122 
	#AT91C_PIOC_MDDR
 ((
AT91_REG
 *) 0xFFFFF854)

2123 
	#AT91C_PIOC_OWSR
 ((
AT91_REG
 *) 0xFFFFF8A8)

2124 
	#AT91C_PIOC_PER
 ((
AT91_REG
 *) 0xFFFFF800)

2125 
	#AT91C_PIOC_IDR
 ((
AT91_REG
 *) 0xFFFFF844)

2126 
	#AT91C_PIOC_MDER
 ((
AT91_REG
 *) 0xFFFFF850)

2127 
	#AT91C_PIOC_PDSR
 ((
AT91_REG
 *) 0xFFFFF83C)

2128 
	#AT91C_PIOC_MDSR
 ((
AT91_REG
 *) 0xFFFFF858)

2129 
	#AT91C_PIOC_OWER
 ((
AT91_REG
 *) 0xFFFFF8A0)

2130 
	#AT91C_PIOC_BSR
 ((
AT91_REG
 *) 0xFFFFF874)

2131 
	#AT91C_PIOC_PPUDR
 ((
AT91_REG
 *) 0xFFFFF860)

2132 
	#AT91C_PIOC_IFDR
 ((
AT91_REG
 *) 0xFFFFF824)

2133 
	#AT91C_PIOC_IER
 ((
AT91_REG
 *) 0xFFFFF840)

2134 
	#AT91C_PIOC_OSR
 ((
AT91_REG
 *) 0xFFFFF818)

2135 
	#AT91C_PIOC_ODSR
 ((
AT91_REG
 *) 0xFFFFF838)

2136 
	#AT91C_PIOC_ISR
 ((
AT91_REG
 *) 0xFFFFF84C)

2137 
	#AT91C_PIOC_IFER
 ((
AT91_REG
 *) 0xFFFFF820)

2139 
	#AT91C_CKGR_MOR
 ((
AT91_REG
 *) 0xFFFFFC20)

2140 
	#AT91C_CKGR_PLLBR
 ((
AT91_REG
 *) 0xFFFFFC2C)

2141 
	#AT91C_CKGR_MCFR
 ((
AT91_REG
 *) 0xFFFFFC24)

2142 
	#AT91C_CKGR_PLLAR
 ((
AT91_REG
 *) 0xFFFFFC28)

2144 
	#AT91C_PMC_PCER
 ((
AT91_REG
 *) 0xFFFFFC10)

2145 
	#AT91C_PMC_PCKR
 ((
AT91_REG
 *) 0xFFFFFC40)

2146 
	#AT91C_PMC_MCKR
 ((
AT91_REG
 *) 0xFFFFFC30)

2147 
	#AT91C_PMC_PLLAR
 ((
AT91_REG
 *) 0xFFFFFC28)

2148 
	#AT91C_PMC_PCDR
 ((
AT91_REG
 *) 0xFFFFFC14)

2149 
	#AT91C_PMC_SCSR
 ((
AT91_REG
 *) 0xFFFFFC08)

2150 
	#AT91C_PMC_MCFR
 ((
AT91_REG
 *) 0xFFFFFC24)

2151 
	#AT91C_PMC_IMR
 ((
AT91_REG
 *) 0xFFFFFC6C)

2152 
	#AT91C_PMC_IER
 ((
AT91_REG
 *) 0xFFFFFC60)

2153 
	#AT91C_PMC_MOR
 ((
AT91_REG
 *) 0xFFFFFC20)

2154 
	#AT91C_PMC_IDR
 ((
AT91_REG
 *) 0xFFFFFC64)

2155 
	#AT91C_PMC_PLLBR
 ((
AT91_REG
 *) 0xFFFFFC2C)

2156 
	#AT91C_PMC_SCDR
 ((
AT91_REG
 *) 0xFFFFFC04)

2157 
	#AT91C_PMC_PCSR
 ((
AT91_REG
 *) 0xFFFFFC18)

2158 
	#AT91C_PMC_SCER
 ((
AT91_REG
 *) 0xFFFFFC00)

2159 
	#AT91C_PMC_SR
 ((
AT91_REG
 *) 0xFFFFFC68)

2161 
	#AT91C_RSTC_RCR
 ((
AT91_REG
 *) 0xFFFFFD00)

2162 
	#AT91C_RSTC_RMR
 ((
AT91_REG
 *) 0xFFFFFD08)

2163 
	#AT91C_RSTC_RSR
 ((
AT91_REG
 *) 0xFFFFFD04)

2165 
	#AT91C_SHDWC_SHSR
 ((
AT91_REG
 *) 0xFFFFFD18)

2166 
	#AT91C_SHDWC_SHMR
 ((
AT91_REG
 *) 0xFFFFFD14)

2167 
	#AT91C_SHDWC_SHCR
 ((
AT91_REG
 *) 0xFFFFFD10)

2169 
	#AT91C_RTTC_RTSR
 ((
AT91_REG
 *) 0xFFFFFD2C)

2170 
	#AT91C_RTTC_RTMR
 ((
AT91_REG
 *) 0xFFFFFD20)

2171 
	#AT91C_RTTC_RTVR
 ((
AT91_REG
 *) 0xFFFFFD28)

2172 
	#AT91C_RTTC_RTAR
 ((
AT91_REG
 *) 0xFFFFFD24)

2174 
	#AT91C_PITC_PIVR
 ((
AT91_REG
 *) 0xFFFFFD38)

2175 
	#AT91C_PITC_PISR
 ((
AT91_REG
 *) 0xFFFFFD34)

2176 
	#AT91C_PITC_PIIR
 ((
AT91_REG
 *) 0xFFFFFD3C)

2177 
	#AT91C_PITC_PIMR
 ((
AT91_REG
 *) 0xFFFFFD30)

2179 
	#AT91C_WDTC_WDCR
 ((
AT91_REG
 *) 0xFFFFFD40)

2180 
	#AT91C_WDTC_WDSR
 ((
AT91_REG
 *) 0xFFFFFD48)

2181 
	#AT91C_WDTC_WDMR
 ((
AT91_REG
 *) 0xFFFFFD44)

2183 
	#AT91C_TC0_SR
 ((
AT91_REG
 *) 0xFFFA0020)

2184 
	#AT91C_TC0_RC
 ((
AT91_REG
 *) 0xFFFA001C)

2185 
	#AT91C_TC0_RB
 ((
AT91_REG
 *) 0xFFFA0018)

2186 
	#AT91C_TC0_CCR
 ((
AT91_REG
 *) 0xFFFA0000)

2187 
	#AT91C_TC0_CMR
 ((
AT91_REG
 *) 0xFFFA0004)

2188 
	#AT91C_TC0_IER
 ((
AT91_REG
 *) 0xFFFA0024)

2189 
	#AT91C_TC0_RA
 ((
AT91_REG
 *) 0xFFFA0014)

2190 
	#AT91C_TC0_IDR
 ((
AT91_REG
 *) 0xFFFA0028)

2191 
	#AT91C_TC0_CV
 ((
AT91_REG
 *) 0xFFFA0010)

2192 
	#AT91C_TC0_IMR
 ((
AT91_REG
 *) 0xFFFA002C)

2194 
	#AT91C_TC1_RB
 ((
AT91_REG
 *) 0xFFFA0058)

2195 
	#AT91C_TC1_CCR
 ((
AT91_REG
 *) 0xFFFA0040)

2196 
	#AT91C_TC1_IER
 ((
AT91_REG
 *) 0xFFFA0064)

2197 
	#AT91C_TC1_IDR
 ((
AT91_REG
 *) 0xFFFA0068)

2198 
	#AT91C_TC1_SR
 ((
AT91_REG
 *) 0xFFFA0060)

2199 
	#AT91C_TC1_CMR
 ((
AT91_REG
 *) 0xFFFA0044)

2200 
	#AT91C_TC1_RA
 ((
AT91_REG
 *) 0xFFFA0054)

2201 
	#AT91C_TC1_RC
 ((
AT91_REG
 *) 0xFFFA005C)

2202 
	#AT91C_TC1_IMR
 ((
AT91_REG
 *) 0xFFFA006C)

2203 
	#AT91C_TC1_CV
 ((
AT91_REG
 *) 0xFFFA0050)

2205 
	#AT91C_TC2_CMR
 ((
AT91_REG
 *) 0xFFFA0084)

2206 
	#AT91C_TC2_CCR
 ((
AT91_REG
 *) 0xFFFA0080)

2207 
	#AT91C_TC2_CV
 ((
AT91_REG
 *) 0xFFFA0090)

2208 
	#AT91C_TC2_RA
 ((
AT91_REG
 *) 0xFFFA0094)

2209 
	#AT91C_TC2_RB
 ((
AT91_REG
 *) 0xFFFA0098)

2210 
	#AT91C_TC2_IDR
 ((
AT91_REG
 *) 0xFFFA00A8)

2211 
	#AT91C_TC2_IMR
 ((
AT91_REG
 *) 0xFFFA00AC)

2212 
	#AT91C_TC2_RC
 ((
AT91_REG
 *) 0xFFFA009C)

2213 
	#AT91C_TC2_IER
 ((
AT91_REG
 *) 0xFFFA00A4)

2214 
	#AT91C_TC2_SR
 ((
AT91_REG
 *) 0xFFFA00A0)

2216 
	#AT91C_TCB0_BMR
 ((
AT91_REG
 *) 0xFFFA00C4)

2217 
	#AT91C_TCB0_BCR
 ((
AT91_REG
 *) 0xFFFA00C0)

2219 
	#AT91C_UDP_GLBSTATE
 ((
AT91_REG
 *) 0xFFFA4004)

2220 
	#AT91C_UDP_FDR
 ((
AT91_REG
 *) 0xFFFA4050)

2221 
	#AT91C_UDP_RSTEP
 ((
AT91_REG
 *) 0xFFFA4028)

2222 
	#AT91C_UDP_FADDR
 ((
AT91_REG
 *) 0xFFFA4008)

2223 
	#AT91C_UDP_NUM
 ((
AT91_REG
 *) 0xFFFA4000)

2224 
	#AT91C_UDP_IDR
 ((
AT91_REG
 *) 0xFFFA4014)

2225 
	#AT91C_UDP_IMR
 ((
AT91_REG
 *) 0xFFFA4018)

2226 
	#AT91C_UDP_CSR
 ((
AT91_REG
 *) 0xFFFA4030)

2227 
	#AT91C_UDP_IER
 ((
AT91_REG
 *) 0xFFFA4010)

2228 
	#AT91C_UDP_ICR
 ((
AT91_REG
 *) 0xFFFA4020)

2229 
	#AT91C_UDP_TXVC
 ((
AT91_REG
 *) 0xFFFA4074)

2230 
	#AT91C_UDP_ISR
 ((
AT91_REG
 *) 0xFFFA401C)

2232 
	#AT91C_MCI_RNCR
 ((
AT91_REG
 *) 0xFFFA8114)

2233 
	#AT91C_MCI_TCR
 ((
AT91_REG
 *) 0xFFFA810C)

2234 
	#AT91C_MCI_RCR
 ((
AT91_REG
 *) 0xFFFA8104)

2235 
	#AT91C_MCI_TNPR
 ((
AT91_REG
 *) 0xFFFA8118)

2236 
	#AT91C_MCI_RNPR
 ((
AT91_REG
 *) 0xFFFA8110)

2237 
	#AT91C_MCI_RPR
 ((
AT91_REG
 *) 0xFFFA8100)

2238 
	#AT91C_MCI_TNCR
 ((
AT91_REG
 *) 0xFFFA811C)

2239 
	#AT91C_MCI_TPR
 ((
AT91_REG
 *) 0xFFFA8108)

2240 
	#AT91C_MCI_PTSR
 ((
AT91_REG
 *) 0xFFFA8124)

2241 
	#AT91C_MCI_PTCR
 ((
AT91_REG
 *) 0xFFFA8120)

2243 
	#AT91C_MCI_RDR
 ((
AT91_REG
 *) 0xFFFA8030)

2244 
	#AT91C_MCI_CMDR
 ((
AT91_REG
 *) 0xFFFA8014)

2245 
	#AT91C_MCI_IDR
 ((
AT91_REG
 *) 0xFFFA8048)

2246 
	#AT91C_MCI_DTOR
 ((
AT91_REG
 *) 0xFFFA8008)

2247 
	#AT91C_MCI_TDR
 ((
AT91_REG
 *) 0xFFFA8034)

2248 
	#AT91C_MCI_IER
 ((
AT91_REG
 *) 0xFFFA8044)

2249 
	#AT91C_MCI_MR
 ((
AT91_REG
 *) 0xFFFA8004)

2250 
	#AT91C_MCI_IMR
 ((
AT91_REG
 *) 0xFFFA804C)

2251 
	#AT91C_MCI_CR
 ((
AT91_REG
 *) 0xFFFA8000)

2252 
	#AT91C_MCI_ARGR
 ((
AT91_REG
 *) 0xFFFA8010)

2253 
	#AT91C_MCI_SDCR
 ((
AT91_REG
 *) 0xFFFA800C)

2254 
	#AT91C_MCI_SR
 ((
AT91_REG
 *) 0xFFFA8040)

2255 
	#AT91C_MCI_RSPR
 ((
AT91_REG
 *) 0xFFFA8020)

2257 
	#AT91C_TWI_THR
 ((
AT91_REG
 *) 0xFFFAC034)

2258 
	#AT91C_TWI_IDR
 ((
AT91_REG
 *) 0xFFFAC028)

2259 
	#AT91C_TWI_CWGR
 ((
AT91_REG
 *) 0xFFFAC010)

2260 
	#AT91C_TWI_IADR
 ((
AT91_REG
 *) 0xFFFAC00C)

2261 
	#AT91C_TWI_RHR
 ((
AT91_REG
 *) 0xFFFAC030)

2262 
	#AT91C_TWI_IER
 ((
AT91_REG
 *) 0xFFFAC024)

2263 
	#AT91C_TWI_MMR
 ((
AT91_REG
 *) 0xFFFAC004)

2264 
	#AT91C_TWI_SR
 ((
AT91_REG
 *) 0xFFFAC020)

2265 
	#AT91C_TWI_CR
 ((
AT91_REG
 *) 0xFFFAC000)

2266 
	#AT91C_TWI_IMR
 ((
AT91_REG
 *) 0xFFFAC02C)

2268 
	#AT91C_US0_TCR
 ((
AT91_REG
 *) 0xFFFB010C)

2269 
	#AT91C_US0_PTCR
 ((
AT91_REG
 *) 0xFFFB0120)

2270 
	#AT91C_US0_RNCR
 ((
AT91_REG
 *) 0xFFFB0114)

2271 
	#AT91C_US0_PTSR
 ((
AT91_REG
 *) 0xFFFB0124)

2272 
	#AT91C_US0_TNCR
 ((
AT91_REG
 *) 0xFFFB011C)

2273 
	#AT91C_US0_RNPR
 ((
AT91_REG
 *) 0xFFFB0110)

2274 
	#AT91C_US0_RCR
 ((
AT91_REG
 *) 0xFFFB0104)

2275 
	#AT91C_US0_TPR
 ((
AT91_REG
 *) 0xFFFB0108)

2276 
	#AT91C_US0_TNPR
 ((
AT91_REG
 *) 0xFFFB0118)

2277 
	#AT91C_US0_RPR
 ((
AT91_REG
 *) 0xFFFB0100)

2279 
	#AT91C_US0_RHR
 ((
AT91_REG
 *) 0xFFFB0018)

2280 
	#AT91C_US0_NER
 ((
AT91_REG
 *) 0xFFFB0044)

2281 
	#AT91C_US0_IER
 ((
AT91_REG
 *) 0xFFFB0008)

2282 
	#AT91C_US0_CR
 ((
AT91_REG
 *) 0xFFFB0000)

2283 
	#AT91C_US0_THR
 ((
AT91_REG
 *) 0xFFFB001C)

2284 
	#AT91C_US0_CSR
 ((
AT91_REG
 *) 0xFFFB0014)

2285 
	#AT91C_US0_BRGR
 ((
AT91_REG
 *) 0xFFFB0020)

2286 
	#AT91C_US0_RTOR
 ((
AT91_REG
 *) 0xFFFB0024)

2287 
	#AT91C_US0_TTGR
 ((
AT91_REG
 *) 0xFFFB0028)

2288 
	#AT91C_US0_IDR
 ((
AT91_REG
 *) 0xFFFB000C)

2289 
	#AT91C_US0_MR
 ((
AT91_REG
 *) 0xFFFB0004)

2290 
	#AT91C_US0_IF
 ((
AT91_REG
 *) 0xFFFB004C)

2291 
	#AT91C_US0_FIDI
 ((
AT91_REG
 *) 0xFFFB0040)

2292 
	#AT91C_US0_IMR
 ((
AT91_REG
 *) 0xFFFB0010)

2294 
	#AT91C_US1_PTCR
 ((
AT91_REG
 *) 0xFFFB4120)

2295 
	#AT91C_US1_RCR
 ((
AT91_REG
 *) 0xFFFB4104)

2296 
	#AT91C_US1_RPR
 ((
AT91_REG
 *) 0xFFFB4100)

2297 
	#AT91C_US1_PTSR
 ((
AT91_REG
 *) 0xFFFB4124)

2298 
	#AT91C_US1_TPR
 ((
AT91_REG
 *) 0xFFFB4108)

2299 
	#AT91C_US1_TCR
 ((
AT91_REG
 *) 0xFFFB410C)

2300 
	#AT91C_US1_RNPR
 ((
AT91_REG
 *) 0xFFFB4110)

2301 
	#AT91C_US1_TNCR
 ((
AT91_REG
 *) 0xFFFB411C)

2302 
	#AT91C_US1_RNCR
 ((
AT91_REG
 *) 0xFFFB4114)

2303 
	#AT91C_US1_TNPR
 ((
AT91_REG
 *) 0xFFFB4118)

2305 
	#AT91C_US1_THR
 ((
AT91_REG
 *) 0xFFFB401C)

2306 
	#AT91C_US1_TTGR
 ((
AT91_REG
 *) 0xFFFB4028)

2307 
	#AT91C_US1_BRGR
 ((
AT91_REG
 *) 0xFFFB4020)

2308 
	#AT91C_US1_IDR
 ((
AT91_REG
 *) 0xFFFB400C)

2309 
	#AT91C_US1_MR
 ((
AT91_REG
 *) 0xFFFB4004)

2310 
	#AT91C_US1_RTOR
 ((
AT91_REG
 *) 0xFFFB4024)

2311 
	#AT91C_US1_CR
 ((
AT91_REG
 *) 0xFFFB4000)

2312 
	#AT91C_US1_IMR
 ((
AT91_REG
 *) 0xFFFB4010)

2313 
	#AT91C_US1_FIDI
 ((
AT91_REG
 *) 0xFFFB4040)

2314 
	#AT91C_US1_RHR
 ((
AT91_REG
 *) 0xFFFB4018)

2315 
	#AT91C_US1_IER
 ((
AT91_REG
 *) 0xFFFB4008)

2316 
	#AT91C_US1_CSR
 ((
AT91_REG
 *) 0xFFFB4014)

2317 
	#AT91C_US1_IF
 ((
AT91_REG
 *) 0xFFFB404C)

2318 
	#AT91C_US1_NER
 ((
AT91_REG
 *) 0xFFFB4044)

2320 
	#AT91C_US2_TNCR
 ((
AT91_REG
 *) 0xFFFB811C)

2321 
	#AT91C_US2_RNCR
 ((
AT91_REG
 *) 0xFFFB8114)

2322 
	#AT91C_US2_TNPR
 ((
AT91_REG
 *) 0xFFFB8118)

2323 
	#AT91C_US2_PTCR
 ((
AT91_REG
 *) 0xFFFB8120)

2324 
	#AT91C_US2_TCR
 ((
AT91_REG
 *) 0xFFFB810C)

2325 
	#AT91C_US2_RPR
 ((
AT91_REG
 *) 0xFFFB8100)

2326 
	#AT91C_US2_TPR
 ((
AT91_REG
 *) 0xFFFB8108)

2327 
	#AT91C_US2_RCR
 ((
AT91_REG
 *) 0xFFFB8104)

2328 
	#AT91C_US2_PTSR
 ((
AT91_REG
 *) 0xFFFB8124)

2329 
	#AT91C_US2_RNPR
 ((
AT91_REG
 *) 0xFFFB8110)

2331 
	#AT91C_US2_RTOR
 ((
AT91_REG
 *) 0xFFFB8024)

2332 
	#AT91C_US2_CSR
 ((
AT91_REG
 *) 0xFFFB8014)

2333 
	#AT91C_US2_CR
 ((
AT91_REG
 *) 0xFFFB8000)

2334 
	#AT91C_US2_BRGR
 ((
AT91_REG
 *) 0xFFFB8020)

2335 
	#AT91C_US2_NER
 ((
AT91_REG
 *) 0xFFFB8044)

2336 
	#AT91C_US2_FIDI
 ((
AT91_REG
 *) 0xFFFB8040)

2337 
	#AT91C_US2_TTGR
 ((
AT91_REG
 *) 0xFFFB8028)

2338 
	#AT91C_US2_RHR
 ((
AT91_REG
 *) 0xFFFB8018)

2339 
	#AT91C_US2_IDR
 ((
AT91_REG
 *) 0xFFFB800C)

2340 
	#AT91C_US2_THR
 ((
AT91_REG
 *) 0xFFFB801C)

2341 
	#AT91C_US2_MR
 ((
AT91_REG
 *) 0xFFFB8004)

2342 
	#AT91C_US2_IMR
 ((
AT91_REG
 *) 0xFFFB8010)

2343 
	#AT91C_US2_IF
 ((
AT91_REG
 *) 0xFFFB804C)

2344 
	#AT91C_US2_IER
 ((
AT91_REG
 *) 0xFFFB8008)

2346 
	#AT91C_SSC0_TNPR
 ((
AT91_REG
 *) 0xFFFBC118)

2347 
	#AT91C_SSC0_TCR
 ((
AT91_REG
 *) 0xFFFBC10C)

2348 
	#AT91C_SSC0_RNCR
 ((
AT91_REG
 *) 0xFFFBC114)

2349 
	#AT91C_SSC0_RPR
 ((
AT91_REG
 *) 0xFFFBC100)

2350 
	#AT91C_SSC0_TPR
 ((
AT91_REG
 *) 0xFFFBC108)

2351 
	#AT91C_SSC0_RCR
 ((
AT91_REG
 *) 0xFFFBC104)

2352 
	#AT91C_SSC0_RNPR
 ((
AT91_REG
 *) 0xFFFBC110)

2353 
	#AT91C_SSC0_PTCR
 ((
AT91_REG
 *) 0xFFFBC120)

2354 
	#AT91C_SSC0_TNCR
 ((
AT91_REG
 *) 0xFFFBC11C)

2355 
	#AT91C_SSC0_PTSR
 ((
AT91_REG
 *) 0xFFFBC124)

2357 
	#AT91C_SSC0_IMR
 ((
AT91_REG
 *) 0xFFFBC04C)

2358 
	#AT91C_SSC0_RFMR
 ((
AT91_REG
 *) 0xFFFBC014)

2359 
	#AT91C_SSC0_CR
 ((
AT91_REG
 *) 0xFFFBC000)

2360 
	#AT91C_SSC0_TFMR
 ((
AT91_REG
 *) 0xFFFBC01C)

2361 
	#AT91C_SSC0_CMR
 ((
AT91_REG
 *) 0xFFFBC004)

2362 
	#AT91C_SSC0_IER
 ((
AT91_REG
 *) 0xFFFBC044)

2363 
	#AT91C_SSC0_RHR
 ((
AT91_REG
 *) 0xFFFBC020)

2364 
	#AT91C_SSC0_RCMR
 ((
AT91_REG
 *) 0xFFFBC010)

2365 
	#AT91C_SSC0_SR
 ((
AT91_REG
 *) 0xFFFBC040)

2366 
	#AT91C_SSC0_RSHR
 ((
AT91_REG
 *) 0xFFFBC030)

2367 
	#AT91C_SSC0_THR
 ((
AT91_REG
 *) 0xFFFBC024)

2368 
	#AT91C_SSC0_TCMR
 ((
AT91_REG
 *) 0xFFFBC018)

2369 
	#AT91C_SSC0_IDR
 ((
AT91_REG
 *) 0xFFFBC048)

2370 
	#AT91C_SSC0_TSHR
 ((
AT91_REG
 *) 0xFFFBC034)

2372 
	#AT91C_SSC1_TNPR
 ((
AT91_REG
 *) 0xFFFC0118)

2373 
	#AT91C_SSC1_RNPR
 ((
AT91_REG
 *) 0xFFFC0110)

2374 
	#AT91C_SSC1_TCR
 ((
AT91_REG
 *) 0xFFFC010C)

2375 
	#AT91C_SSC1_PTCR
 ((
AT91_REG
 *) 0xFFFC0120)

2376 
	#AT91C_SSC1_PTSR
 ((
AT91_REG
 *) 0xFFFC0124)

2377 
	#AT91C_SSC1_TNCR
 ((
AT91_REG
 *) 0xFFFC011C)

2378 
	#AT91C_SSC1_TPR
 ((
AT91_REG
 *) 0xFFFC0108)

2379 
	#AT91C_SSC1_RCR
 ((
AT91_REG
 *) 0xFFFC0104)

2380 
	#AT91C_SSC1_RPR
 ((
AT91_REG
 *) 0xFFFC0100)

2381 
	#AT91C_SSC1_RNCR
 ((
AT91_REG
 *) 0xFFFC0114)

2383 
	#AT91C_SSC1_IDR
 ((
AT91_REG
 *) 0xFFFC0048)

2384 
	#AT91C_SSC1_RHR
 ((
AT91_REG
 *) 0xFFFC0020)

2385 
	#AT91C_SSC1_IER
 ((
AT91_REG
 *) 0xFFFC0044)

2386 
	#AT91C_SSC1_CR
 ((
AT91_REG
 *) 0xFFFC0000)

2387 
	#AT91C_SSC1_RCMR
 ((
AT91_REG
 *) 0xFFFC0010)

2388 
	#AT91C_SSC1_SR
 ((
AT91_REG
 *) 0xFFFC0040)

2389 
	#AT91C_SSC1_TSHR
 ((
AT91_REG
 *) 0xFFFC0034)

2390 
	#AT91C_SSC1_CMR
 ((
AT91_REG
 *) 0xFFFC0004)

2391 
	#AT91C_SSC1_RSHR
 ((
AT91_REG
 *) 0xFFFC0030)

2392 
	#AT91C_SSC1_THR
 ((
AT91_REG
 *) 0xFFFC0024)

2393 
	#AT91C_SSC1_RFMR
 ((
AT91_REG
 *) 0xFFFC0014)

2394 
	#AT91C_SSC1_TCMR
 ((
AT91_REG
 *) 0xFFFC0018)

2395 
	#AT91C_SSC1_TFMR
 ((
AT91_REG
 *) 0xFFFC001C)

2396 
	#AT91C_SSC1_IMR
 ((
AT91_REG
 *) 0xFFFC004C)

2398 
	#AT91C_SSC2_RNCR
 ((
AT91_REG
 *) 0xFFFC4114)

2399 
	#AT91C_SSC2_PTCR
 ((
AT91_REG
 *) 0xFFFC4120)

2400 
	#AT91C_SSC2_TCR
 ((
AT91_REG
 *) 0xFFFC410C)

2401 
	#AT91C_SSC2_PTSR
 ((
AT91_REG
 *) 0xFFFC4124)

2402 
	#AT91C_SSC2_TNPR
 ((
AT91_REG
 *) 0xFFFC4118)

2403 
	#AT91C_SSC2_RCR
 ((
AT91_REG
 *) 0xFFFC4104)

2404 
	#AT91C_SSC2_RNPR
 ((
AT91_REG
 *) 0xFFFC4110)

2405 
	#AT91C_SSC2_RPR
 ((
AT91_REG
 *) 0xFFFC4100)

2406 
	#AT91C_SSC2_TNCR
 ((
AT91_REG
 *) 0xFFFC411C)

2407 
	#AT91C_SSC2_TPR
 ((
AT91_REG
 *) 0xFFFC4108)

2409 
	#AT91C_SSC2_IMR
 ((
AT91_REG
 *) 0xFFFC404C)

2410 
	#AT91C_SSC2_IER
 ((
AT91_REG
 *) 0xFFFC4044)

2411 
	#AT91C_SSC2_THR
 ((
AT91_REG
 *) 0xFFFC4024)

2412 
	#AT91C_SSC2_RFMR
 ((
AT91_REG
 *) 0xFFFC4014)

2413 
	#AT91C_SSC2_TFMR
 ((
AT91_REG
 *) 0xFFFC401C)

2414 
	#AT91C_SSC2_IDR
 ((
AT91_REG
 *) 0xFFFC4048)

2415 
	#AT91C_SSC2_RSHR
 ((
AT91_REG
 *) 0xFFFC4030)

2416 
	#AT91C_SSC2_TCMR
 ((
AT91_REG
 *) 0xFFFC4018)

2417 
	#AT91C_SSC2_RHR
 ((
AT91_REG
 *) 0xFFFC4020)

2418 
	#AT91C_SSC2_RCMR
 ((
AT91_REG
 *) 0xFFFC4010)

2419 
	#AT91C_SSC2_CR
 ((
AT91_REG
 *) 0xFFFC4000)

2420 
	#AT91C_SSC2_SR
 ((
AT91_REG
 *) 0xFFFC4040)

2421 
	#AT91C_SSC2_CMR
 ((
AT91_REG
 *) 0xFFFC4004)

2422 
	#AT91C_SSC2_TSHR
 ((
AT91_REG
 *) 0xFFFC4034)

2424 
	#AT91C_SPI0_PTCR
 ((
AT91_REG
 *) 0xFFFC8120)

2425 
	#AT91C_SPI0_TCR
 ((
AT91_REG
 *) 0xFFFC810C)

2426 
	#AT91C_SPI0_RPR
 ((
AT91_REG
 *) 0xFFFC8100)

2427 
	#AT91C_SPI0_TPR
 ((
AT91_REG
 *) 0xFFFC8108)

2428 
	#AT91C_SPI0_PTSR
 ((
AT91_REG
 *) 0xFFFC8124)

2429 
	#AT91C_SPI0_RNCR
 ((
AT91_REG
 *) 0xFFFC8114)

2430 
	#AT91C_SPI0_TNPR
 ((
AT91_REG
 *) 0xFFFC8118)

2431 
	#AT91C_SPI0_RCR
 ((
AT91_REG
 *) 0xFFFC8104)

2432 
	#AT91C_SPI0_RNPR
 ((
AT91_REG
 *) 0xFFFC8110)

2433 
	#AT91C_SPI0_TNCR
 ((
AT91_REG
 *) 0xFFFC811C)

2435 
	#AT91C_SPI0_IDR
 ((
AT91_REG
 *) 0xFFFC8018)

2436 
	#AT91C_SPI0_TDR
 ((
AT91_REG
 *) 0xFFFC800C)

2437 
	#AT91C_SPI0_SR
 ((
AT91_REG
 *) 0xFFFC8010)

2438 
	#AT91C_SPI0_CR
 ((
AT91_REG
 *) 0xFFFC8000)

2439 
	#AT91C_SPI0_CSR
 ((
AT91_REG
 *) 0xFFFC8030)

2440 
	#AT91C_SPI0_RDR
 ((
AT91_REG
 *) 0xFFFC8008)

2441 
	#AT91C_SPI0_MR
 ((
AT91_REG
 *) 0xFFFC8004)

2442 
	#AT91C_SPI0_IER
 ((
AT91_REG
 *) 0xFFFC8014)

2443 
	#AT91C_SPI0_IMR
 ((
AT91_REG
 *) 0xFFFC801C)

2445 
	#AT91C_SPI1_PTCR
 ((
AT91_REG
 *) 0xFFFCC120)

2446 
	#AT91C_SPI1_RNPR
 ((
AT91_REG
 *) 0xFFFCC110)

2447 
	#AT91C_SPI1_RCR
 ((
AT91_REG
 *) 0xFFFCC104)

2448 
	#AT91C_SPI1_TPR
 ((
AT91_REG
 *) 0xFFFCC108)

2449 
	#AT91C_SPI1_PTSR
 ((
AT91_REG
 *) 0xFFFCC124)

2450 
	#AT91C_SPI1_TNCR
 ((
AT91_REG
 *) 0xFFFCC11C)

2451 
	#AT91C_SPI1_RPR
 ((
AT91_REG
 *) 0xFFFCC100)

2452 
	#AT91C_SPI1_TCR
 ((
AT91_REG
 *) 0xFFFCC10C)

2453 
	#AT91C_SPI1_RNCR
 ((
AT91_REG
 *) 0xFFFCC114)

2454 
	#AT91C_SPI1_TNPR
 ((
AT91_REG
 *) 0xFFFCC118)

2456 
	#AT91C_SPI1_IER
 ((
AT91_REG
 *) 0xFFFCC014)

2457 
	#AT91C_SPI1_RDR
 ((
AT91_REG
 *) 0xFFFCC008)

2458 
	#AT91C_SPI1_SR
 ((
AT91_REG
 *) 0xFFFCC010)

2459 
	#AT91C_SPI1_IMR
 ((
AT91_REG
 *) 0xFFFCC01C)

2460 
	#AT91C_SPI1_TDR
 ((
AT91_REG
 *) 0xFFFCC00C)

2461 
	#AT91C_SPI1_IDR
 ((
AT91_REG
 *) 0xFFFCC018)

2462 
	#AT91C_SPI1_CSR
 ((
AT91_REG
 *) 0xFFFCC030)

2463 
	#AT91C_SPI1_CR
 ((
AT91_REG
 *) 0xFFFCC000)

2464 
	#AT91C_SPI1_MR
 ((
AT91_REG
 *) 0xFFFCC004)

2466 
	#AT91C_UHP_HcI¡îru±Sètus
 ((
AT91_REG
 *) 0x0050000C)

2467 
	#AT91C_UHP_HcComm™dSètus
 ((
AT91_REG
 *) 0x00500008)

2468 
	#AT91C_UHP_HcRhSètus
 ((
AT91_REG
 *) 0x00500050)

2469 
	#AT91C_UHP_HcI¡îru±DißbÀ
 ((
AT91_REG
 *) 0x00500014)

2470 
	#AT91C_UHP_HcPîiodicSèπ
 ((
AT91_REG
 *) 0x00500040)

2471 
	#AT91C_UHP_HcC⁄åﬁCuºítED
 ((
AT91_REG
 *) 0x00500024)

2472 
	#AT91C_UHP_HcPîiodCuºítED
 ((
AT91_REG
 *) 0x0050001C)

2473 
	#AT91C_UHP_HcBulkHódED
 ((
AT91_REG
 *) 0x00500028)

2474 
	#AT91C_UHP_HcRevisi⁄
 ((
AT91_REG
 *) 0x00500000)

2475 
	#AT91C_UHP_HcBulkCuºítED
 ((
AT91_REG
 *) 0x0050002C)

2476 
	#AT91C_UHP_HcRhDes¸ùt‹B
 ((
AT91_REG
 *) 0x0050004C)

2477 
	#AT91C_UHP_HcC⁄åﬁHódED
 ((
AT91_REG
 *) 0x00500020)

2478 
	#AT91C_UHP_HcFmRemaöög
 ((
AT91_REG
 *) 0x00500038)

2479 
	#AT91C_UHP_HcHCCA
 ((
AT91_REG
 *) 0x00500018)

2480 
	#AT91C_UHP_HcLSThªshﬁd
 ((
AT91_REG
 *) 0x00500044)

2481 
	#AT91C_UHP_HcRhP‹tSètus
 ((
AT91_REG
 *) 0x00500054)

2482 
	#AT91C_UHP_HcI¡îru±E«bÀ
 ((
AT91_REG
 *) 0x00500010)

2483 
	#AT91C_UHP_HcFmNumbî
 ((
AT91_REG
 *) 0x0050003C)

2484 
	#AT91C_UHP_HcFmI¡îvÆ
 ((
AT91_REG
 *) 0x00500034)

2485 
	#AT91C_UHP_HcC⁄åﬁ
 ((
AT91_REG
 *) 0x00500004)

2486 
	#AT91C_UHP_HcBulkD⁄eHód
 ((
AT91_REG
 *) 0x00500030)

2487 
	#AT91C_UHP_HcRhDes¸ùt‹A
 ((
AT91_REG
 *) 0x00500048)

2489 
	#AT91C_LCDC_DP4_7
 ((
AT91_REG
 *) 0x00600820)

2490 
	#AT91C_LCDC_PWRCON
 ((
AT91_REG
 *) 0x0060083C)

2491 
	#AT91C_LCDC_LUT_ENTRY
 ((
AT91_REG
 *) 0x00600C00)

2492 
	#AT91C_LCDC_TIM1
 ((
AT91_REG
 *) 0x00600808)

2493 
	#AT91C_LCDC_CTRSTVAL
 ((
AT91_REG
 *) 0x00600844)

2494 
	#AT91C_LCDC_ISR
 ((
AT91_REG
 *) 0x00600854)

2495 
	#AT91C_LCDC_IDR
 ((
AT91_REG
 *) 0x0060084C)

2496 
	#AT91C_LCDC_DP2_3
 ((
AT91_REG
 *) 0x00600828)

2497 
	#AT91C_LCDC_DP1_2
 ((
AT91_REG
 *) 0x0060081C)

2498 
	#AT91C_LCDC_FRMP1
 ((
AT91_REG
 *) 0x00600008)

2499 
	#AT91C_LCDC_LCDCON2
 ((
AT91_REG
 *) 0x00600804)

2500 
	#AT91C_LCDC_DP4_5
 ((
AT91_REG
 *) 0x00600834)

2501 
	#AT91C_LCDC_IRR
 ((
AT91_REG
 *) 0x00600864)

2502 
	#AT91C_LCDC_IER
 ((
AT91_REG
 *) 0x00600848)

2503 
	#AT91C_LCDC_MVAL
 ((
AT91_REG
 *) 0x00600818)

2504 
	#AT91C_LCDC_BA2
 ((
AT91_REG
 *) 0x00600004)

2505 
	#AT91C_LCDC_DMA2DCFG
 ((
AT91_REG
 *) 0x00600020)

2506 
	#AT91C_LCDC_ICR
 ((
AT91_REG
 *) 0x00600858)

2507 
	#AT91C_LCDC_FRMA2
 ((
AT91_REG
 *) 0x00600014)

2508 
	#AT91C_LCDC_LCDFRCFG
 ((
AT91_REG
 *) 0x00600810)

2509 
	#AT91C_LCDC_FRMP2
 ((
AT91_REG
 *) 0x0060000C)

2510 
	#AT91C_LCDC_LCDCON1
 ((
AT91_REG
 *) 0x00600800)

2511 
	#AT91C_LCDC_FRMCFG
 ((
AT91_REG
 *) 0x00600018)

2512 
	#AT91C_LCDC_DP5_7
 ((
AT91_REG
 *) 0x0060082C)

2513 
	#AT91C_LCDC_GPR
 ((
AT91_REG
 *) 0x0060085C)

2514 
	#AT91C_LCDC_FIFO
 ((
AT91_REG
 *) 0x00600814)

2515 
	#AT91C_LCDC_CTRSTCON
 ((
AT91_REG
 *) 0x00600840)

2516 
	#AT91C_LCDC_DP3_4
 ((
AT91_REG
 *) 0x00600830)

2517 
	#AT91C_LCDC_FRMA1
 ((
AT91_REG
 *) 0x00600010)

2518 
	#AT91C_LCDC_TIM2
 ((
AT91_REG
 *) 0x0060080C)

2519 
	#AT91C_LCDC_BA1
 ((
AT91_REG
 *) 0x00600000)

2520 
	#AT91C_LCDC_DP3_5
 ((
AT91_REG
 *) 0x00600824)

2521 
	#AT91C_LCDC_DP6_7
 ((
AT91_REG
 *) 0x00600838)

2522 
	#AT91C_LCDC_DMACON
 ((
AT91_REG
 *) 0x0060001C)

2523 
	#AT91C_LCDC_IMR
 ((
AT91_REG
 *) 0x00600850)

2524 
	#AT91C_LCDC_ITR
 ((
AT91_REG
 *) 0x00600860)

2526 
	#AT91C_TFT_DP4_7
 ((
AT91_REG
 *) 0x00600820)

2527 
	#AT91C_TFT_PWRCON
 ((
AT91_REG
 *) 0x0060083C)

2528 
	#AT91C_TFT_LUT_ENTRY
 ((
AT91_REG
 *) 0x00600C00)

2529 
	#AT91C_TFT_TIM1
 ((
AT91_REG
 *) 0x00600808)

2530 
	#AT91C_TFT_CTRSTVAL
 ((
AT91_REG
 *) 0x00600844)

2531 
	#AT91C_TFT_ISR
 ((
AT91_REG
 *) 0x00600854)

2532 
	#AT91C_TFT_IDR
 ((
AT91_REG
 *) 0x0060084C)

2533 
	#AT91C_TFT_DP2_3
 ((
AT91_REG
 *) 0x00600828)

2534 
	#AT91C_TFT_DP1_2
 ((
AT91_REG
 *) 0x0060081C)

2535 
	#AT91C_TFT_FRMP1
 ((
AT91_REG
 *) 0x00600008)

2536 
	#AT91C_TFT_LCDCON2
 ((
AT91_REG
 *) 0x00600804)

2537 
	#AT91C_TFT_DP4_5
 ((
AT91_REG
 *) 0x00600834)

2538 
	#AT91C_TFT_IRR
 ((
AT91_REG
 *) 0x00600864)

2539 
	#AT91C_TFT_IER
 ((
AT91_REG
 *) 0x00600848)

2540 
	#AT91C_TFT_MVAL
 ((
AT91_REG
 *) 0x00600818)

2541 
	#AT91C_TFT_BA2
 ((
AT91_REG
 *) 0x00600004)

2542 
	#AT91C_TFT_DMA2DCFG
 ((
AT91_REG
 *) 0x00600020)

2543 
	#AT91C_TFT_ICR
 ((
AT91_REG
 *) 0x00600858)

2544 
	#AT91C_TFT_FRMA2
 ((
AT91_REG
 *) 0x00600014)

2545 
	#AT91C_TFT_LCDFRCFG
 ((
AT91_REG
 *) 0x00600810)

2546 
	#AT91C_TFT_FRMP2
 ((
AT91_REG
 *) 0x0060000C)

2547 
	#AT91C_TFT_LCDCON1
 ((
AT91_REG
 *) 0x00600800)

2548 
	#AT91C_TFT_FRMCFG
 ((
AT91_REG
 *) 0x00600018)

2549 
	#AT91C_TFT_DP5_7
 ((
AT91_REG
 *) 0x0060082C)

2550 
	#AT91C_TFT_GPR
 ((
AT91_REG
 *) 0x0060085C)

2551 
	#AT91C_TFT_FIFO
 ((
AT91_REG
 *) 0x00600814)

2552 
	#AT91C_TFT_CTRSTCON
 ((
AT91_REG
 *) 0x00600840)

2553 
	#AT91C_TFT_DP3_4
 ((
AT91_REG
 *) 0x00600830)

2554 
	#AT91C_TFT_FRMA1
 ((
AT91_REG
 *) 0x00600010)

2555 
	#AT91C_TFT_TIM2
 ((
AT91_REG
 *) 0x0060080C)

2556 
	#AT91C_TFT_BA1
 ((
AT91_REG
 *) 0x00600000)

2557 
	#AT91C_TFT_DP3_5
 ((
AT91_REG
 *) 0x00600824)

2558 
	#AT91C_TFT_DP6_7
 ((
AT91_REG
 *) 0x00600838)

2559 
	#AT91C_TFT_DMACON
 ((
AT91_REG
 *) 0x0060001C)

2560 
	#AT91C_TFT_IMR
 ((
AT91_REG
 *) 0x00600850)

2561 
	#AT91C_TFT_ITR
 ((
AT91_REG
 *) 0x00600860)

2562 

	)

2566 
	#AT91C_PIO_PA0
 (() 1 << 0)

2567 
	#AT91C_PA0_SPI0_MISO
 ((Ë
AT91C_PIO_PA0
)

2568 
	#AT91C_PA0_MCDA0
 ((Ë
AT91C_PIO_PA0
)

2569 
	#AT91C_PIO_PA1
 (() 1 << 1)

2570 
	#AT91C_PA1_SPI0_MOSI
 ((Ë
AT91C_PIO_PA1
)

2571 
	#AT91C_PA1_MCCDA
 ((Ë
AT91C_PIO_PA1
)

2572 
	#AT91C_PIO_PA10
 (() 1 << 10)

2573 
	#AT91C_PA10_DTXD
 ((Ë
AT91C_PIO_PA10
)

2574 
	#AT91C_PA10_PCK3
 ((Ë
AT91C_PIO_PA10
)

2575 
	#AT91C_PIO_PA11
 (() 1 << 11)

2576 
	#AT91C_PA11_TSYNC
 ((Ë
AT91C_PIO_PA11
)

2577 
	#AT91C_PA11_SCK1
 ((Ë
AT91C_PIO_PA11
)

2578 
	#AT91C_PIO_PA12
 (() 1 << 12)

2579 
	#AT91C_PA12_TCLK
 ((Ë
AT91C_PIO_PA12
)

2580 
	#AT91C_PA12_RTS1
 ((Ë
AT91C_PIO_PA12
)

2581 
	#AT91C_PIO_PA13
 (() 1 << 13)

2582 
	#AT91C_PA13_TPS0
 ((Ë
AT91C_PIO_PA13
)

2583 
	#AT91C_PA13_CTS1
 ((Ë
AT91C_PIO_PA13
)

2584 
	#AT91C_PIO_PA14
 (() 1 << 14)

2585 
	#AT91C_PA14_TPS1
 ((Ë
AT91C_PIO_PA14
)

2586 
	#AT91C_PA14_SCK2
 ((Ë
AT91C_PIO_PA14
)

2587 
	#AT91C_PIO_PA15
 (() 1 << 15)

2588 
	#AT91C_PA15_TPS2
 ((Ë
AT91C_PIO_PA15
)

2589 
	#AT91C_PA15_RTS2
 ((Ë
AT91C_PIO_PA15
)

2590 
	#AT91C_PIO_PA16
 (() 1 << 16)

2591 
	#AT91C_PA16_TPK0
 ((Ë
AT91C_PIO_PA16
)

2592 
	#AT91C_PA16_CTS2
 ((Ë
AT91C_PIO_PA16
)

2593 
	#AT91C_PIO_PA17
 (() 1 << 17)

2594 
	#AT91C_PA17_TPK1
 ((Ë
AT91C_PIO_PA17
)

2595 
	#AT91C_PA17_TF1
 ((Ë
AT91C_PIO_PA17
)

2596 
	#AT91C_PIO_PA18
 (() 1 << 18)

2597 
	#AT91C_PA18_TPK2
 ((Ë
AT91C_PIO_PA18
)

2598 
	#AT91C_PA18_TK1
 ((Ë
AT91C_PIO_PA18
)

2599 
	#AT91C_PIO_PA19
 (() 1 << 19)

2600 
	#AT91C_PA19_TPK3
 ((Ë
AT91C_PIO_PA19
)

2601 
	#AT91C_PA19_TD1
 ((Ë
AT91C_PIO_PA19
)

2602 
	#AT91C_PIO_PA2
 (() 1 << 2)

2603 
	#AT91C_PA2_SPI0_SPCK
 ((Ë
AT91C_PIO_PA2
)

2604 
	#AT91C_PA2_MCCK
 ((Ë
AT91C_PIO_PA2
)

2605 
	#AT91C_PIO_PA20
 (() 1 << 20)

2606 
	#AT91C_PA20_TPK4
 ((Ë
AT91C_PIO_PA20
)

2607 
	#AT91C_PA20_RD1
 ((Ë
AT91C_PIO_PA20
)

2608 
	#AT91C_PIO_PA21
 (() 1 << 21)

2609 
	#AT91C_PA21_TPK5
 ((Ë
AT91C_PIO_PA21
)

2610 
	#AT91C_PA21_RK1
 ((Ë
AT91C_PIO_PA21
)

2611 
	#AT91C_PIO_PA22
 (() 1 << 22)

2612 
	#AT91C_PA22_TPK6
 ((Ë
AT91C_PIO_PA22
)

2613 
	#AT91C_PA22_RF1
 ((Ë
AT91C_PIO_PA22
)

2614 
	#AT91C_PIO_PA23
 (() 1 << 23)

2615 
	#AT91C_PA23_TPK7
 ((Ë
AT91C_PIO_PA23
)

2616 
	#AT91C_PA23_RTS0
 ((Ë
AT91C_PIO_PA23
)

2617 
	#AT91C_PIO_PA24
 (() 1 << 24)

2618 
	#AT91C_PA24_TPK8
 ((Ë
AT91C_PIO_PA24
)

2619 
	#AT91C_PA24_SPI1_NPCS1
 ((Ë
AT91C_PIO_PA24
)

2620 
	#AT91C_PIO_PA25
 (() 1 << 25)

2621 
	#AT91C_PA25_TPK9
 ((Ë
AT91C_PIO_PA25
)

2622 
	#AT91C_PA25_SPI1_NPCS2
 ((Ë
AT91C_PIO_PA25
)

2623 
	#AT91C_PIO_PA26
 (() 1 << 26)

2624 
	#AT91C_PA26_TPK10
 ((Ë
AT91C_PIO_PA26
)

2625 
	#AT91C_PA26_SPI1_NPCS3
 ((Ë
AT91C_PIO_PA26
)

2626 
	#AT91C_PIO_PA27
 (() 1 << 27)

2627 
	#AT91C_PA27_TPK11
 ((Ë
AT91C_PIO_PA27
)

2628 
	#AT91C_PA27_SPI0_NPCS1
 ((Ë
AT91C_PIO_PA27
)

2629 
	#AT91C_PIO_PA28
 (() 1 << 28)

2630 
	#AT91C_PA28_TPK12
 ((Ë
AT91C_PIO_PA28
)

2631 
	#AT91C_PA28_SPI0_NPCS2
 ((Ë
AT91C_PIO_PA28
)

2632 
	#AT91C_PIO_PA29
 (() 1 << 29)

2633 
	#AT91C_PA29_TPK13
 ((Ë
AT91C_PIO_PA29
)

2634 
	#AT91C_PA29_SPI0_NPCS3
 ((Ë
AT91C_PIO_PA29
)

2635 
	#AT91C_PIO_PA3
 (() 1 << 3)

2636 
	#AT91C_PA3_SPI0_NPCS0
 ((Ë
AT91C_PIO_PA3
)

2637 
	#AT91C_PIO_PA30
 (() 1 << 30)

2638 
	#AT91C_PA30_TPK14
 ((Ë
AT91C_PIO_PA30
)

2639 
	#AT91C_PA30_A23
 ((Ë
AT91C_PIO_PA30
)

2640 
	#AT91C_PIO_PA31
 (() 1 << 31)

2641 
	#AT91C_PA31_TPK15
 ((Ë
AT91C_PIO_PA31
)

2642 
	#AT91C_PA31_A24
 ((Ë
AT91C_PIO_PA31
)

2643 
	#AT91C_PIO_PA4
 (() 1 << 4)

2644 
	#AT91C_PA4_SPI0_NPCS1
 ((Ë
AT91C_PIO_PA4
)

2645 
	#AT91C_PA4_MCDA1
 ((Ë
AT91C_PIO_PA4
)

2646 
	#AT91C_PIO_PA5
 (() 1 << 5)

2647 
	#AT91C_PA5_SPI0_NPCS2
 ((Ë
AT91C_PIO_PA5
)

2648 
	#AT91C_PA5_MCDA2
 ((Ë
AT91C_PIO_PA5
)

2649 
	#AT91C_PIO_PA6
 (() 1 << 6)

2650 
	#AT91C_PA6_SPI0_NPCS3
 ((Ë
AT91C_PIO_PA6
)

2651 
	#AT91C_PA6_MCDA3
 ((Ë
AT91C_PIO_PA6
)

2652 
	#AT91C_PIO_PA7
 (() 1 << 7)

2653 
	#AT91C_PA7_TWD
 ((Ë
AT91C_PIO_PA7
)

2654 
	#AT91C_PA7_PCK0
 ((Ë
AT91C_PIO_PA7
)

2655 
	#AT91C_PIO_PA8
 (() 1 << 8)

2656 
	#AT91C_PA8_TWCK
 ((Ë
AT91C_PIO_PA8
)

2657 
	#AT91C_PA8_PCK1
 ((Ë
AT91C_PIO_PA8
)

2658 
	#AT91C_PIO_PA9
 (() 1 << 9)

2659 
	#AT91C_PA9_DRXD
 ((Ë
AT91C_PIO_PA9
)

2660 
	#AT91C_PA9_PCK2
 ((Ë
AT91C_PIO_PA9
)

2661 
	#AT91C_PIO_PB0
 (() 1 << 0)

2662 
	#AT91C_PB0_LCDVSYNC
 ((Ë
AT91C_PIO_PB0
)

2663 
	#AT91C_PIO_PB1
 (() 1 << 1)

2664 
	#AT91C_PB1_LCDHSYNC
 ((Ë
AT91C_PIO_PB1
)

2665 
	#AT91C_PIO_PB10
 (() 1 << 10)

2666 
	#AT91C_PB10_LCDD5
 ((Ë
AT91C_PIO_PB10
)

2667 
	#AT91C_PB10_LCDD10
 ((Ë
AT91C_PIO_PB10
)

2668 
	#AT91C_PIO_PB11
 (() 1 << 11)

2669 
	#AT91C_PB11_LCDD6
 ((Ë
AT91C_PIO_PB11
)

2670 
	#AT91C_PB11_LCDD11
 ((Ë
AT91C_PIO_PB11
)

2671 
	#AT91C_PIO_PB12
 (() 1 << 12)

2672 
	#AT91C_PB12_LCDD7
 ((Ë
AT91C_PIO_PB12
)

2673 
	#AT91C_PB12_LCDD12
 ((Ë
AT91C_PIO_PB12
)

2674 
	#AT91C_PIO_PB13
 (() 1 << 13)

2675 
	#AT91C_PB13_LCDD8
 ((Ë
AT91C_PIO_PB13
)

2676 
	#AT91C_PB13_LCDD13
 ((Ë
AT91C_PIO_PB13
)

2677 
	#AT91C_PIO_PB14
 (() 1 << 14)

2678 
	#AT91C_PB14_LCDD9
 ((Ë
AT91C_PIO_PB14
)

2679 
	#AT91C_PB14_LCDD14
 ((Ë
AT91C_PIO_PB14
)

2680 
	#AT91C_PIO_PB15
 (() 1 << 15)

2681 
	#AT91C_PB15_LCDD10
 ((Ë
AT91C_PIO_PB15
)

2682 
	#AT91C_PB15_LCDD15
 ((Ë
AT91C_PIO_PB15
)

2683 
	#AT91C_PIO_PB16
 (() 1 << 16)

2684 
	#AT91C_PB16_LCDD11
 ((Ë
AT91C_PIO_PB16
)

2685 
	#AT91C_PB16_LCDD19
 ((Ë
AT91C_PIO_PB16
)

2686 
	#AT91C_PIO_PB17
 (() 1 << 17)

2687 
	#AT91C_PB17_LCDD12
 ((Ë
AT91C_PIO_PB17
)

2688 
	#AT91C_PB17_LCDD20
 ((Ë
AT91C_PIO_PB17
)

2689 
	#AT91C_PIO_PB18
 (() 1 << 18)

2690 
	#AT91C_PB18_LCDD13
 ((Ë
AT91C_PIO_PB18
)

2691 
	#AT91C_PB18_LCDD21
 ((Ë
AT91C_PIO_PB18
)

2692 
	#AT91C_PIO_PB19
 (() 1 << 19)

2693 
	#AT91C_PB19_LCDD14
 ((Ë
AT91C_PIO_PB19
)

2694 
	#AT91C_PB19_LCDD22
 ((Ë
AT91C_PIO_PB19
)

2695 
	#AT91C_PIO_PB2
 (() 1 << 2)

2696 
	#AT91C_PB2_LCDDOTCK
 ((Ë
AT91C_PIO_PB2
)

2697 
	#AT91C_PB2_PCK0
 ((Ë
AT91C_PIO_PB2
)

2698 
	#AT91C_PIO_PB20
 (() 1 << 20)

2699 
	#AT91C_PB20_LCDD15
 ((Ë
AT91C_PIO_PB20
)

2700 
	#AT91C_PB20_LCDD23
 ((Ë
AT91C_PIO_PB20
)

2701 
	#AT91C_PIO_PB21
 (() 1 << 21)

2702 
	#AT91C_PB21_TF0
 ((Ë
AT91C_PIO_PB21
)

2703 
	#AT91C_PB21_LCDD16
 ((Ë
AT91C_PIO_PB21
)

2704 
	#AT91C_PIO_PB22
 (() 1 << 22)

2705 
	#AT91C_PB22_TK0
 ((Ë
AT91C_PIO_PB22
)

2706 
	#AT91C_PB22_LCDD17
 ((Ë
AT91C_PIO_PB22
)

2707 
	#AT91C_PIO_PB23
 (() 1 << 23)

2708 
	#AT91C_PB23_TD0
 ((Ë
AT91C_PIO_PB23
)

2709 
	#AT91C_PB23_LCDD18
 ((Ë
AT91C_PIO_PB23
)

2710 
	#AT91C_PIO_PB24
 (() 1 << 24)

2711 
	#AT91C_PB24_RD0
 ((Ë
AT91C_PIO_PB24
)

2712 
	#AT91C_PB24_LCDD19
 ((Ë
AT91C_PIO_PB24
)

2713 
	#AT91C_PIO_PB25
 (() 1 << 25)

2714 
	#AT91C_PB25_RK0
 ((Ë
AT91C_PIO_PB25
)

2715 
	#AT91C_PB25_LCDD20
 ((Ë
AT91C_PIO_PB25
)

2716 
	#AT91C_PIO_PB26
 (() 1 << 26)

2717 
	#AT91C_PB26_RF0
 ((Ë
AT91C_PIO_PB26
)

2718 
	#AT91C_PB26_LCDD21
 ((Ë
AT91C_PIO_PB26
)

2719 
	#AT91C_PIO_PB27
 (() 1 << 27)

2720 
	#AT91C_PB27_SPI1_NPCS1
 ((Ë
AT91C_PIO_PB27
)

2721 
	#AT91C_PB27_LCDD22
 ((Ë
AT91C_PIO_PB27
)

2722 
	#AT91C_PIO_PB28
 (() 1 << 28)

2723 
	#AT91C_PB28_SPI1_NPCS0
 ((Ë
AT91C_PIO_PB28
)

2724 
	#AT91C_PB28_LCDD23
 ((Ë
AT91C_PIO_PB28
)

2725 
	#AT91C_PIO_PB29
 (() 1 << 29)

2726 
	#AT91C_PB29_SPI1_SPCK
 ((Ë
AT91C_PIO_PB29
)

2727 
	#AT91C_PB29_IRQ2
 ((Ë
AT91C_PIO_PB29
)

2728 
	#AT91C_PIO_PB3
 (() 1 << 3)

2729 
	#AT91C_PB3_LCDDEN
 ((Ë
AT91C_PIO_PB3
)

2730 
	#AT91C_PIO_PB30
 (() 1 << 30)

2731 
	#AT91C_PB30_SPI1_MISO
 ((Ë
AT91C_PIO_PB30
)

2732 
	#AT91C_PB30_IRQ1
 ((Ë
AT91C_PIO_PB30
)

2733 
	#AT91C_PIO_PB31
 (() 1 << 31)

2734 
	#AT91C_PB31_SPI1_MOSI
 ((Ë
AT91C_PIO_PB31
)

2735 
	#AT91C_PB31_PCK2
 ((Ë
AT91C_PIO_PB31
)

2736 
	#AT91C_PIO_PB4
 (() 1 << 4)

2737 
	#AT91C_PB4_LCDCC
 ((Ë
AT91C_PIO_PB4
)

2738 
	#AT91C_PB4_LCDD2
 ((Ë
AT91C_PIO_PB4
)

2739 
	#AT91C_PIO_PB5
 (() 1 << 5)

2740 
	#AT91C_PB5_LCDD0
 ((Ë
AT91C_PIO_PB5
)

2741 
	#AT91C_PB5_LCDD3
 ((Ë
AT91C_PIO_PB5
)

2742 
	#AT91C_PIO_PB6
 (() 1 << 6)

2743 
	#AT91C_PB6_LCDD1
 ((Ë
AT91C_PIO_PB6
)

2744 
	#AT91C_PB6_LCDD4
 ((Ë
AT91C_PIO_PB6
)

2745 
	#AT91C_PIO_PB7
 (() 1 << 7)

2746 
	#AT91C_PB7_LCDD2
 ((Ë
AT91C_PIO_PB7
)

2747 
	#AT91C_PB7_LCDD5
 ((Ë
AT91C_PIO_PB7
)

2748 
	#AT91C_PIO_PB8
 (() 1 << 8)

2749 
	#AT91C_PB8_LCDD3
 ((Ë
AT91C_PIO_PB8
)

2750 
	#AT91C_PB8_LCDD6
 ((Ë
AT91C_PIO_PB8
)

2751 
	#AT91C_PIO_PB9
 (() 1 << 9)

2752 
	#AT91C_PB9_LCDD4
 ((Ë
AT91C_PIO_PB9
)

2753 
	#AT91C_PB9_LCDD7
 ((Ë
AT91C_PIO_PB9
)

2754 
	#AT91C_PIO_PC0
 (() 1 << 0)

2755 
	#AT91C_PC0_SMOE
 ((Ë
AT91C_PIO_PC0
)

2756 
	#AT91C_PC0_NCS6
 ((Ë
AT91C_PIO_PC0
)

2757 
	#AT91C_PIO_PC1
 (() 1 << 1)

2758 
	#AT91C_PC1_SMWE
 ((Ë
AT91C_PIO_PC1
)

2759 
	#AT91C_PC1_NCS7
 ((Ë
AT91C_PIO_PC1
)

2760 
	#AT91C_PIO_PC10
 (() 1 << 10)

2761 
	#AT91C_PC10_RTS0
 ((Ë
AT91C_PIO_PC10
)

2762 
	#AT91C_PC10_SCK0
 ((Ë
AT91C_PIO_PC10
)

2763 
	#AT91C_PIO_PC11
 (() 1 << 11)

2764 
	#AT91C_PC11_CTS0
 ((Ë
AT91C_PIO_PC11
)

2765 
	#AT91C_PC11_FIQ
 ((Ë
AT91C_PIO_PC11
)

2766 
	#AT91C_PIO_PC12
 (() 1 << 12)

2767 
	#AT91C_PC12_TXD1
 ((Ë
AT91C_PIO_PC12
)

2768 
	#AT91C_PC12_NCS6
 ((Ë
AT91C_PIO_PC12
)

2769 
	#AT91C_PIO_PC13
 (() 1 << 13)

2770 
	#AT91C_PC13_RXD1
 ((Ë
AT91C_PIO_PC13
)

2771 
	#AT91C_PC13_NCS7
 ((Ë
AT91C_PIO_PC13
)

2772 
	#AT91C_PIO_PC14
 (() 1 << 14)

2773 
	#AT91C_PC14_TXD2
 ((Ë
AT91C_PIO_PC14
)

2774 
	#AT91C_PC14_SPI1_NPCS2
 ((Ë
AT91C_PIO_PC14
)

2775 
	#AT91C_PIO_PC15
 (() 1 << 15)

2776 
	#AT91C_PC15_RXD2
 ((Ë
AT91C_PIO_PC15
)

2777 
	#AT91C_PC15_SPI1_NPCS3
 ((Ë
AT91C_PIO_PC15
)

2778 
	#AT91C_PIO_PC16
 (() 1 << 16)

2779 
	#AT91C_PC16_D16
 ((Ë
AT91C_PIO_PC16
)

2780 
	#AT91C_PC16_TCLK0
 ((Ë
AT91C_PIO_PC16
)

2781 
	#AT91C_PIO_PC17
 (() 1 << 17)

2782 
	#AT91C_PC17_D17
 ((Ë
AT91C_PIO_PC17
)

2783 
	#AT91C_PC17_TCLK1
 ((Ë
AT91C_PIO_PC17
)

2784 
	#AT91C_PIO_PC18
 (() 1 << 18)

2785 
	#AT91C_PC18_D18
 ((Ë
AT91C_PIO_PC18
)

2786 
	#AT91C_PC18_TCLK2
 ((Ë
AT91C_PIO_PC18
)

2787 
	#AT91C_PIO_PC19
 (() 1 << 19)

2788 
	#AT91C_PC19_D19
 ((Ë
AT91C_PIO_PC19
)

2789 
	#AT91C_PC19_TIOA0
 ((Ë
AT91C_PIO_PC19
)

2790 
	#AT91C_PIO_PC2
 (() 1 << 2)

2791 
	#AT91C_PC2_NWAIT
 ((Ë
AT91C_PIO_PC2
)

2792 
	#AT91C_PC2_IRQ0
 ((Ë
AT91C_PIO_PC2
)

2793 
	#AT91C_PIO_PC20
 (() 1 << 20)

2794 
	#AT91C_PC20_D20
 ((Ë
AT91C_PIO_PC20
)

2795 
	#AT91C_PC20_TIOB0
 ((Ë
AT91C_PIO_PC20
)

2796 
	#AT91C_PIO_PC21
 (() 1 << 21)

2797 
	#AT91C_PC21_D21
 ((Ë
AT91C_PIO_PC21
)

2798 
	#AT91C_PC21_TIOA1
 ((Ë
AT91C_PIO_PC21
)

2799 
	#AT91C_PIO_PC22
 (() 1 << 22)

2800 
	#AT91C_PC22_D22
 ((Ë
AT91C_PIO_PC22
)

2801 
	#AT91C_PC22_TIOB1
 ((Ë
AT91C_PIO_PC22
)

2802 
	#AT91C_PIO_PC23
 (() 1 << 23)

2803 
	#AT91C_PC23_D23
 ((Ë
AT91C_PIO_PC23
)

2804 
	#AT91C_PC23_TIOA2
 ((Ë
AT91C_PIO_PC23
)

2805 
	#AT91C_PIO_PC24
 (() 1 << 24)

2806 
	#AT91C_PC24_D24
 ((Ë
AT91C_PIO_PC24
)

2807 
	#AT91C_PC24_TIOB2
 ((Ë
AT91C_PIO_PC24
)

2808 
	#AT91C_PIO_PC25
 (() 1 << 25)

2809 
	#AT91C_PC25_D25
 ((Ë
AT91C_PIO_PC25
)

2810 
	#AT91C_PC25_TF2
 ((Ë
AT91C_PIO_PC25
)

2811 
	#AT91C_PIO_PC26
 (() 1 << 26)

2812 
	#AT91C_PC26_D26
 ((Ë
AT91C_PIO_PC26
)

2813 
	#AT91C_PC26_TK2
 ((Ë
AT91C_PIO_PC26
)

2814 
	#AT91C_PIO_PC27
 (() 1 << 27)

2815 
	#AT91C_PC27_D27
 ((Ë
AT91C_PIO_PC27
)

2816 
	#AT91C_PC27_TD2
 ((Ë
AT91C_PIO_PC27
)

2817 
	#AT91C_PIO_PC28
 (() 1 << 28)

2818 
	#AT91C_PC28_D28
 ((Ë
AT91C_PIO_PC28
)

2819 
	#AT91C_PC28_RD2
 ((Ë
AT91C_PIO_PC28
)

2820 
	#AT91C_PIO_PC29
 (() 1 << 29)

2821 
	#AT91C_PC29_D29
 ((Ë
AT91C_PIO_PC29
)

2822 
	#AT91C_PC29_RK2
 ((Ë
AT91C_PIO_PC29
)

2823 
	#AT91C_PIO_PC3
 (() 1 << 3)

2824 
	#AT91C_PC3_A25_CFRNW
 ((Ë
AT91C_PIO_PC3
)

2825 
	#AT91C_PIO_PC30
 (() 1 << 30)

2826 
	#AT91C_PC30_D30
 ((Ë
AT91C_PIO_PC30
)

2827 
	#AT91C_PC30_RF2
 ((Ë
AT91C_PIO_PC30
)

2828 
	#AT91C_PIO_PC31
 (() 1 << 31)

2829 
	#AT91C_PC31_D31
 ((Ë
AT91C_PIO_PC31
)

2830 
	#AT91C_PC31_PCK1
 ((Ë
AT91C_PIO_PC31
)

2831 
	#AT91C_PIO_PC4
 (() 1 << 4)

2832 
	#AT91C_PC4_NCS4_CFCS0
 ((Ë
AT91C_PIO_PC4
)

2833 
	#AT91C_PIO_PC5
 (() 1 << 5)

2834 
	#AT91C_PC5_NCS5_CFCS1
 ((Ë
AT91C_PIO_PC5
)

2835 
	#AT91C_PIO_PC6
 (() 1 << 6)

2836 
	#AT91C_PC6_CFCE1
 ((Ë
AT91C_PIO_PC6
)

2837 
	#AT91C_PIO_PC7
 (() 1 << 7)

2838 
	#AT91C_PC7_CFCE2
 ((Ë
AT91C_PIO_PC7
)

2839 
	#AT91C_PIO_PC8
 (() 1 << 8)

2840 
	#AT91C_PC8_TXD0
 ((Ë
AT91C_PIO_PC8
)

2841 
	#AT91C_PC8_PCK2
 ((Ë
AT91C_PIO_PC8
)

2842 
	#AT91C_PIO_PC9
 (() 1 << 9)

2843 
	#AT91C_PC9_RXD0
 ((Ë
AT91C_PIO_PC9
)

2844 
	#AT91C_PC9_PCK3
 ((Ë
AT91C_PIO_PC9
)

2845 

	)

2849 
	#AT91C_ID_FIQ
 (() 0)

2850 
	#AT91C_ID_SYS
 (() 1)

2851 
	#AT91C_ID_PIOA
 (() 2)

2852 
	#AT91C_ID_PIOB
 (() 3)

2853 
	#AT91C_ID_PIOC
 (() 4)

2854 
	#AT91C_ID_US0
 (() 6)

2855 
	#AT91C_ID_US1
 (() 7)

2856 
	#AT91C_ID_US2
 (() 8)

2857 
	#AT91C_ID_MCI
 (() 9)

2858 
	#AT91C_ID_UDP
 (() 10)

2859 
	#AT91C_ID_TWI
 (() 11)

2860 
	#AT91C_ID_SPI0
 (() 12)

2861 
	#AT91C_ID_SPI1
 (() 13)

2862 
	#AT91C_ID_SSC0
 (() 14)

2863 
	#AT91C_ID_SSC1
 (() 15)

2864 
	#AT91C_ID_SSC2
 (() 16)

2865 
	#AT91C_ID_TC0
 (() 17)

2866 
	#AT91C_ID_TC1
 (() 18)

2867 
	#AT91C_ID_TC2
 (() 19)

2868 
	#AT91C_ID_UHP
 (() 20)

2869 
	#AT91C_ID_LCDC
 (() 21)

2870 
	#AT91C_ID_IRQ0
 (() 29)

2871 
	#AT91C_ID_IRQ1
 (() 30)

2872 
	#AT91C_ID_IRQ2
 (() 31)

2873 
	#AT91C_ALL_INT
 (() 0xE03FFFDF)

2874 

	)

2878 
	#AT91C_BASE_SYS
 ((
AT91PS_SYS
) 0xFFFFEA00)

2879 
	#AT91C_BASE_SDRAMC
 ((
AT91PS_SDRAMC
) 0xFFFFEA00)

2880 
	#AT91C_BASE_SMC
 ((
AT91PS_SMC
) 0xFFFFEC00)

2882 
AT91PS_MATRIX
 
AT91C_BASE_MATRIX
;

	)

2884 
AT91PS_AIC
 
AT91C_BASE_AIC
;

2885 
	#AT91C_BASE_PDC_DBGU
 ((
AT91PS_PDC
) 0xFFFFF300)

2886 
	#AT91C_BASE_DBGU
 ((
AT91PS_DBGU
) 0xFFFFF200)

2887 
	#AT91C_BASE_PIOA
 ((
AT91PS_PIO
) 0xFFFFF400)

2888 
	#AT91C_BASE_PIOB
 ((
AT91PS_PIO
) 0xFFFFF600)

2889 
	#AT91C_BASE_PIOC
 ((
AT91PS_PIO
) 0xFFFFF800)

2890 
	#AT91C_BASE_CKGR
 ((
AT91PS_CKGR
) 0xFFFFFC20)

2892 
AT91PS_PMC
 
AT91C_BASE_PMC
;

	)

2893 
	#AT91C_BASE_RSTC
 ((
AT91PS_RSTC
) 0xFFFFFD00)

2894 
	#AT91C_BASE_SHDWC
 ((
AT91PS_SHDWC
) 0xFFFFFD10)

2895 
	#AT91C_BASE_RTTC
 ((
AT91PS_RTTC
) 0xFFFFFD20)

2896 
	#AT91C_BASE_PITC
 ((
AT91PS_PITC
) 0xFFFFFD30)

2897 
	#AT91C_BASE_WDTC
 ((
AT91PS_WDTC
) 0xFFFFFD40)

2898 
	#AT91C_BASE_TC0
 ((
AT91PS_TC
) 0xFFFA0000)

2899 
	#AT91C_BASE_TC1
 ((
AT91PS_TC
) 0xFFFA0040)

2900 
	#AT91C_BASE_TC2
 ((
AT91PS_TC
) 0xFFFA0080)

2901 
	#AT91C_BASE_TCB0
 ((
AT91PS_TCB
) 0xFFFA0000)

2903 
AT91PS_UDP
 
AT91C_BASE_UDP
;

	)

2904 
	#AT91C_BASE_PDC_MCI
 ((
AT91PS_PDC
) 0xFFFA8100)

2905 
	#AT91C_BASE_MCI
 ((
AT91PS_MCI
) 0xFFFA8000)

2906 
	#AT91C_BASE_TWI
 ((
AT91PS_TWI
) 0xFFFAC000)

2907 
	#AT91C_BASE_PDC_US0
 ((
AT91PS_PDC
) 0xFFFB0100)

2908 
	#AT91C_BASE_US0
 ((
AT91PS_USART
) 0xFFFB0000)

2909 
	#AT91C_BASE_PDC_US1
 ((
AT91PS_PDC
) 0xFFFB4100)

2910 
	#AT91C_BASE_US1
 ((
AT91PS_USART
) 0xFFFB4000)

2911 
	#AT91C_BASE_PDC_US2
 ((
AT91PS_PDC
) 0xFFFB8100)

2912 
	#AT91C_BASE_US2
 ((
AT91PS_USART
) 0xFFFB8000)

2913 
	#AT91C_BASE_PDC_SSC0
 ((
AT91PS_PDC
) 0xFFFBC100)

2914 
	#AT91C_BASE_SSC0
 ((
AT91PS_SSC
) 0xFFFBC000)

2915 
	#AT91C_BASE_PDC_SSC1
 ((
AT91PS_PDC
) 0xFFFC0100)

2916 
	#AT91C_BASE_SSC1
 ((
AT91PS_SSC
) 0xFFFC0000)

2917 
	#AT91C_BASE_PDC_SSC2
 ((
AT91PS_PDC
) 0xFFFC4100)

2918 
	#AT91C_BASE_SSC2
 ((
AT91PS_SSC
) 0xFFFC4000)

2919 
	#AT91C_BASE_PDC_SPI0
 ((
AT91PS_PDC
) 0xFFFC8100)

2920 
	#AT91C_BASE_SPI0
 ((
AT91PS_SPI
) 0xFFFC8000)

2921 
	#AT91C_BASE_PDC_SPI1
 ((
AT91PS_PDC
) 0xFFFCC100)

2922 
	#AT91C_BASE_SPI1
 ((
AT91PS_SPI
) 0xFFFCC000)

2923 
	#AT91C_BASE_UHP
 ((
AT91PS_UHP
) 0x00500000)

2924 
	#AT91C_BASE_LCDC
 ((
AT91PS_LCDC
) 0x00600000)

2925 
	#AT91C_BASE_LCDC_16B_TFT
 ((
AT91PS_LCDC
) 0x00600000)

2926 

	)

2931 
	#AT91C_ITCM
 ((*) 0x00100000)

2932 
	#AT91C_ITCM_SIZE
 (() 0x00010000)

2934 
	#AT91C_DTCM
 ((*) 0x00200000)

2935 
	#AT91C_DTCM_SIZE
 (() 0x00010000)

2937 
	#AT91C_IRAM
 ((*) 0x00300000)

2938 
	#AT91C_IRAM_SIZE
 (() 0x00028000)

2940 
	#AT91C_IRAM_MIN
 ((*) 0x00300000)

2941 
	#AT91C_IRAM_MIN_SIZE
 (() 0x00008000)

2943 
	#AT91C_IROM
 ((*) 0x00400000)

2944 
	#AT91C_IROM_SIZE
 (() 0x00008000)

2946 
	#AT91C_EBI_CS0
 ((*) 0x10000000)

2947 
	#AT91C_EBI_CS0_SIZE
 (() 0x10000000)

2949 
	#AT91C_EBI_CS1
 ((*) 0x20000000)

2950 
	#AT91C_EBI_CS1_SIZE
 (() 0x10000000)

2952 
	#AT91C_EBI_SDRAM
 ((*) 0x20000000)

2953 
	#AT91C_EBI_SDRAM_SIZE
 (() 0x10000000)

2955 
	#AT91C_EBI_SDRAM_16BIT
 ((*) 0x20000000)

2956 
	#AT91C_EBI_SDRAM_16BIT_SIZE
 (() 0x02000000)

2958 
	#AT91C_EBI_SDRAM_32BIT
 ((*) 0x20000000)

2959 
	#AT91C_EBI_SDRAM_32BIT_SIZE
 (() 0x04000000)

2961 
	#AT91C_EBI_CS2
 ((*) 0x30000000)

2962 
	#AT91C_EBI_CS2_SIZE
 (() 0x10000000)

2964 
	#AT91C_EBI_CS3
 ((*) 0x40000000)

2965 
	#AT91C_EBI_CS3_SIZE
 (() 0x10000000)

2967 
	#AT91C_EBI_SM
 ((*) 0x40000000)

2968 
	#AT91C_EBI_SM_SIZE
 (() 0x10000000)

2970 
	#AT91C_EBI_CS4
 ((*) 0x50000000)

2971 
	#AT91C_EBI_CS4_SIZE
 (() 0x10000000)

2973 
	#AT91C_EBI_CF0
 ((*) 0x50000000)

2974 
	#AT91C_EBI_CF0_SIZE
 (() 0x10000000)

2976 
	#AT91C_EBI_CS5
 ((*) 0x60000000)

2977 
	#AT91C_EBI_CS5_SIZE
 (() 0x10000000)

2979 
	#AT91C_EBI_CF1
 ((*) 0x60000000)

2980 
	#AT91C_EBI_CF1_SIZE
 (() 0x10000000)

2982 
	#AT91C_EBI_CS6
 ((*) 0x70000000)

2983 
	#AT91C_EBI_CS6_SIZE
 (() 0x10000000)

2985 
	#AT91C_EBI_CS7
 ((*) 0x80000000)

2986 
	#AT91C_EBI_CS7_SIZE
 (() 0x10000000)

2987 

	)

	@usb/a.c

1 
	~<°dio.h
>

4 
	gmaö


8 
	gi
,
	gj
,
	gk
;

9 
	gi
 = 0; 
	gj
 = 2;

	@usb/common.h

2 #i‚de‡
_COMMON_H


3 
	#_COMMON_H


	)

8 
	#AT91SAM9261


	)

9 #i‚de‡
ölöe


10 
	#ölöe
 
__ölöe


	)

12 
	~"AT91SAM9261.h
"

16 
	#UDP


	)

17 
	#UDP_INTERNAL_PULLUP_BY_MATRIX


	)

18 
	#FULLSPEED


	)

19 
	#USB_ENDPOINT0_MAXPACKETSIZE
 8

	)

21 
	#USB_BUS_POWERED


	)

31 (*
	tCÆlback_f
)(, ,

39 
	#SET
(, 
Êags
Ë((Ë(Ë| (Êags))

	)

40 
	#CLEAR
(, 
Êags
Ë((Ë&~(Êags))

	)

43 
	#ISSET
(, 
Êags
Ë(((Ë& (Êags)Ë=(Êags))

	)

44 
	#ISCLEARED
(, 
Êags
Ë(((Ë& (Êags)Ë=0)

	)

47 
	#HBYTE
(
w‹d
Ë((Ë((w‹dË>> 8))

	)

48 
	#LBYTE
(
w‹d
Ë((Ë((w‹dË& 0x00FF))

	)

51 
	#WORDB
(
byãs
Ë((Ë((byãs[0] << 8Ë| byãs[1]))

	)

54 
	#WORDL
(
byãs
Ë((Ë((byãs[1] << 8Ë| byãs[0]))

	)

57 
	#DWORDB
(
byãs
Ë((Ë((byãs[0] << 24Ë| (byãs[1] << 16Ë\

	)

58 | (
byãs
[2] << 8) | bytes[3]))

61 
	#DWORDL
(
byãs
Ë((Ë((byãs[3] << 24Ë| (byãs[2] << 16Ë\

	)

62 | (
byãs
[1] << 8) | bytes[0]))

65 
	#STORE_DWORDB
(
dw‹d
, 
byãs
Ë\

	)

66 
byãs
[0] = (Ë((
dw‹d
 >> 24) & 0xFF); \

67 
byãs
[1] = (Ë((
dw‹d
 >> 16) & 0xFF); \

68 
byãs
[2] = (Ë((
dw‹d
 >> 8) & 0xFF); \

69 
byãs
[3] = (Ë(
dw‹d
 & 0xFF);

72 
	#STORE_WORDB
(
w‹d
, 
byãs
Ë\

	)

73 
byãs
[0] = (Ë((
w‹d
 >> 8) & 0xFF); \

74 
byãs
[1] = (Ë(
w‹d
 & 0xFF);

86 
ölöe
 
	$c›y
(*
pSour˚
, *
pDe°
, 
dLígth
)

88 
dI
;

90 
dI
 = 0; dI < 
dLígth
; dI++) {

92 *((*Ë
pDe°
Ë*((*Ë
pSour˚
);

93 ((*Ë
pDe°
)++;

94 ((*Ë
pSour˚
)++;

96 
	}
}

107 
	$mö1
(
dVÆue1
, 
dVÆue2
)

109 i‡(
dVÆue1
 < 
dVÆue2
) {

111  
dVÆue1
;

115  
dVÆue2
;

117 
	}
}

119 
	#mö1
(
a
, 
b
Ë◊ < b ?á : b)

	)

126 
ölöe
 sig√d 
	$œ°SëBô
(
dVÆue
)

128 sig√d 
bIndex
 = -1;

130 i‡(
dVÆue
 & 0xFFFF0000) {

132 
bIndex
 += 16;

133 
dVÆue
 >>= 16;

136 i‡(
dVÆue
 & 0xFF00) {

138 
bIndex
 += 8;

139 
dVÆue
 >>= 8;

142 i‡(
dVÆue
 & 0xF0) {

144 
bIndex
 += 4;

145 
dVÆue
 >>= 4;

148 i‡(
dVÆue
 & 0xC) {

150 
bIndex
 += 2;

151 
dVÆue
 >>= 2;

154 i‡(
dVÆue
 & 0x2) {

156 
bIndex
 += 1;

157 
dVÆue
 >>= 1;

160 i‡(
dVÆue
 & 0x1) {

162 
bIndex
++;

165  
bIndex
;

166 
	}
}

168 #ifde‡
PRINF_DEBUG_ENABLE


169 
	#¥ötk1
 
¥ötk


	)

172 
	#¥ötk1
(...)

	)

	@usb/enumeration_example.c

6 
	~<löux/kî√l.h
>

7 
	~<löux/moduÀ.h
>

8 
	~<löux/fs.h
>

9 
	~<asm/uac˚ss.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/öãºu±.h
>

13 
	~"comm⁄.h
"

19 
	~"usb.h
"

20 
	~"°™d¨d.h
"

35 
S_usb_c⁄figuøti⁄_des¸ùt‹
 
	msC⁄figuøti⁄
;

36 
S_usb_öãrÁ˚_des¸ùt‹
 
	msI¡îÁ˚
;

37 
S_usb_ídpoöt_des¸ùt‹
 
	msBulkOut
;

38 
S_usb_ídpoöt_des¸ùt‹
 
	msBulkIn
;

40 } 
	tS_c‹e_c⁄figuøti⁄_des¸ùt‹
;

47 
CBK_Inô
(c⁄° 
S_usb
 *
pUsb
);

50 
CBK_Su•íd
(c⁄° 
S_usb
 *
pUsb
);

53 
CBK_Resume
(c⁄° 
S_usb
 *
pUsb
);

56 
CBK_NewReque°
(c⁄° 
S_usb
 *
pUsb
);

70 
S_usb_ídpoöt
 
	gpEndpoöts
[] = {

72 
USB_ENDPOINT_SINGLEBANK
,

73 
USB_ENDPOINT_DUALBANK
,

74 
USB_ENDPOINT_DUALBANK


80 
S_usb_ªque°
 
	gsSëup
;

84 
	gdSèã
;

89 
S_usb_ˇŒbacks
 
	gsCÆlbacks
 = {

91 
CBK_Inô
,

93 
CBK_Su•íd
,

94 
CBK_Resume
,

95 
CBK_NewReque°
,

100 
S_usb_drivî
 
	gsDeÁu…Drivî
;

112 
S_usb
 
	gsUsb
;

125 c⁄° 
S_usb_devi˚_des¸ùt‹
 
	gsDevi˚Des¸ùt‹
 = {

127 (
S_usb_devi˚_des¸ùt‹
),

128 
USB_DEVICE_DESCRIPTOR
,

133 
USB_ENDPOINT0_MAXPACKETSIZE
,

146 c⁄° 
S_c‹e_c⁄figuøti⁄_des¸ùt‹
 
	gsC⁄figuøti⁄Des¸ùt‹
 = {

150 (
S_usb_c⁄figuøti⁄_des¸ùt‹
),

151 
USB_CONFIGURATION_DESCRIPTOR
,

152 (
S_c‹e_c⁄figuøti⁄_des¸ùt‹
),

156 
USB_CONFIG_SELF_NOWAKEUP
,

157 
USB_POWER_MA
(100)

161 (
S_usb_öãrÁ˚_des¸ùt‹
),

162 
USB_INTERFACE_DESCRIPTOR
,

165 
COMM_NUM_ENDPOINTS
-1,

174 (
S_usb_ídpoöt_des¸ùt‹
),

175 
USB_ENDPOINT_DESCRIPTOR
,

177 
ENDPOINT_TYPE_BULK
,

183 (
S_usb_ídpoöt_des¸ùt‹
),

184 
USB_ENDPOINT_DESCRIPTOR
,

186 
ENDPOINT_TYPE_BULK
,

191 c⁄° 
S_usb_ídpoöt_des¸ùt‹
* 
	gInOutEP
[2]={&(
sC⁄figuøti⁄Des¸ùt‹
.
sBulkOut
),&(sC⁄figuøti⁄Des¸ùt‹.
sBulkIn
)};

194 c⁄° 
S_usb_œnguage_id
 
	gsL™guageID
 = {

196 
USB_STRING_DESCRIPTOR_SIZE
(1),

197 
USB_STRING_DESCRIPTOR
,

198 
USB_LANGUAGE_ENGLISH_US


202 c⁄° 
	gpM™uÁ˘uªr
[] = {

204 
USB_STRING_DESCRIPTOR_SIZE
(5),

205 
USB_STRING_DESCRIPTOR
,

206 
USB_UNICODE
('A'),

207 
USB_UNICODE
('T'),

208 
USB_UNICODE
('M'),

209 
USB_UNICODE
('E'),

210 
USB_UNICODE
('L')

214 c⁄° 
	gpProdu˘
[] = {

216 
USB_STRING_DESCRIPTOR_SIZE
(15),

217 
USB_STRING_DESCRIPTOR
,

218 
USB_UNICODE
('A'),

219 
USB_UNICODE
('T'),

220 
USB_UNICODE
('M'),

221 
USB_UNICODE
('E'),

222 
USB_UNICODE
('L'),

223 
USB_UNICODE
(' '),

224 
USB_UNICODE
('A'),

225 
USB_UNICODE
('T'),

226 
USB_UNICODE
('9'),

227 
USB_UNICODE
('1'),

228 
USB_UNICODE
(' '),

229 
USB_UNICODE
('E'),

230 
USB_UNICODE
('N'),

231 
USB_UNICODE
('U'),

232 
USB_UNICODE
('M')

236 c⁄° 
	gpSîül
[] = {

238 
USB_STRING_DESCRIPTOR_SIZE
(12),

239 
USB_STRING_DESCRIPTOR
,

240 
USB_UNICODE
('0'),

241 
USB_UNICODE
('1'),

242 
USB_UNICODE
('2'),

243 
USB_UNICODE
('3'),

244 
USB_UNICODE
('4'),

245 
USB_UNICODE
('5'),

246 
USB_UNICODE
('6'),

247 
USB_UNICODE
('7'),

248 
USB_UNICODE
('8'),

249 
USB_UNICODE
('9'),

250 
USB_UNICODE
('A'),

251 
USB_UNICODE
('F')

255 c⁄° *
	gpSåögDes¸ùt‹s
[] = {

257 (*Ë&
sL™guageID
,

258 
pM™uÁ˘uªr
,

259 
pProdu˘
,

260 
pSîül


265 
S_°d_des¸ùt‹s
 
	gsDes¸ùt‹s
 = {

267 &
sDevi˚Des¸ùt‹
,

268 (
S_usb_c⁄figuøti⁄_des¸ùt‹
 *Ë&
sC⁄figuøti⁄Des¸ùt‹
,

269 
pSåögDes¸ùt‹s
,

270 
InOutEP


275 
S_°d_˛ass
 
	gsCœss
;

295 
úqªtu∫_t
 
	$usb_öãºu±
(
úq
, *
dev_id
 )

297 
	`USB_H™dÀr
(&
sUsb
);

299  
IRQ_HANDLED
;

300 
	}
}

308 #i‡!
deföed
(
USB_BUS_POWERED
)

309 
	$ISR_VBus
()

311 
	`USB_Aâach
(&
sUsb
);

314 
	`AT91F_PIO_GëI¡îru±Sètus
(
AT91C_PIO_VBUS
);

315 
	}
}

320 
DRIVER_AsmUARTI¡îru±H™dÀr
();

321 
DRIVER_AsmVBUSI¡îru±H™dÀr
();

329 
	$CBK_Inô
(c⁄° 
S_usb
 *
pUsb
)

334 
	`USB_Aâach
(
pUsb
);

335 
	}
}

344 
	$CBK_Su•íd
(c⁄° 
S_usb
 *
pUsb
)

348 #i‡
	`deföed
(
NOTRACES
)

349 
	`DEV_Su•íd
();

351 
	}
}

361 
	$CBK_Resume
(c⁄° 
S_usb
 *
pUsb
)

363 #i‡
	`deföed
(
NOTRACES
)

364 
	`DEV_Resume
();

367 
	}
}

376 
	$CBK_NewReque°
(c⁄° 
S_usb
 *
pUsb
)

378 
	`AT9261_UDP_REQUEST_HANDLE
(&
sCœss
);

379 
	}
}

386 
	$öiBuf
()

388 
AT9261_UDP_IN_BUFFER_LENGTH
=0;

389 
AT9261_UDP_OUT_BUFFER_LENGTH
=0;

390 
	}
}

392 
	gHasInôül
=
Ál£
;

393 
	gMaj‹
;

394 
AT91PS_PMC
 
	gAT91C_BASE_PMC
;

395 
AT91PS_MATRIX
 
	gAT91C_BASE_MATRIX
;

396 
AT91PS_AIC
 
	gAT91C_BASE_AIC
;

397 
AT91PS_UDP
 
	gAT91C_BASE_UDP
;

398 
	$udp_›í
(
öode
 *
mynode
, 
fûe
 *
myfûe
)

400 
	`¥ötk
(
KERN_ALERT
"here in open_func!\n");

401 if(!
HasInôül
)

413 
	`USB_Inô
(&
sUsb
);

414 
	`öiBuf
();

415 !
	`ISSET
(
	`USB_GëSèã
(&
sUsb
), 
USB_STATE_POWERED
));

416 
	`USB_C⁄√˘
(&
sUsb
);

417 
HasInôül
=
åue
;

418 
	`ªque°_úq
(10, 
usb_öãºu±
, 0, "USB_TEST", 
NULL
);

420 
	`¥ötk
(
KERN_ALERT
"get out of open_func!\n");

421 if(!
	`ISSET
(
	`USB_GëSèã
(&
sUsb
), 
USB_STATE_CONFIGURED
))

424 
	}
}

425 
	$udp_˛o£
(
öode
 *
mynode
, 
fûe
 *
myfûe
)

428 
	`‰ì_úq
(10, 
NULL
);

429 
	`UDP_Disc⁄√˘
(&
sUsb
);

430 
	`USB_Aâach
(&
sUsb
);

431 
HasInôül
=
Ál£
;

433 
	}
}

436 
ssize_t
 
	$RódUSB
(
fûe
 *
fûp
, 
__u£r
 *
buf
, 
size_t
 
Àngth
, 
loff_t
 *
off
)

438 if(!
	`ISSET
(
	`USB_GëSèã
(&
sUsb
), 
USB_STATE_CONFIGURED
))

443 if(
AT9261_UDP_IN_BUFFER_LENGTH
==0)

449 
	`c›y_to_u£r
(
buf
,
AT9261_UDP_IN_BUFFER
,
PACKET_LENGTH
);

450 
AT9261_UDP_IN_BUFFER_LENGTH
=0;

452  
PACKET_LENGTH
;

453 
	}
}

455 
ssize_t
 
	$WrôeUSB
(
fûe
 *
fûp
, c⁄° 
__u£r
 *
buf
,
size_t
 
Àngth
, 
loff_t
 *
off
)

457 if(!
	`ISSET
(
	`USB_GëSèã
(&
sUsb
), 
USB_STATE_CONFIGURED
))

459 if(
AT9261_UDP_OUT_BUFFER_LENGTH
>0)

462 
	`c›y_‰om_u£r
(
AT9261_UDP_OUT_BUFFER
,
buf
,
Àngth
);

463 
AT9261_UDP_OUT_BUFFER_LENGTH
=
Àngth
;

467 
	}
}

468 
fûe_›î©i⁄s
 
	gf›s
 = {

469 .
ªad
 = 
RódUSB
,

470 .
	gwrôe
 = 
WrôeUSB
,

471 .
	g›í
 = 
udp_›í
,

472 .
	gªÀa£
 = 
udp_˛o£


476 
	$öô_usb_moduÀ
()

478 
Maj‹
 = 
	`ªgi°î_chrdev
(0, "TP11USB", &
f›s
);

480 i‡(
Maj‹
 < 0) {

481 
	`¥ötk
("RegisteringÅhe character device failed with %d\n",

482 
Maj‹
);

483  
Maj‹
;

485 
AT91C_BASE_PMC
=(
AT91PS_PMC
)
	`i‹em≠
(0xFFFFFC00,0x0084);

486 
AT91C_BASE_MATRIX
=(
AT91PS_MATRIX
)
	`i‹em≠
(0xFFFFEE00,19*4);

487 
AT91C_BASE_AIC
=(
AT91PS_AIC
)
	`i‹em≠
(0xFFFFF000,0x14c);

488 
AT91C_BASE_UDP
=(
AT91PS_UDP
)
	`i‹em≠
(0xFFFA4000,0x78);

490 
sDeÁu…Drivî
.
pI¡îÁ˚
=
AT91C_BASE_UDP
;

491 
sDeÁu…Drivî
.
pEndpoötFIFO
=0;

492 
sDeÁu…Drivî
.
pDMAI¡îÁ˚
=0;

493 
sDeÁu…Drivî
.
dID
=
AT91C_ID_UDP
;

494 
sDeÁu…Drivî
.
dPMC
=
AT91C_PMC_UDP
;

495 
sDeÁu…Drivî
.
pMëhods
=&
sUDPMëhods
;

497 
sUsb
.
pDrivî
=&
sDeÁu…Drivî
;

498 
sUsb
.
pEndpoöts
=pEndpoints;

499 
sUsb
.
dNumEndpoöts
=3;

500 
sUsb
.
pCÆlbacks
=&
sCÆlbacks
;

501 
sUsb
.
pSëup
=&
sSëup
;

502 
sUsb
.
pSèã
=&
dSèã
;

503 
sCœss
.
pUsb
=&
sUsb
;

504 
sCœss
.
pDes¸ùt‹s
=&
sDes¸ùt‹s
;

505 
sCœss
.
wDevi˚Sètus
=()0;

506 
sCœss
.
wD©a
=()0;

507 
AT9261_UDP_IN_BUFFER
=(*)
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

508 
AT9261_UDP_OUT_BUFFER
=(*)
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

509 
	`¥ötk
("<1>I wa†assig√d maj‹Çumbî %d. TÿèlkÅo\n", 
Maj‹
);

510 
	`¥ötk
("<1>the driver, createá dev file with\n");

511 
	`¥ötk
("'mknod /dev/hñlÿ¯%d 0'.\n", 
Maj‹
);

512 
	`¥ötk
("<1>Try various minorÇumbers. TryÅo catándÉchoÅo\n");

513 
	`¥ötk
("the device file.\n");

514 
	`¥ötk
("<1>RemoveÅhe device fileánd module when done.\n");

518 
	}
}

519 
	$˛ónup_usb_moduÀ
()

521 
ªt
 = 
	`uƒegi°î_chrdev
(
Maj‹
, "TP11USB");

522 
	`iounm≠
(
AT91C_BASE_PMC
);

523 
	`iounm≠
(
AT91C_BASE_MATRIX
);

524 
	`iounm≠
(
AT91C_BASE_AIC
);

525 
	`iounm≠
(
AT91C_BASE_UDP
);

526 i‡(
ªt
 < 0)

527 
	`¥ötk
(
KERN_ALERT
"Eº‹ i¿uƒegi°î_chrdev: %d\n", 
ªt
);

529 
	}
}

531 
moduÀ_öô
(
öô_usb_moduÀ
);

532 
moduÀ_exô
(
˛ónup_usb_moduÀ
);

	@usb/standard.c

7 
	~"comm⁄.h
"

11 
	~<löux/kî√l.h
>

12 
	~"usb.h
"

13 
	~"°™d¨d.h
"

23 
	$STD_C⁄figuªEndpoöts
(c⁄° 
S_°d_˛ass
 *
pCœss
)

25 
i
;

28 
	`USB_SëC⁄figuøti⁄
(
pCœss
->
pUsb
);

31 
i
 = 0; i < (
pCœss
->
pUsb
->
dNumEndpoöts
-1); i++) {

33 
	`USB_C⁄figuªEndpoöt
(
pCœss
->
pUsb
,

34 
pCœss
->
pDes¸ùt‹s
->
pEndpoöts
[
i
]);

36 
	}
}

43 
	$STD_SëC⁄figuøti⁄
(
S_°d_˛ass
 *
pCœss
,

44 
bC⁄figuøti⁄
)

46 
	`USB_SídZLP0
(
pCœss
->
pUsb
,

47 (
CÆlback_f
Ë
STD_C⁄figuªEndpoöts
,

48 
pCœss
);

49 
	}
}

55 
	$STD_GëC⁄figuøti⁄
(
S_°d_˛ass
 *
pCœss
)

57 i‡(
	`ISSET
(
	`USB_GëSèã
(
pCœss
->
pUsb
), 
USB_STATE_CONFIGURED
)) {

59 
pCœss
->
wD©a
 = 1;

63 
pCœss
->
wD©a
 = 0;

66 
	`USB_Wrôe
(
pCœss
->
pUsb
, 0, &’Cœss->
wD©a
), 1, 0, 0);

67 
	}
}

73 
	$STD_GëDevi˚Sètus
(
S_°d_˛ass
 *
pCœss
)

76 i‡(
	`ISSET
(
pCœss
->
pDes¸ùt‹s
->
pC⁄figuøti⁄
->
bmAâibuãs
,

77 
USB_CONFIG_SELF_NOWAKEUP
)) {

80 
pCœss
->
wDevi˚Sètus
 |
SELF_POWERED
;

85 
pCœss
->
wDevi˚Sètus
 &~
SELF_POWERED
;

89 
	`USB_Wrôe
(
pCœss
->
pUsb
, 0, &’Cœss->
wDevi˚Sètus
), 2, 0, 0);

90 
	}
}

97 
	$STD_GëEndpoötSètus
(
S_°d_˛ass
 *
pCœss
,

98 
bEndpoöt
)

101 
pCœss
->
wD©a
 = (Ë
	`USB_HÆt
’Cœss->
pUsb
,

102 
bEndpoöt
,

103 
USB_GET_STATUS
);

106 
	`USB_Wrôe
(
pCœss
->
pUsb
, 0, &’Cœss->
wD©a
), 2, 0, 0);

107 
	}
}

117 
	$STD_GëDevi˚Des¸ùt‹
(c⁄° 
S_°d_˛ass
 *
pCœss
,

118 
wLígth
)

120 
	`USB_Wrôe
(
pCœss
->
pUsb
,

122 (*Ë
pCœss
->
pDes¸ùt‹s
->
pDevi˚
,

123 
	`mö1
((
S_usb_devi˚_des¸ùt‹
), 
wLígth
),

126 
	}
}

136 
	$STD_GëC⁄figuøti⁄Des¸ùt‹
(c⁄° 
S_°d_˛ass
 *
pCœss
,

137 
wLígth
)

139 
	`USB_Wrôe
(
pCœss
->
pUsb
,

141 (*Ë
pCœss
->
pDes¸ùt‹s
->
pC⁄figuøti⁄
,

142 
	`mö1
(
pCœss
->
pDes¸ùt‹s
->
pC⁄figuøti⁄
->
wTŸÆLígth
,

143 
wLígth
),

146 
	}
}

148 #i‡
deföed
(
HIGHSPEED
)

157 
	$STD_GëQuÆifõrDes¸ùt‹
(c⁄° 
S_°d_˛ass
 *
pCœss
,

158 
wLígth
)

160 
	`USB_Wrôe
(
pCœss
->
pUsb
,

162 (*Ë
pCœss
->
pDes¸ùt‹s
->
pQuÆifõr
,

163 
	`mö1
(
pCœss
->
pDes¸ùt‹s
->
pQuÆifõr
->
bLígth
, 
wLígth
),

166 
	}
}

176 
	$STD_GëOSCDes¸ùt‹
(c⁄° 
S_°d_˛ass
 *
pCœss
,

177 
wLígth
)

179 
	`USB_Wrôe
(
pCœss
->
pUsb
,

181 (*Ë
pCœss
->
pDes¸ùt‹s
->
pOthîS≥edC⁄figuøti⁄
,

182 
	`mö1
(
pCœss
->
pDes¸ùt‹s
->
pOthîS≥edC⁄figuøti⁄
->
wTŸÆLígth
,

183 
wLígth
),

186 
	}
}

198 
	$STD_GëSåögDes¸ùt‹
(c⁄° 
S_°d_˛ass
 *
pCœss
,

199 
wLígth
,

200 
bIndex
)

202 
	`USB_Wrôe
(
pCœss
->
pUsb
,

204 (*Ë
pCœss
->
pDes¸ùt‹s
->
pSåögs
[
bIndex
],

205 
	`mö1
–*(
pCœss
->
pDes¸ùt‹s
->
pSåögs
[
bIndex
]), 
wLígth
),

208 
	}
}

218 
	$STD_Reque°H™dÀr
(
S_°d_˛ass
 *
pCœss
)

220 
S_usb_ªque°
 *
pSëup
 = 
	`USB_GëSëup
(
pCœss
->
pUsb
);

224 
pSëup
->
bReque°
) {

226 
USB_GET_DESCRIPTOR
:

230 
	`HBYTE
(
pSëup
->
wVÆue
)) {

232 
USB_DEVICE_DESCRIPTOR
:

234 
	`STD_GëDevi˚Des¸ùt‹
(
pCœss
, 
pSëup
->
wLígth
);

238 
USB_CONFIGURATION_DESCRIPTOR
:

240 
	`STD_GëC⁄figuøti⁄Des¸ùt‹
(
pCœss
, 
pSëup
->
wLígth
);

243 #i‡
	`deföed
(
HIGHSPEED
)

245 
USB_DEVICE_QUALIFIER_DESCRIPTOR
:

247 
	`STD_GëQuÆifõrDes¸ùt‹
(
pCœss
, 
pSëup
->
wLígth
);

251 
USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR
:

253 
	`STD_GëOSCDes¸ùt‹
(
pCœss
, 
pSëup
->
wLígth
);

257 
USB_STRING_DESCRIPTOR
:

259 
	`STD_GëSåögDes¸ùt‹
(
pCœss
,

260 
pSëup
->
wLígth
,

261 
	`LBYTE
(
pSëup
->
wVÆue
));

268 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

274 
USB_SET_ADDRESS
:

276 
	`USB_SídZLP0
(
pCœss
->
pUsb
,

277 (
CÆlback_f
Ë
USB_SëAddªss
,

278 (*Ë
pCœss
->
pUsb
);

282 
USB_SET_CONFIGURATION
:

284 
	`STD_SëC⁄figuøti⁄
(
pCœss
, (Ë
pSëup
->
wVÆue
);

288 
USB_GET_CONFIGURATION
:

290 
	`STD_GëC⁄figuøti⁄
(
pCœss
);

294 
USB_CLEAR_FEATURE
:

297 
pSëup
->
wVÆue
) {

299 
USB_ENDPOINT_HALT
:

301 
	`USB_HÆt
(
pCœss
->
pUsb
, 
	`LBYTE
(
pSëup
->
wIndex
), 
USB_CLEAR_FEATURE
);

302 
	`USB_SídZLP0
(
pCœss
->
pUsb
, 0, 0);

306 
USB_DEVICE_REMOTE_WAKEUP
:

308 
pCœss
->
wDevi˚Sètus
 &~
REMOTE_WAKEUP
;

309 
	`USB_SídZLP0
(
pCœss
->
pUsb
, 0, 0);

315 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

321 
USB_GET_STATUS
:

324 
	`USB_REQUEST_RECIPIENT
(
pSëup
)) {

326 
USB_RECIPIENT_DEVICE
:

328 
	`STD_GëDevi˚Sètus
(
pCœss
);

332 
USB_RECIPIENT_ENDPOINT
:

334 
	`STD_GëEndpoötSètus
(
pCœss
,

335 
	`LBYTE
(
pSëup
->
wIndex
));

342 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

348 
USB_SET_FEATURE
:

351 
pSëup
->
wVÆue
) {

353 
USB_ENDPOINT_HALT
:

355 
	`USB_HÆt
(
pCœss
->
pUsb
, 
	`LBYTE
(
pSëup
->
wIndex
), 
USB_SET_FEATURE
);

356 
	`USB_SídZLP0
(
pCœss
->
pUsb
, 0, 0);

360 
USB_DEVICE_REMOTE_WAKEUP
:

362 
pCœss
->
wDevi˚Sètus
 |
REMOTE_WAKEUP
;

363 
	`USB_SídZLP0
(
pCœss
->
pUsb
, 0, 0);

370 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

379 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

381 
	}
}

382 
	gD©aP¨£InSëup
[16];

384 * 
	gAT9261_UDP_IN_BUFFER
;

385 vﬁ©ûê
	gAT9261_UDP_IN_BUFFER_LENGTH
;

387 * 
	gAT9261_UDP_OUT_BUFFER
;

388 vﬁ©ûê
	gAT9261_UDP_OUT_BUFFER_LENGTH
;

391 
	$FINISHED_WRITE
(
p1
,
p2
,
p3
,
p4
)

393 
AT9261_UDP_OUT_BUFFER_LENGTH
=0;

394 
	}
}

395 
	$FINISHED_READ
()

397 
AT9261_UDP_IN_BUFFER_LENGTH
=
PACKET_LENGTH
;

398 
	}
}

436 
	$AT9261_UDP_REQUEST_HANDLE
(
S_°d_˛ass
 *
pCœss
)

438 
S_usb_ªque°
 *
pSëup
 = 
	`USB_GëSëup
(
pCœss
->
pUsb
);

439 
ty≥
=
pSëup
->
bmReque°Ty≥
 & 0x60;

441 if(
ty≥
==0x40)

448 if(
pSëup
->
wIndex
==0x0471)

451 if(
AT9261_UDP_IN_BUFFER_LENGTH
!=0)

454 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

457 
	`USB_SídZLP0
(((
S_°d_˛ass
 *)
pCœss
)->
pUsb
, 0, 0);

458 
	`USB_Ród
(
pCœss
->
pUsb
,1,
AT9261_UDP_IN_BUFFER
,
PACKET_LENGTH
,(
CÆlback_f
)
FINISHED_READ
,0);

461 if(
pSëup
->
wIndex
==0x0472)

463 if(
AT9261_UDP_OUT_BUFFER_LENGTH
==0)

465 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

468 
	`USB_Wrôe
(
pCœss
->
pUsb
,2,
AT9261_UDP_OUT_BUFFER
,
PACKET_LENGTH
,(
CÆlback_f
)
FINISHED_WRITE
,0);

469 
	`USB_SídZLP0
(
pCœss
->
pUsb
, 0, 0);

471 if(
pSëup
->
wIndex
==0x0474)

473 
m
=
PACKET_LENGTH
;

474 
	`USB_Wrôe
(
pCœss
->
pUsb
,0,&
m
,(m),0,0);

476 if(
pSëup
->
wIndex
==0x0476)

478 
m
=
PACKET_LENGTH
;

479 
	`USB_Wrôe
(
pCœss
->
pUsb
,0,&
m
,(m),0,0);

484 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

487 if(
ty≥
==0)

489 
	`STD_Reque°H™dÀr
(
pCœss
);

491 
	`USB_SèŒ
(
pCœss
->
pUsb
, 0);

492 
	}
}

	@usb/standard.h

3 #i‚de‡
_STANDARD_H


4 
	#_STANDARD_H


	)

16 
	#SELF_POWERED
 (1<<0)

	)

19 
	#REMOTE_WAKEUP
 (1<<1)

	)

33 c⁄° 
S_usb_devi˚_des¸ùt‹
 *
	mpDevi˚
;

35 c⁄° 
S_usb_c⁄figuøti⁄_des¸ùt‹
 *
	mpC⁄figuøti⁄
;

37 c⁄° **
	mpSåögs
;

39 c⁄° 
S_usb_ídpoöt_des¸ùt‹
 **
	mpEndpoöts
;

40 #i‡
deföed
(
HIGHSPEED
)

42 c⁄° 
S_usb_devi˚_quÆifõr_des¸ùt‹
 *
	mpQuÆifõr
;

44 c⁄° 
S_usb_c⁄figuøti⁄_des¸ùt‹
 *
	mpOthîS≥edC⁄figuøti⁄
;

47 } 
	tS_°d_des¸ùt‹s
;

57 
S_usb
 *
	mpUsb
;

59 
S_°d_des¸ùt‹s
 *
	mpDes¸ùt‹s
;

62 
	mwDevi˚Sètus
;

64 
	mwD©a
;

66 } 
	tS_°d_˛ass
;

72 
STD_Reque°H™dÀr
(
S_°d_˛ass
 *
pCœss
);

75 
AT9261_UDP_REQUEST_HANDLE
(
S_°d_˛ass
 *
pCœss
);

76 
	#PACKET_LENGTH
 4096

	)

78 * 
AT9261_UDP_IN_BUFFER
;

79 vﬁ©ûê
AT9261_UDP_IN_BUFFER_LENGTH
;

80 * 
AT9261_UDP_OUT_BUFFER
;

81 vﬁ©ûê
AT9261_UDP_OUT_BUFFER_LENGTH
;

82 
UDP_Disc⁄√˘
(c⁄° 
S_usb
 *
pUsb
);

	@usb/udp.c

7 
	~<löux/kî√l.h
>

8 
	~<löux/moduÀ.h
>

9 
	~<löux/°ddef.h
>

10 
	~"comm⁄.h
"

14 
	~"usb.h
"

16 #ifde‡
UDP


18 
	#UDP_STATE_SHOULD_RECONNECT
 0x10000000

	)

19 
	#UDP_EPTYPE_INDEX
 8

	)

20 
	#UDP_EPDIR_INDEX
 10

	)

22 
	#ISR_MASK
 0x00003FFF

	)

31 
	mídpoötSèãDißbÀd
,

32 
	mídpoötSèãIdÀ
,

33 
	mídpoötSèãWrôe
,

34 
	mídpoötSèãRód
,

35 
	mídpoötSèãHÆãd


37 } 
	tEndpoötSèã_t
;

47 
	#UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
dFœgs
Ë{ \

	)

48 !
ISCLEARED
(
UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_CSR
[
bEndpoöt
], 
dFœgs
)) \

49 
CLEAR
(
UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_CSR
[
bEndpoöt
], 
dFœgs
); \

56 
	#UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
dFœgs
Ë{ \

	)

57 
ISCLEARED
(
UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_CSR
[
bEndpoöt
], 
dFœgs
)) \

58 
SET
(
UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_CSR
[
bEndpoöt
], 
dFœgs
); \

73 
__ölöe
 
AT91PS_UDP
 
	$UDP_GëDrivîI¡îÁ˚
(c⁄° 
S_usb
 *
pUsb
)

75  (
AT91PS_UDP
Ë
pUsb
->
pDrivî
->
pI¡îÁ˚
;

76 
	}
}

84 
__ölöe
 
	$UDP_E«bÀMCK
(c⁄° 
S_usb
 *
pUsb
)

86 
AT91C_BASE_PMC
->
PMC_PCER
 = 1 << 
	`USB_GëDrivîID
(
pUsb
);

87 
	}
}

95 
__ölöe
 
	$UDP_DißbÀMCK
(c⁄° 
S_usb
 *
pUsb
)

97 
AT91C_BASE_PMC
->
PMC_PCDR
 = 1 << 
	`USB_GëDrivîID
(
pUsb
);

98 
	}
}

106 
__ölöe
 
	$UDP_E«bÀUDPCK
(c⁄° 
S_usb
 *
pUsb
)

108 
	`SET
(
AT91C_BASE_PMC
->
PMC_SCER
, 
	`USB_GëDrivîPMC
(
pUsb
));

109 
	}
}

117 
__ölöe
 
	$UDP_DißbÀUDPCK
(c⁄° 
S_usb
 *
pUsb
)

119 
	`SET
(
AT91C_BASE_PMC
->
PMC_SCDR
, 
	`USB_GëDrivîPMC
(
pUsb
));

120 
	}
}

128 
__ölöe
 
	$UDP_E«bÀTøns˚ivî
(c⁄° 
S_usb
 *
pUsb
)

130 
	`CLEAR
(
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_TXVC
, 
AT91C_UDP_TXVDIS
);

131 
	}
}

139 
__ölöe
 
	$UDP_DißbÀTøns˚ivî
(c⁄° 
S_usb
 *
pUsb
)

141 
	`SET
(
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_TXVC
, 
AT91C_UDP_TXVDIS
);

142 
	}
}

152 
__ölöe
 
	$UDP_EndOfTøns„r
(
S_usb_ídpoöt
 *
pEndpoöt
,

153 
bSètus
)

155 i‡((
pEndpoöt
->
dSèã
 =
ídpoötSèãWrôe
)

156 || (
pEndpoöt
->
dSèã
 =
ídpoötSèãRód
)) {

160 
pEndpoöt
->
dSèã
 = 
ídpoötSèãIdÀ
;

163 i‡(
pEndpoöt
->
fCÆlback
 != 0) {

165 
pEndpoöt
->
	`fCÆlback
((ËpEndpoöt->
pArgumít
,

166 (Ë
bSètus
,

167 
pEndpoöt
->
dByãsTøns„ºed
,

168 
pEndpoöt
->
dByãsRemaöög


169 + 
pEndpoöt
->
dByãsBuf„ªd
);

172 
	}
}

181 
	$UDP_CÀ¨RXFœg
(c⁄° 
S_usb
 * 
pUsb
,

182 
bEndpoöt
)

184 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

187 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
pEndpoöt
->
dFœg
);

190 i‡(
pEndpoöt
->
dFœg
 =
AT91C_UDP_RX_DATA_BK0
) {

192 i‡(
pEndpoöt
->
dNumFIFO
 > 1) {

195 
pEndpoöt
->
dFœg
 = 
AT91C_UDP_RX_DATA_BK1
;

200 
pEndpoöt
->
dFœg
 = 
AT91C_UDP_RX_DATA_BK0
;

202 
	}
}

212 
	$UDP_WrôePaylﬂd
(c⁄° 
S_usb
 * 
pUsb
,

213 
bEndpoöt
)

215 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

216 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

217 
dByãs
;

218 
dCå
;

222 
dByãs
 = 
	`mö1
(
pEndpoöt
->
wMaxPackëSize
,ÖEndpoöt->
dByãsRemaöög
);

225 
dCå
 = 0; dCå < 
dByãs
; dCtr++) {

227 
pI¡îÁ˚
->
UDP_FDR
[
bEndpoöt
] = *(
pEndpoöt
->
pD©a
);

229 
pEndpoöt
->
pD©a
++;

233 
pEndpoöt
->
dByãsBuf„ªd
 +
dByãs
;

234 
pEndpoöt
->
dByãsRemaöög
 -
dByãs
;

236  
dByãs
;

237 
	}
}

248 
	$UDP_GëPaylﬂd
(c⁄° 
S_usb
 * 
pUsb
,

249 
bEndpoöt
,

250 
wPackëSize
)

252 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

253 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

254 
dByãs
;

255 
dCå
;

259 
dByãs
 = 
	`mö1
(
pEndpoöt
->
dByãsRemaöög
, 
wPackëSize
);

262 
dCå
 = 0; dCå < 
dByãs
; dCtr++) {

263 *
pEndpoöt
->
pD©a
 = (Ë
pI¡îÁ˚
->
UDP_FDR
[
bEndpoöt
];

265 
pEndpoöt
->
pD©a
++;

269 
pEndpoöt
->
dByãsRemaöög
 -
dByãs
;

270 
pEndpoöt
->
dByãsTøns„ºed
 +
dByãs
;

271 
pEndpoöt
->
dByãsBuf„ªd
 +
wPackëSize
 - 
dByãs
;

273  
dByãs
;

274 
	}
}

276 
g_míuzzz
;

283 
	$UDP_GëSëup
(
S_usb
 c⁄° *
pUsb
)

285 *
pD©a
 = (*Ë
	`USB_GëSëup
(
pUsb
);

286 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

287 
dCå
;

292 
dCå
 = 0; dCtr < 8; dCtr++) {

294 *
pD©a
 = (Ë
pI¡îÁ˚
->
UDP_FDR
[0];

296 
pD©a
++;

303 
	}
}

310 
	$UDP_Re£tEndpoöts
(c⁄° 
S_usb
 *
pUsb
)

312 
S_usb_ídpoöt
 *
pEndpoöt
;

313 
bEndpoöt
;

316 
bEndpoöt
 = 0; bEndpoöà< 
pUsb
->
dNumEndpoöts
; bEndpoint++) {

318 
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

321 
pEndpoöt
->
pD©a
 = 0;

322 
pEndpoöt
->
dByãsRemaöög
 = 0;

323 
pEndpoöt
->
dByãsTøns„ºed
 = 0;

324 
pEndpoöt
->
dByãsBuf„ªd
 = 0;

325 
pEndpoöt
->
fCÆlback
 = 0;

326 
pEndpoöt
->
pArgumít
 = 0;

329 
pEndpoöt
->
dFœg
 = 
AT91C_UDP_RX_DATA_BK0
;

330 
pEndpoöt
->
dSèã
 = 
ídpoötSèãDißbÀd
;

332 
	}
}

339 
	$UDP_DißbÀEndpoöts
(c⁄° 
S_usb
 *
pUsb
)

341 
S_usb_ídpoöt
 *
pEndpoöt
;

342 
bEndpoöt
;

346 
bEndpoöt
 = 1; bEndpoöà< 
pUsb
->
dNumEndpoöts
; bEndpoint++) {

348 
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

349 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_RESET
);

350 
pEndpoöt
->
dSèã
 = 
ídpoötSèãDißbÀd
;

352 
	}
}

354 
S_usb_ídpoöt
 * 
	$USB_GëEndpoöt
(c⁄° 
S_usb
 *
pUsb
,

355 
bEndpoöt
)

357 i‡(
bEndpoöt
 >
pUsb
->
dNumEndpoöts
) {

363  &
pUsb
->
pEndpoöts
[
bEndpoöt
];

365 
	}
}

372 
S_usb_ªque°
 * 
	$USB_GëSëup
(c⁄° 
S_usb
 *
pUsb
)

374  
pUsb
->
pSëup
;

375 
	}
}

383 * 
	$USB_GëDrivîI¡îÁ˚
(c⁄° 
S_usb
 *
pUsb
) {

385  
pUsb
->
pDrivî
->
pI¡îÁ˚
;

386 
	}
}

393 
	$USB_GëDrivîID
(c⁄° 
S_usb
 *
pUsb
) {

395  
pUsb
->
pDrivî
->
dID
;

396 
	}
}

404 
	$USB_GëDrivîPMC
(c⁄° 
S_usb
 *
pUsb
) {

406  
pUsb
->
pDrivî
->
dPMC
;

407 
	}
}

413 
ölöe
 
	$USB_InôCÆlback
(c⁄° 
S_usb
 *
pUsb
)

415 i‡(
pUsb
->
pCÆlbacks
->
öô
 != 0) {

417 
pUsb
->
pCÆlbacks
->
	`öô
(pUsb);

419 
	}
}

422 
ölöe
 
	$USB_Re£tCÆlback
(c⁄° 
S_usb
 *
pUsb
)

424 i‡(
pUsb
->
pCÆlbacks
->
ª£t
 != 0) {

426 
pUsb
->
pCÆlbacks
->
	`ª£t
(pUsb);

428 
	}
}

431 
ölöe
 
	$USB_Su•ídCÆlback
(c⁄° 
S_usb
 *
pUsb
)

433 i‡(
pUsb
->
pCÆlbacks
->
su•íd
 != 0) {

435 
pUsb
->
pCÆlbacks
->
	`su•íd
(pUsb);

437 
	}
}

440 
ölöe
 
	$USB_ResumeCÆlback
(c⁄° 
S_usb
 *
pUsb
)

442 i‡(
pUsb
->
pCÆlbacks
->
ªsume
 != 0) {

444 
pUsb
->
pCÆlbacks
->
	`ªsume
(pUsb);

446 
	}
}

449 
ölöe
 
	$USB_SèπOfFømeCÆlback
(c⁄° 
S_usb
 *
pUsb
)

451 
pUsb
->
pCÆlbacks
->
	`°¨tOfFøme
(pUsb);

452 
	}
}

455 
ölöe
 
	$USB_NewReque°CÆlback
(c⁄° 
S_usb
 *
pUsb
)

457 i‡(
pUsb
->
pCÆlbacks
->
√wReque°
 != 0) {

459 
pUsb
->
pCÆlbacks
->
	`√wReque°
(pUsb);

461 
	}
}

471 
	$UDP_EndpoötH™dÀr
(c⁄° 
S_usb
 *
pUsb
, 
bEndpoöt
)

473 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

474 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

475 
dSètus
 = 
pI¡îÁ˚
->
UDP_CSR
[
bEndpoöt
];

480 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_TXCOMP
)) {

484 i‡(
pEndpoöt
->
dSèã
 =
ídpoötSèãWrôe
) {

487 i‡((
pEndpoöt
->
dByãsBuf„ªd
 <ÖEndpoöt->
wMaxPackëSize
)

489 (!
	`ISCLEARED
(
dSètus
, 
AT91C_UDP_EPTYPE
)

490 && (
pEndpoöt
->
dByãsRemaöög
 == 0)

491 && (
pEndpoöt
->
dByãsBuf„ªd
 =pEndpoöt->
wMaxPackëSize
))) {

494 
pEndpoöt
->
dByãsTøns„ºed
 +pEndpoöt->
dByãsBuf„ªd
;

495 
pEndpoöt
->
dByãsBuf„ªd
 = 0;

498 i‡(!
	`ISCLEARED
(
dSètus
, 
AT91C_UDP_EPTYPE
)) {

500 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 1 << 
bEndpoöt
);

503 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_SUCCESS
);

509 
pEndpoöt
->
dByãsTøns„ºed
 +pEndpoöt->
wMaxPackëSize
;

510 
pEndpoöt
->
dByãsBuf„ªd
 -pEndpoöt->
wMaxPackëSize
;

513 i‡(
pEndpoöt
->
dNumFIFO
 == 1) {

516 
	`UDP_WrôePaylﬂd
(
pUsb
, 
bEndpoöt
);

517 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_TXPKTRDY
);

522 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_TXPKTRDY
);

523 
	`UDP_WrôePaylﬂd
(
pUsb
, 
bEndpoöt
);

529 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_TXCOMP
);

532 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_RX_DATA_BK0
)

533 || 
	`ISSET
(
dSètus
, 
AT91C_UDP_RX_DATA_BK1
)) {

537 i‡(
pEndpoöt
->
dSèã
 !
ídpoötSèãRód
&&pEndpoöt->dSèã!=
ídpoötSèãIdÀ
)

541 i‡(
	`ISCLEARED
(
dSètus
, 
AT91C_UDP_EPTYPE
)

542 && 
	`ISCLEARED
(
dSètus
, 0xFFFF0000)) {

547 
	`UDP_CÀ¨RXFœg
(
pUsb
, 
bEndpoöt
);

549 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_SUCCESS
);

551 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_FORCESTALL
)) {

555 
	`UDP_CÀ¨RXFœg
(
pUsb
, 
bEndpoöt
);

561 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 1 << 
bEndpoöt
);

568 
wPackëSize
 = (Ë(
dSètus
 >> 16);

571 
	`UDP_GëPaylﬂd
(
pUsb
, 
bEndpoöt
, 
wPackëSize
);

572 
	`UDP_CÀ¨RXFœg
(
pUsb
, 
bEndpoöt
);

574 i‡((
pEndpoöt
->
dByãsRemaöög
 == 0)

575 || (
wPackëSize
 < 
pEndpoöt
->
wMaxPackëSize
)) {

578 i‡(!
	`ISCLEARED
(
dSètus
, 
AT91C_UDP_EPTYPE
)) {

580 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 1 << 
bEndpoöt
);

583 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_SUCCESS
);

588 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_RXSETUP
)) {

594 i‡((
pEndpoöt
->
dSèã
 =
ídpoötSèãWrôe
)

595 || (
pEndpoöt
->
dSèã
 =
ídpoötSèãRód
)) {

597 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_SUCCESS
);

601 
	`UDP_GëSëup
(
pUsb
);

604 i‡(
	`USB_GëSëup
(
pUsb
)->
bmReque°Ty≥
 & 0x80) {

606 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_DIR
);

609 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_RXSETUP
);

612 
	`USB_NewReque°CÆlback
(
pUsb
);

615 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_STALLSENT
)) {

619 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_STALLSENT
);

622 i‡(
pEndpoöt
->
dSèã
 !
ídpoötSèãHÆãd
) {

624 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_FORCESTALL
);

628 
	}
}

641 
	$UDP_C⁄figuªEndpoöt
(c⁄° 
S_usb
 *
pUsb
,

642 c⁄° 
S_usb_ídpoöt_des¸ùt‹
 *
pEpDesc
)

644 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

645 
S_usb_ídpoöt
 *
pEndpoöt
;

646 
bEndpoöt
;

647 
bTy≥
;

648 
isINEndpoöt
;

649 
dFœgs
;

652 i‡(
pEpDesc
 == 0) {

654 
bEndpoöt
 = 0;

655 
bTy≥
 = 
ENDPOINT_TYPE_CONTROL
;

656 
isINEndpoöt
 = 
Ál£
;

660 
bEndpoöt
 = (Ë(
pEpDesc
->
bEndpoötAddªss
 & 0x7);

661 
bTy≥
 = (Ë(
pEpDesc
->
bmAâribuãs
 & 0x3);

663 i‡(
	`ISSET
(
pEpDesc
->
bEndpoötAddªss
, 1 << 7)) {

665 
isINEndpoöt
 = 
åue
;

669 
isINEndpoöt
 = 
Ál£
;

674 
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

675 i‡(
pEndpoöt
 == 0) {

677  
Ál£
;

681 i‡(
pEpDesc
 != 0) {

683 
pEndpoöt
->
wMaxPackëSize
 = 
pEpDesc
->wMaxPacketSize;

687 
pEndpoöt
->
wMaxPackëSize
 = 
USB_ENDPOINT0_MAXPACKETSIZE
;

692 i‡((
pEndpoöt
->
dSèã
 =
ídpoötSèãRód
)

693 || (
pEndpoöt
->
dSèã
 =
ídpoötSèãWrôe
)) {

695 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_RESET
);

699 
pEndpoöt
->
dSèã
 = 
ídpoötSèãIdÀ
;

702 
	`SET
(
pI¡îÁ˚
->
UDP_RSTEP
, 1 << 
bEndpoöt
);

703 
	`CLEAR
(
pI¡îÁ˚
->
UDP_RSTEP
, 1 << 
bEndpoöt
);

706 
dFœgs
 = 
AT91C_UDP_EPEDS
;

707 
	`SET
(
dFœgs
, 
bTy≥
 << 
UDP_EPTYPE_INDEX
);

709 i‡(
isINEndpoöt
) {

711 
	`SET
(
dFœgs
, 1 << 
UDP_EPDIR_INDEX
);

714 i‡(
bTy≥
 =
ENDPOINT_TYPE_CONTROL
)

717 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 1 << 
bEndpoöt
);

721 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
dFœgs
);

723  
åue
;

724 
	}
}

733 
	$UDP_H™dÀr
(c⁄° 
S_usb
 *
pUsb
)

735 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

736 
dSètus
;

737 
bEndpoöt
;

739 
dSètus
 = 
pI¡îÁ˚
->
UDP_ISR
 &ÖI¡îÁ˚->
UDP_IMR
 & 
ISR_MASK
;

742 
dSètus
 != 0) {

745 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_SOFINT
)) {

748 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
, 
AT91C_UDP_SOFINT
);

749 
	`CLEAR
(
dSètus
, 
AT91C_UDP_SOFINT
);

753 i‡(
dSètus
 =
AT91C_UDP_RXSUSP
) {

756 i‡(!
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_SUSPENDED
)) {

764 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM
);

767 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
, 
AT91C_UDP_RXSUSP
);

769 
	`SET
(*(
pUsb
->
pSèã
), 
USB_STATE_SUSPENDED
);

770 
	`UDP_DißbÀTøns˚ivî
(
pUsb
);

771 
	`UDP_DißbÀMCK
(
pUsb
);

772 
	`UDP_DißbÀUDPCK
(
pUsb
);

775 
	`USB_Su•ídCÆlback
(
pUsb
);

780 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_WAKEUP
)

781 || 
	`ISSET
(
dSètus
, 
AT91C_UDP_RXRSM
)) {

784 
	`USB_ResumeCÆlback
(
pUsb
);

792 i‡(
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_SUSPENDED
)) {

795 
	`UDP_E«bÀMCK
(
pUsb
);

796 
	`UDP_E«bÀUDPCK
(
pUsb
);

799 i‡(
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_DEFAULT
)) {

801 
	`UDP_E«bÀTøns˚ivî
(
pUsb
);

804 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_SUSPENDED
);

806 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
,

807 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM
 | 
AT91C_UDP_RXSUSP
);

808 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM
);

811 i‡(
	`ISSET
(
dSètus
, 
AT91C_UDP_ENDBUSRES
)) {

819 
	`SET
(*(
pUsb
->
pSèã
), 
USB_STATE_DEFAULT
);

820 
	`UDP_E«bÀTøns˚ivî
(
pUsb
);

823 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_ADDRESS
 | 
USB_STATE_CONFIGURED
);

824 
	`UDP_Re£tEndpoöts
(
pUsb
);

825 
	`UDP_DißbÀEndpoöts
(
pUsb
);

826 
	`UDP_C⁄figuªEndpoöt
(
pUsb
, 0);

829 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
,

830 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM
 | 
AT91C_UDP_RXSUSP
);

833 i‡(
pUsb
->
pCÆlbacks
->
°¨tOfFøme
 != 0) {

835 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 
AT91C_UDP_SOFINT
);

839 
	`USB_Re£tCÆlback
(
pUsb
);

842 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
, 
AT91C_UDP_ENDBUSRES
);

847 
dSètus
 != 0) {

850 
bEndpoöt
 = 
	`œ°SëBô
(
dSètus
);

851 
	`UDP_EndpoötH™dÀr
(
pUsb
, 
bEndpoöt
);

858 
	`CLEAR
(
dSètus
, 1 << 
bEndpoöt
);

863 
dSètus
 = 
pI¡îÁ˚
->
UDP_ISR
 &ÖI¡îÁ˚->
UDP_IMR
 & 
ISR_MASK
;

866 i‡(!
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_DEFAULT
)) {

868 
dSètus
 &
AT91C_UDP_ENDBUSRES
 | 
AT91C_UDP_SOFINT
;

873 
	}
}

893 
	$UDP_Wrôe
(c⁄° 
S_usb
 *
pUsb
,

894 
bEndpoöt
,

895 c⁄° *
pD©a
,

896 
dLígth
,

897 
CÆlback_f
 
fCÆlback
,

898 *
pArgumít
)

900 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

901 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

904 i‡(
pEndpoöt
->
dSèã
 !
ídpoötSèãIdÀ
) {

906  
USB_STATUS_LOCKED
;

911 
pEndpoöt
->
pD©a
 = (*)ÖData;

912 
pEndpoöt
->
dByãsRemaöög
 = 
dLígth
;

913 
pEndpoöt
->
dByãsBuf„ªd
 = 0;

914 
pEndpoöt
->
dByãsTøns„ºed
 = 0;

915 
pEndpoöt
->
fCÆlback
 = fCallback;

916 
pEndpoöt
->
pArgumít
 =ÖArgument;

919 
pEndpoöt
->
dSèã
 = 
ídpoötSèãWrôe
;

920 
	`UDP_WrôePaylﬂd
(
pUsb
, 
bEndpoöt
);

921 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_TXPKTRDY
);

925 i‡((
pEndpoöt
->
dNumFIFO
 > 1Ë&& (pEndpoöt->
dByãsRemaöög
 > 0)) {

927 
	`UDP_WrôePaylﬂd
(
pUsb
, 
bEndpoöt
);

931 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 1 << 
bEndpoöt
);

933  
USB_STATUS_SUCCESS
;

934 
	}
}

954 
	$UDP_Ród
(c⁄° 
S_usb
 *
pUsb
,

955 
bEndpoöt
,

956 *
pD©a
,

957 
dLígth
,

958 
CÆlback_f
 
fCÆlback
,

959 *
pArgumít
)

961 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

962 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

973 
pEndpoöt
->
dSèã
 = 
ídpoötSèãRód
;

976 
pEndpoöt
->
pD©a
 = (*)ÖData;

977 
pEndpoöt
->
dByãsRemaöög
 = 
dLígth
;

978 
pEndpoöt
->
dByãsBuf„ªd
 = 0;

979 
pEndpoöt
->
dByãsTøns„ºed
 = 0;

980 
pEndpoöt
->
fCÆlback
 = fCallback;

981 
pEndpoöt
->
pArgumít
 =ÖArgument;

984 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 1 << 
bEndpoöt
);

986  
USB_STATUS_SUCCESS
;

987 
	}
}

1002 
	$UDP_HÆt
(c⁄° 
S_usb
 *
pUsb
,

1003 
bEndpoöt
,

1004 
bReque°
)

1006 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1007 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

1010 i‡(
bReque°
 =
USB_CLEAR_FEATURE
) {

1014 
pEndpoöt
->
dSèã
 = 
ídpoötSèãIdÀ
;

1017 
	`UDP_CLEAREPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_FORCESTALL
);

1020 
	`SET
(
pI¡îÁ˚
->
UDP_RSTEP
, 1 << 
bEndpoöt
);

1021 
	`CLEAR
(
pI¡îÁ˚
->
UDP_RSTEP
, 1 << 
bEndpoöt
);

1025 i‡((
bReque°
 =
USB_SET_FEATURE
)

1026 && (
pEndpoöt
->
dSèã
 !
ídpoötSèãHÆãd
)

1027 && (
pEndpoöt
->
dSèã
 !
ídpoötSèãDißbÀd
)) {

1031 
	`UDP_EndOfTøns„r
(
pEndpoöt
, 
USB_STATUS_ABORTED
);

1034 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_FORCESTALL
);

1035 
pEndpoöt
->
dSèã
 = 
ídpoötSèãHÆãd
;

1038 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 1 << 
bEndpoöt
);

1042 i‡(
pEndpoöt
->
dSèã
 =
ídpoötSèãHÆãd
) {

1044  
åue
;

1048  
Ál£
;

1050 
	}
}

1062 
	$UDP_SèŒ
(c⁄° 
S_usb
 *
pUsb
,

1063 
bEndpoöt
)

1065 
S_usb_ídpoöt
 *
pEndpoöt
 = 
	`USB_GëEndpoöt
(
pUsb
, 
bEndpoöt
);

1068 i‡(
pEndpoöt
->
dSèã
 !
ídpoötSèãIdÀ
) {

1071  
USB_STATUS_LOCKED
;

1075 
	`UDP_SETEPFLAGS
(
pUsb
, 
bEndpoöt
, 
AT91C_UDP_FORCESTALL
);

1077  
USB_STATUS_SUCCESS
;

1078 
	}
}

1085 
	$UDP_RemŸeWakeUp
(c⁄° 
S_usb
 *
pUsb
)

1087 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1089 
	`UDP_E«bÀMCK
(
pUsb
);

1090 
	`UDP_E«bÀUDPCK
(
pUsb
);

1091 
	`UDP_E«bÀTøns˚ivî
(
pUsb
);

1095 
	`SET
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 
AT91C_UDP_ESR
);

1097 
	`CLEAR
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 
AT91C_UDP_ESR
);

1098 
	}
}

1107 
	$UDP_Aâach
(c⁄° 
S_usb
 *
pUsb
)

1109 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1113 i‡(!
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_POWERED
))

1123 
	`USB_ResumeCÆlback
(
pUsb
);

1125 
	`UDP_E«bÀMCK
(
pUsb
);

1126 
	`UDP_E«bÀUDPCK
(
pUsb
);

1129 i‡(
	`ISSET
(*(
pUsb
->
pSèã
), 
UDP_STATE_SHOULD_RECONNECT
)) {

1131 
	`USB_C⁄√˘
(
pUsb
);

1132 
	`CLEAR
(*(
pUsb
->
pSèã
), 
UDP_STATE_SHOULD_RECONNECT
);

1136 
	`SET
(
pI¡îÁ˚
->
UDP_ICR
,

1137 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM
 | 
AT91C_UDP_RXSUSP
);

1139 
	`SET
(
pI¡îÁ˚
->
UDP_IER
, 
AT91C_UDP_RXSUSP
);

1142 
	`SET
(*(
pUsb
->
pSèã
), 
USB_STATE_POWERED
);

1156 
	`UDP_E«bÀMCK
(
pUsb
);

1159 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 
AT91C_UDP_WAKEUP
 | 
AT91C_UDP_RXRSM


1160 | 
AT91C_UDP_RXSUSP
 | 
AT91C_UDP_SOFINT
);

1162 
	`UDP_DißbÀEndpoöts
(
pUsb
);

1163 
	`UDP_DißbÀTøns˚ivî
(
pUsb
);

1166 i‡(
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_DEFAULT
)) {

1168 
	`USB_Disc⁄√˘
(
pUsb
);

1169 
	`SET
(*(
pUsb
->
pSèã
), 
UDP_STATE_SHOULD_RECONNECT
);

1172 
	`UDP_DißbÀMCK
(
pUsb
);

1173 
	`UDP_DißbÀUDPCK
(
pUsb
);

1176 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_POWERED
 | 
USB_STATE_DEFAULT


1177 | 
USB_STATE_ADDRESS
 | 
USB_STATE_CONFIGURED
 | 
USB_STATE_SUSPENDED
);

1180 
	`USB_Su•ídCÆlback
(
pUsb
);

1184  
	`ISSET
(
	`USB_GëSèã
(
pUsb
), 
USB_STATE_POWERED
);

1185 
	}
}

1195 
	$UDP_SëAddªss
(
S_usb
 c⁄° *
pUsb
)

1197 
wAddªss
 = 
	`USB_GëSëup
(
pUsb
)->
wVÆue
;

1198 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1202 
	`SET
(
pI¡îÁ˚
->
UDP_FADDR
, 
AT91C_UDP_FEN
 | 
wAddªss
);

1204 i‡(
wAddªss
 == 0) {

1206 
	`SET
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 0);

1209 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_ADDRESS
);

1213 
	`SET
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 
AT91C_UDP_FADDEN
);

1216 
	`SET
(*(
pUsb
->
pSèã
), 
USB_STATE_ADDRESS
);

1218 
	}
}

1228 
	$UDP_SëC⁄figuøti⁄
(
S_usb
 c⁄° *
pUsb
)

1230 
wVÆue
 = 
	`USB_GëSëup
(
pUsb
)->wValue;

1231 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1236 i‡(
wVÆue
 != 0) {

1239 
	`SET
(*(
pUsb
->
pSèã
), 
USB_STATE_CONFIGURED
);

1240 
	`SET
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 
AT91C_UDP_CONFG
);

1245 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_CONFIGURED
);

1246 
	`SET
(
pI¡îÁ˚
->
UDP_GLBSTATE
, 
AT91C_UDP_FADDEN
);

1249 
	`UDP_DißbÀEndpoöts
(
pUsb
);

1251 
	}
}

1258 
	$UDP_C⁄√˘
(c⁄° 
S_usb
 *
pUsb
)

1260 #i‡
	`deföed
(
UDP_INTERNAL_PULLUP
)

1261 
	`SET
(
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_TXVC
, 
AT91C_UDP_PUON
);

1263 #ñi‡
	`deföed
(
UDP_INTERNAL_PULLUP_BY_MATRIX
)

1264 
AT91C_BASE_MATRIX
->
MATRIX_USBPCR
 |
AT91C_MATRIX_USBPCR_PUON
;

1268 
	}
}

1276 
	$UDP_Disc⁄√˘
(c⁄° 
S_usb
 *
pUsb
)

1278 #i‡
	`deföed
(
UDP_INTERNAL_PULLUP
)

1279 
	`CLEAR
(
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
)->
UDP_TXVC
, 
AT91C_UDP_PUON
);

1281 #ñi‡
	`deföed
(
UDP_INTERNAL_PULLUP_BY_MATRIX
)

1282 
AT91C_BASE_MATRIX
->
MATRIX_USBPCR
 &~
AT91C_MATRIX_USBPCR_PUON
;

1287 
	`CLEAR
(*(
pUsb
->
pSèã
), 
USB_STATE_DEFAULT
);

1288 
	}
}

1299 
	$UDP_Inô
(c⁄° 
S_usb
 *
pUsb
)

1301 
dIndex
;

1302 
AT91PS_UDP
 
pI¡îÁ˚
 = 
	`UDP_GëDrivîI¡îÁ˚
(
pUsb
);

1306 
dIndex
 = 0; dIndex < 
pUsb
->
dNumEndpoöts
; dIndex++) {

1308 
pUsb
->
pEndpoöts
[
dIndex
].
dFœg
 = 
AT91C_UDP_RX_DATA_BK0
;

1311 
	`UDP_Disc⁄√˘
(
pUsb
);

1314 *(
pUsb
->
pSèã
Ë
USB_STATE_ATTACHED
;

1317 
	`UDP_E«bÀMCK
(
pUsb
);

1318 
	`SET
(
pI¡îÁ˚
->
UDP_IDR
, 
AT91C_UDP_RXRSM
);

1319 
	`UDP_C⁄√˘
(
pUsb
);

1320 
	`UDP_DißbÀTøns˚ivî
(
pUsb
);

1321 
	`UDP_DißbÀMCK
(
pUsb
);

1322 
	`UDP_Disc⁄√˘
(
pUsb
);

1325 
	`USB_InôCÆlback
(
pUsb
);

1326 
	}
}

1334 c⁄° 
S_drivî_mëhods
 
sUDPMëhods
 = {

1336 
UDP_Inô
,

1337 
UDP_Wrôe
,

1338 
UDP_Ród
,

1339 
UDP_SèŒ
,

1340 
UDP_HÆt
,

1341 
UDP_RemŸeWakeUp
,

1342 
UDP_C⁄figuªEndpoöt
,

1343 
UDP_Aâach
,

1344 
UDP_SëAddªss
,

1345 
UDP_SëC⁄figuøti⁄
,

1346 
UDP_H™dÀr
,

1347 
UDP_C⁄√˘
,

1348 
UDP_Disc⁄√˘


1373 
	$USB_Wrôe
(c⁄° 
S_usb
 *
pUsb
,

1374 
bEndpoöt
,

1375 c⁄° *
pD©a
,

1376 
dLígth
,

1377 
CÆlback_f
 
fCÆlback
,

1378 *
pArgumít
)

1380  
pUsb
->
pDrivî
->
pMëhods
->
	`wrôe
(pUsb,

1381 
bEndpoöt
,

1382 
pD©a
,

1383 
dLígth
,

1384 
fCÆlback
,

1385 
pArgumít
);

1386 
	}
}

1402 
	$USB_SídZLP0
(c⁄° 
S_usb
 *
pUsb
,

1403 
CÆlback_f
 
fCÆlback
,

1404 *
pArgumít
) {

1406  
	`USB_Wrôe
(
pUsb
, 0, 0, 0, 
fCÆlback
, 
pArgumít
);

1407 
	}
}

1428 
	$USB_Ród
(c⁄° 
S_usb
 *
pUsb
,

1429 
bEndpoöt
,

1430 *
pD©a
,

1431 
dLígth
,

1432 
CÆlback_f
 
fCÆlback
,

1433 *
pArgumít
)

1435  
pUsb
->
pDrivî
->
pMëhods
->
	`ªad
(pUsb,

1436 
bEndpoöt
,

1437 
pD©a
,

1438 
dLígth
,

1439 
fCÆlback
,

1440 
pArgumít
);

1441 
	}
}

1456 
	$USB_SèŒ
(c⁄° 
S_usb
 *
pUsb
, 
bEndpoöt
)

1458  
pUsb
->
pDrivî
->
pMëhods
->
	`°Æl
’Usb, 
bEndpoöt
);

1459 
	}
}

1466 
	$USB_RemŸeWakeUp
(c⁄° 
S_usb
 *
pUsb
)

1468 
pUsb
->
pDrivî
->
pMëhods
->
	`ªmŸeWakeUp
(pUsb);

1469 
	}
}

1482 
	$USB_HÆt
(c⁄° 
S_usb
 *
pUsb
,

1483 
bEndpoöt
,

1484 
bReque°
)

1486  
pUsb
->
pDrivî
->
pMëhods
->
	`hÆt
(pUsb,

1487 ()(
bEndpoöt
&0x7F),

1488 
bReque°
);

1489 
	}
}

1501 
	$USB_SëAddªss
(c⁄° 
S_usb
 *
pUsb
)

1503 
pUsb
->
pDrivî
->
pMëhods
->
	`£tAddªss
(pUsb);

1504 
	}
}

1518 
	$USB_SëC⁄figuøti⁄
(c⁄° 
S_usb
 *
pUsb
)

1520 
pUsb
->
pDrivî
->
pMëhods
->
	`£tC⁄figuøti⁄
(pUsb);

1521 
	}
}

1536 
	$USB_C⁄figuªEndpoöt
(c⁄° 
S_usb
 *
pUsb
,

1537 c⁄° 
S_usb_ídpoöt_des¸ùt‹
 *
pEpDesc
)

1539  
pUsb
->
pDrivî
->
pMëhods
->
	`c⁄figuªEndpoöt
’Usb, 
pEpDesc
);

1540 
	}
}

1557 
	$USB_H™dÀr
(c⁄° 
S_usb
 * 
pUsb
)

1559 
pUsb
->
pDrivî
->
pMëhods
->
	`h™dÀr
(pUsb);

1560 
	}
}

1580 
	$USB_Aâach
(c⁄° 
S_usb
 *
pUsb
)

1582  
pUsb
->
pDrivî
->
pMëhods
->
	`©èch
(pUsb);

1583 
	}
}

1593 
	$USB_C⁄√˘
(c⁄° 
S_usb
 *
pUsb
)

1595 
pUsb
->
pDrivî
->
pMëhods
->
	`c⁄√˘
(pUsb);

1596 
	}
}

1606 
	$USB_Disc⁄√˘
(c⁄° 
S_usb
 *
pUsb
)

1608 
pUsb
->
pDrivî
->
pMëhods
->
	`disc⁄√˘
(pUsb);

1609 
	}
}

1620 
	$USB_Inô
(c⁄° 
S_usb
 *
pUsb
)

1622 
pUsb
->
pDrivî
->
pMëhods
->
	`öô
(pUsb);

1623 
	}
}

1624 
	$USB_GëSèã
(c⁄° 
S_usb
 *
pUsb
)

1626  (*(
pUsb
->
pSèã
) & 0x0000FFFF);

1627 
	}
}

	@usb/usb.h

3 #i‚de‡
_USB_H


4 
	#_USB_H


	)

52 
	#USB_GET_STATUS
 0x00

	)

57 
	#USB_CLEAR_FEATURE
 0x01

	)

65 
	#USB_SET_FEATURE
 0x03

	)

71 
	#USB_SET_ADDRESS
 0x05

	)

75 
	#USB_GET_DESCRIPTOR
 0x06

	)

80 
	#USB_SET_DESCRIPTOR
 0x07

	)

84 
	#USB_GET_CONFIGURATION
 0x08

	)

88 
	#USB_SET_CONFIGURATION
 0x09

	)

92 
	#USB_GET_INTERFACE
 0x0A

	)

96 
	#USB_SET_INTERFACE
 0x0B

	)

100 
	#USB_SYNCH_FRAME
 0x0C

	)

118 
	#USB_ENDPOINT_HALT
 0x00

	)

121 
	#USB_DEVICE_REMOTE_WAKEUP
 0x01

	)

124 
	#USB_TEST_MODE
 0x02

	)

140 
	#TEST_J
 0x01

	)

143 
	#TEST_K
 0x02

	)

147 
	#TEST_SEO_NAK
 0x03

	)

150 
	#TEST_PACKET
 0x04

	)

153 
	#TEST_FORCE_ENABLE
 0x05

	)

178 
	#USB_DEVICE_DESCRIPTOR
 0x01

	)

181 
	#USB_CONFIGURATION_DESCRIPTOR
 0x02

	)

184 
	#USB_STRING_DESCRIPTOR
 0x03

	)

187 
	#USB_INTERFACE_DESCRIPTOR
 0x04

	)

190 
	#USB_ENDPOINT_DESCRIPTOR
 0x05

	)

193 
	#USB_DEVICE_QUALIFIER_DESCRIPTOR
 0x06

	)

196 
	#USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR
 0x07

	)

199 
	#USB_INTERFACE_POWER_DESCRIPTOR
 0x08

	)

215 
	#USB_ENDPOINT_OUT
 (0 << 7)

	)

218 
	#USB_ENDPOINT_IN
 (1 << 7)

	)

227 
	#ENDPOINT_TYPE_CONTROL
 0x00

	)

230 
	#ENDPOINT_TYPE_ISOCHRONOUS
 0x01

	)

233 
	#ENDPOINT_TYPE_BULK
 0x02

	)

236 
	#ENDPOINT_TYPE_INTERRUPT
 0x03

	)

248 
	#USB_STANDARD_REQUEST
 0x00

	)

251 
	#USB_CLASS_REQUEST
 0x01

	)

254 
	#USB_VENDOR_REQUEST
 0x02

	)

257 
	#USB_REQUEST_TYPE
(
pSëup
Ë(’Sëup->
bmReque°Ty≥
 & 0x60Ë>> 5)

	)

260 
	#USB_REQUEST_RECIPIENT
(
pSëup
Ë’Sëup->
bmReque°Ty≥
 & 0x1F)

	)

263 
	#USB_RECIPIENT_DEVICE
 0x00

	)

266 
	#USB_RECIPIENT_INTERFACE
 0x01

	)

269 
	#USB_RECIPIENT_ENDPOINT
 0x02

	)

284 
	#USB_ENDPOINT_NUMBER
(
bEndpoötAddªss
Ë(bEndpoötAddªs†& 0x0F)

	)

287 
	#USB_ENDPOINT_DIRECTION
(
bEndpoötAddªss
Ë(bEndpoötAddªs†& 0x80)

	)

303 
	#USB_CLASS_DEVICE
 0x00

	)

306 
	#USB_CLASS_AUDIO
 0x01

	)

309 
	#USB_CLASS_COMMUNICATION
 0x02

	)

312 
	#USB_CLASS_HID
 0x03

	)

315 
	#USB_CLASS_PHYSICAL
 0x05

	)

318 
	#USB_CLASS_STILL_IMAGING
 0x06

	)

321 
	#USB_CLASS_PRINTER
 0x07

	)

324 
	#USB_CLASS_MASS_STORAGE
 0x08

	)

327 
	#USB_CLASS_HUB
 0x09

	)

330 
	#USB_CLASS_CDC_DATA
 0x0A

	)

333 
	#USB_CLASS_SMARTCARDS
 0x0B

	)

336 
	#USB_CLASS_CONTENT_SECURITY
 0x0D

	)

339 
	#USB_CLASS_VIDEO
 0x0E

	)

342 
	#USB_CLASS_DIAGNOSTIC_DEVICE
 0xDC

	)

345 
	#USB_CLASS_WIRELESS_CONTROLLER
 0xE0

	)

348 
	#USB_CLASS_MISCELLANEOUS
 0xEF

	)

351 
	#USB_CLASS_APPLICATION_SPECIFIC
 0xFE

	)

354 
	#USB_CLASS_VENDOR_SPECIFIC
 0xFF

	)

369 
	#USB2_00
 0x0200

	)

370 
	#USB1_10
 0x0110

	)

377 
	#USB_VENDOR_ATMEL
 0x03EB

	)

394 
	#USB_CONFIG_BUS_NOWAKEUP
 0x80

	)

397 
	#USB_CONFIG_SELF_NOWAKEUP
 0xC0

	)

400 
	#USB_CONFIG_BUS_WAKEUP
 0xA0

	)

403 
	#USB_CONFIG_SELF_WAKEUP
 0xE0

	)

410 
	#USB_POWER_MA
(
powî
Ë’owî/2)

	)

428 
	#USB_LANGUAGE_ENGLISH_US
 0x0409

	)

439 
	#USB_UNICODE
(
a
Ë◊), 0x00

	)

443 
	#USB_STRING_DESCRIPTOR_SIZE
(
size
Ë((sizê* 2Ë+ 2)

	)

452 
	#USB_STATUS_SUCCESS
 0

	)

456 
	#USB_STATUS_LOCKED
 1

	)

459 
	#USB_STATUS_ABORTED
 2

	)

462 
	#USB_STATUS_RESET
 3

	)

473 
	#USB_STATE_ATTACHED
 (1 << 0)

	)

476 
	#USB_STATE_POWERED
 (1 << 1)

	)

479 
	#USB_STATE_DEFAULT
 (1 << 2)

	)

482 
	#USB_STATE_ADDRESS
 (1 << 3)

	)

485 
	#USB_STATE_CONFIGURED
 (1 << 4)

	)

488 
	#USB_STATE_SUSPENDED
 (1 << 5)

	)

504 
	mbmReque°Ty≥
:8;

505 
	mbReque°
:8;

506 
	mwVÆue
:16;

507 
	mwIndex
:16;

508 
	mwLígth
:16;

510 } 
	tS_usb_ªque°
;

521 
	mbLígth
;

522 
	mbDes¸ùt‹Ty≥
;

523 
	mbscUSB
;

524 
	mbDevi˚Cœss
;

525 
	mbDevi˚SubCœss
;

526 
	mbDevi˚PrŸocﬁ
;

527 
	mbMaxPackëSize0
;

528 
	midVíd‹
;

529 
	midProdu˘
;

530 
	mbcdDevi˚
;

531 
	miM™uÁ˘uªr
;

532 
	miProdu˘
;

533 
	miSîülNumbî
;

534 
	mbNumC⁄figuøti⁄s
;

536 } 
	tS_usb_devi˚_des¸ùt‹
;

547 
	mbLígth
;

548 
	mbDes¸ùt‹Ty≥
;

549 
	mwTŸÆLígth
;

551 
	mbNumI¡îÁ˚s
;

553 
	mbC⁄figuøti⁄VÆue
;

556 
	miC⁄figuøti⁄
;

558 
	mbmAâibuãs
;

559 
	mbMaxPowî
;

561 } 
	tS_usb_c⁄figuøti⁄_des¸ùt‹
;

572 
	mbLígth
;

573 
	mbDes¸ùt‹Ty≥
;

574 
	mbI¡îÁ˚Numbî
;

575 
	mbA…î«ãSëtög
;

577 
	mbNumEndpoöts
;

579 
	mbI¡îÁ˚Cœss
;

580 
	mbI¡îÁ˚SubCœss
;

581 
	mbI¡îÁ˚PrŸocﬁ
;

582 
	miI¡îÁ˚
;

584 } 
	tS_usb_öãrÁ˚_des¸ùt‹
;

596 
	mbLígth
;

597 
	mbDes¸ùt‹Ty≥
;

598 
	mbEndpoötAddªss
;

600 
	mbmAâribuãs
;

601 
	mwMaxPackëSize
;

603 
	mbI¡îvÆ
;

605 } 
	tS_usb_ídpoöt_des¸ùt‹
;

616 
	mbLígth
;

617 
	mbDes¸ùt‹Ty≥
;

618 
	mbscUSB
;

619 
	mbDevi˚Cœss
;

620 
	mbDevi˚SubCœss
;

621 
	mbDevi˚PrŸocﬁ
;

622 
	mbMaxPackëSize0
;

623 
	mbNumC⁄figuøti⁄s
;

624 
	mbRe£rved
;

626 } 
	tS_usb_devi˚_quÆifõr_des¸ùt‹
;

638 
	mbLígth
;

639 
	mbDes¸ùt‹Ty≥
;

640 
	mwLANGID
;

642 } 
	tS_usb_œnguage_id
;

647 
_S_usb
 
	tS_usb
;

660 (*
	tS_usb_öô
)(c⁄° 
	tS_usb
 *);

670 (*
	tS_usb_ª£t
)(c⁄° 
	tS_usb
 *);

681 (*
	tS_usb_su•íd
)(c⁄° 
	tS_usb
 *);

694 (*
	tS_usb_ªsume
)(c⁄° 
	tS_usb
 *);

703 (*
	tS_usb_√w_ªque°
)(c⁄° 
	tS_usb
 *);

711 (*
	tS_usb_öt_sof
)(c⁄° 
	tS_usb
 *);

714 (*
	tS_usb_wrôe
)(c⁄° 
	tS_usb
 *
	tpUsb
,

715 
	tbEndpoöt
,

716 c⁄° *
	tpD©a
,

717 
	tdLígth
,

718 
	tCÆlback_f
 
	tfCÆlback
,

719 *
	tpArgumít
);

720 (*
	tS_usb_ªad
)(c⁄° 
	tS_usb
 *
	tpUsb
,

721 
	tbEndpoöt
,

722 *
	tpD©a
,

723 
	tdLígth
,

724 
	tCÆlback_f
 
	tfCÆlback
,

725 *
	tpArgumít
);

726 (*
	tS_usb_°Æl
)(c⁄° 
	tS_usb
 *
	tpUsb
,

727 
	tbEndpoöt
);

728 (*
	tS_usb_hÆt
)(c⁄° 
	tS_usb
 *
	tpUsb
,

729 
	tbEndpoöt
,

730 
	tbReque°
);

731 (*
	tS_usb_ªmŸe_wakeup
)(c⁄° 
	tS_usb
 *
	tpUsb
);

732 (*
	tS_usb_cfg_ídpoöt
)(c⁄° 
	tS_usb
 * 
	tpUsb
,

733 c⁄° 
	tS_usb_ídpoöt_des¸ùt‹
 *
	tpEpDesc
);

734 (*
	tS_usb_©èch
)(c⁄° 
	tS_usb
 *);

735 (*
	tS_usb_£t_addªss
)(c⁄° 
	tS_usb
 *);

736 (*
	tS_usb_£t_cfg
)(c⁄° 
	tS_usb
 *);

737 (*
	tS_usb_h™dÀr
)(c⁄° 
	tS_usb
 *);

738 (*
	tS_usb_c⁄√˘
)(c⁄° 
	tS_usb
 *);

739 (*
	tS_usb_disc⁄√˘
)(c⁄° 
	tS_usb
 *);

757 *
pD©a
;

760 
dByãsRemaöög
;

762 
dByãsBuf„ªd
;

765 
dByãsTøns„ºed
;

768 
CÆlback_f
 
fCÆlback
;

771 *
pArgumít
;

774 
wMaxPackëSize
;

776 
dFœg
;

778 
dNumFIFO
;

781 vﬁ©ûê
dSèã
;

783 } 
	tS_usb_ídpoöt
;

797 
S_usb_öô
 
öô
;

798 
S_usb_wrôe
 
wrôe
;

799 
S_usb_ªad
 
ªad
;

800 
S_usb_°Æl
 
°Æl
;

801 
S_usb_hÆt
 
hÆt
;

802 
S_usb_ªmŸe_wakeup
 
ªmŸeWakeUp
;

803 
S_usb_cfg_ídpoöt
 
c⁄figuªEndpoöt
;

804 
S_usb_©èch
 
©èch
;

805 
S_usb_£t_addªss
 
£tAddªss
;

806 
S_usb_£t_cfg
 
£tC⁄figuøti⁄
;

807 
S_usb_h™dÀr
 
h™dÀr
;

808 
S_usb_c⁄√˘
 
c⁄√˘
;

809 
S_usb_disc⁄√˘
 
disc⁄√˘
;

811 } 
	tS_drivî_mëhods
;

830 * 
pI¡îÁ˚
;

832 * 
pEndpoötFIFO
;

835 * 
pDMAI¡îÁ˚
;

839 
dID
;

841 
dPMC
;

843 c⁄° 
S_drivî_mëhods
* 
pMëhods
;

845 } 
	tS_usb_drivî
;

860 
S_usb_öô
 
öô
;

861 
S_usb_ª£t
 
ª£t
;

862 
S_usb_su•íd
 
su•íd
;

863 
S_usb_ªsume
 
ªsume
;

864 
S_usb_√w_ªque°
 
√wReque°
;

865 
S_usb_öt_sof
 
°¨tOfFøme
;

867 } 
	tS_usb_ˇŒbacks
;

879 
	s_S_usb
 {

881 c⁄° 
S_usb_drivî
 *
pDrivî
;

882 
S_usb_ídpoöt
* 
pEndpoöts
;

883 
dNumEndpoöts
;

884 
S_usb_ˇŒbacks
 *
pCÆlbacks
;

885 
S_usb_ªque°
* 
pSëup
;

887 vﬁ©ûê* 
pSèã
;

903 
	#USB_ENDPOINT_SINGLEBANK
 {0,0,0,0,0,0,0,0,1,0
	}

	)
}

906 
	#USB_ENDPOINT_DUALBANK
 {0,0,0,0,0,0,0,0,2,0}

	)

927 
S_usb_ídpoöt
 * 
USB_GëEndpoöt
(c⁄° 
S_usb
 *
pUsb
,

928 
bEndpoöt
);

935 
S_usb_ªque°
 * 
USB_GëSëup
(c⁄° 
S_usb
 *
pUsb
);

943 * 
USB_GëDrivîI¡îÁ˚
(c⁄° 
S_usb
 *
pUsb
) ;

949 
USB_GëDrivîID
(c⁄° 
S_usb
 *
pUsb
);

957 
USB_GëDrivîPMC
(c⁄° 
S_usb
 *
pUsb
) ;

1034 
USB_Wrôe
(c⁄° 
S_usb
 *
pUsb
,

1035 
bEndpoöt
,

1036 c⁄° *
pD©a
,

1037 
dLígth
,

1038 
CÆlback_f
 
fCÆlback
,

1039 *
pArgumít
);

1056 
USB_SídZLP0
(c⁄° 
S_usb
 *
pUsb
,

1057 
CÆlback_f
 
fCÆlback
,

1058 *
pArgumít
) ;

1080 
USB_Ród
(c⁄° 
S_usb
 *
pUsb
,

1081 
bEndpoöt
,

1082 *
pD©a
,

1083 
dLígth
,

1084 
CÆlback_f
 
fCÆlback
,

1085 *
pArgumít
);

1100 
USB_SèŒ
(c⁄° 
S_usb
 *
pUsb
, 
bEndpoöt
);

1107 
USB_RemŸeWakeUp
(c⁄° 
S_usb
 *
pUsb
);

1121 
USB_HÆt
(c⁄° 
S_usb
 *
pUsb
,

1122 
bEndpoöt
,

1123 
bReque°
);

1136 
USB_SëAddªss
(c⁄° 
S_usb
 *
pUsb
);

1150 
USB_SëC⁄figuøti⁄
(c⁄° 
S_usb
 *
pUsb
);

1166 
USB_C⁄figuªEndpoöt
(c⁄° 
S_usb
 *
pUsb
,

1167 c⁄° 
S_usb_ídpoöt_des¸ùt‹
 *
pEpDesc
);

1185 
USB_H™dÀr
(c⁄° 
S_usb
 * 
pUsb
);

1205 
USB_Aâach
(c⁄° 
S_usb
 *
pUsb
);

1216 
USB_C⁄√˘
(c⁄° 
S_usb
 *
pUsb
);

1227 
USB_Disc⁄√˘
(c⁄° 
S_usb
 *
pUsb
);

1239 
USB_Inô
(c⁄° 
S_usb
 *
pUsb
);

1249 
USB_GëSèã
(c⁄° 
S_usb
 *
pUsb
);

1266 c⁄° 
S_drivî_mëhods
 
sUDPMëhods
;

1275 
	#COMM_NUM_ENDPOINTS
 3

	)

	@usb/usbtest.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__©åibuã_u£d__


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@
1
.
0
18
298
adc/adc_spi.c
adc/adc_spi.h
adc/adc_spi.mod.c
keyb/keyb_max7347.c
keyb/keyb_max7347.h
keyb/keyb_max7347.mod.c
lcdbl/lcd_back.c
lcdbl/lcd_back.h
lcdbl/lcd_back.mod.c
usb/AT91SAM9261.h
usb/a.c
usb/common.h
usb/enumeration_example.c
usb/standard.c
usb/standard.h
usb/udp.c
usb/usb.h
usb/usbtest.mod.c
